!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABS	bosch/bmi160.h	1074;"	d
ABS_CONTROL_REPORT	ga1auv100.h	64;"	d
ABS_LUX_REPORT	ga1auv100.h	65;"	d
ABS_UV_REPORT	ga1auv100.h	66;"	d
ABS_WAKE	ga1auv100.h	63;"	d
ACCEL_LOWPOWER	bosch/bmi160.h	3455;"	d
ACCEL_MODE_NORMAL	bosch/bmi160.h	3454;"	d
ACCEL_OFFSET_ENABLE	bosch/bmi160.h	3236;"	d
ACCEL_SUSPEND	bosch/bmi160.h	3456;"	d
ACC_DATA_FLAG	akm09911.h	76;"	d
ACC_DATA_READY	akm09911.h	81;"	d
ACC_FIFO_HEAD	bosch/bmi160_driver.h	143;"	d
AK09911_FUSE_ASAX	akm09911.h	27;"	d
AK09911_FUSE_ASAY	akm09911.h	28;"	d
AK09911_FUSE_ASAZ	akm09911.h	29;"	d
AK09911_MODE_CONTINUOUS_100HZ	akm09911.h	38;"	d
AK09911_MODE_CONTINUOUS_10HZ	akm09911.h	35;"	d
AK09911_MODE_CONTINUOUS_20HZ	akm09911.h	36;"	d
AK09911_MODE_CONTINUOUS_50HZ	akm09911.h	37;"	d
AK09911_MODE_FUSE_ACCESS	akm09911.h	33;"	d
AK09911_MODE_POWERDOWN	akm09911.h	34;"	d
AK09911_MODE_SELF_TEST	akm09911.h	32;"	d
AK09911_MODE_SNG_MEASURE	akm09911.h	31;"	d
AK09911_REGS_SIZE	akm09911.h	41;"	d
AK09911_REG_CNTL1	akm09911.h	23;"	d
AK09911_REG_CNTL2	akm09911.h	24;"	d
AK09911_REG_CNTL3	akm09911.h	25;"	d
AK09911_REG_HXH	akm09911.h	16;"	d
AK09911_REG_HXL	akm09911.h	15;"	d
AK09911_REG_HYH	akm09911.h	18;"	d
AK09911_REG_HYL	akm09911.h	17;"	d
AK09911_REG_HZH	akm09911.h	20;"	d
AK09911_REG_HZL	akm09911.h	19;"	d
AK09911_REG_INFO1	akm09911.h	12;"	d
AK09911_REG_INFO2	akm09911.h	13;"	d
AK09911_REG_ST1	akm09911.h	14;"	d
AK09911_REG_ST2	akm09911.h	22;"	d
AK09911_REG_TMPS	akm09911.h	21;"	d
AK09911_REG_WIA1	akm09911.h	10;"	d
AK09911_REG_WIA2	akm09911.h	11;"	d
AK09911_RESET_DATA	akm09911.h	39;"	d
AK09911_WIA1_VALUE	akm09911.h	42;"	d
AK09911_WIA2_VALUE	akm09911.h	43;"	d
AKECS_GetCloseStatus	akm09911.c	/^static int AKECS_GetCloseStatus($/;"	f	file:
AKECS_GetData	akm09911.c	/^static int AKECS_GetData($/;"	f	file:
AKECS_GetData_Poll	akm09911.c	/^static int AKECS_GetData_Poll($/;"	f	file:
AKECS_GetOpenStatus	akm09911.c	/^static int AKECS_GetOpenStatus($/;"	f	file:
AKECS_Open	akm09911.c	/^static int AKECS_Open(struct inode *inode, struct file *file)$/;"	f	file:
AKECS_Release	akm09911.c	/^static int AKECS_Release(struct inode *inode, struct file *file)$/;"	f	file:
AKECS_Reset	akm09911.c	/^static int AKECS_Reset($/;"	f	file:
AKECS_SetMode	akm09911.c	/^static int AKECS_SetMode($/;"	f	file:
AKECS_SetYPR	akm09911.c	/^static void AKECS_SetYPR($/;"	f	file:
AKECS_Set_CNTL	akm09911.c	/^static int AKECS_Set_CNTL($/;"	f	file:
AKECS_Set_PowerDown	akm09911.c	/^static int AKECS_Set_PowerDown($/;"	f	file:
AKECS_fops	akm09911.c	/^static const struct file_operations AKECS_fops = {$/;"	v	typeref:struct:file_operations	file:
AKECS_ioctl	akm09911.c	/^AKECS_ioctl(struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
AKM09911_H	akm09911.h	5;"	d
AKM09911_SENSITIVITY_DIV	bosch/bmi160.h	1081;"	d
AKM09911_VDD_MAX_UV	akm09911.c	48;"	d	file:
AKM09911_VDD_MIN_UV	akm09911.c	47;"	d	file:
AKM09911_VIO_MAX_UV	akm09911.c	50;"	d	file:
AKM09911_VIO_MIN_UV	akm09911.c	49;"	d	file:
AKM09912_CHIP_ID_REG	bosch/bmi160.h	1091;"	d
AKM09912_SENSITIVITY	bosch/bmi160.h	1080;"	d
AKM09912_SENSITIVITY_DIV	bosch/bmi160.h	1079;"	d
AKMIO	akm09911.h	85;"	d
AKM_ASAX	bosch/bmi160.h	1082;"	d
AKM_ASAY	bosch/bmi160.h	1083;"	d
AKM_ASAZ	bosch/bmi160.h	1084;"	d
AKM_BASE_NUM	akm09911.c	42;"	d	file:
AKM_DATA_REGISTER	bosch/bmi160.h	1089;"	d
AKM_DEBUG_IF	akm09911.c	38;"	d	file:
AKM_DOR_IS_HIGH	akm09911.h	55;"	d
AKM_DRDY_IS_HIGH	akm09911.h	54;"	d
AKM_DRDY_TIMEOUT_MS	akm09911.c	41;"	d	file:
AKM_FUSE_1ST_ADDR	akm09911.h	64;"	d
AKM_FUSE_ROM_MODE	bosch/bmi160.h	1086;"	d
AKM_HAS_RESET	akm09911.c	39;"	d	file:
AKM_I2C_NAME	akm09911.h	46;"	d
AKM_INPUT_DEVICE_NAME	akm09911.c	40;"	d	file:
AKM_IS_MAG_DATA_ENABLED	akm09911.c	44;"	d	file:
AKM_MEASURE_TIME_US	akm09911.h	53;"	d
AKM_MISCDEV_NAME	akm09911.h	47;"	d
AKM_MODE_CONTINUOUS_100HZ	akm09911.h	73;"	d
AKM_MODE_CONTINUOUS_10HZ	akm09911.h	70;"	d
AKM_MODE_CONTINUOUS_20HZ	akm09911.h	71;"	d
AKM_MODE_CONTINUOUS_50HZ	akm09911.h	72;"	d
AKM_MODE_FUSE_ACCESS	akm09911.h	68;"	d
AKM_MODE_POWERDOWN	akm09911.h	69;"	d
AKM_MODE_SELF_TEST	akm09911.h	67;"	d
AKM_MODE_SNG_MEASURE	akm09911.h	66;"	d
AKM_NUM_SENSORS	akm09911.h	79;"	d
AKM_POWER_DOWN_MODE	bosch/bmi160.h	3423;"	d
AKM_POWER_DOWN_MODE_DATA	bosch/bmi160.h	1085;"	d
AKM_POWER_MODE_REG	bosch/bmi160.h	1087;"	d
AKM_REGS_1ST_ADDR	akm09911.h	63;"	d
AKM_REGS_SIZE	akm09911.h	62;"	d
AKM_REG_MODE	akm09911.h	50;"	d
AKM_REG_RESET	akm09911.h	51;"	d
AKM_REG_STATUS	akm09911.h	52;"	d
AKM_RESET_DATA	akm09911.h	74;"	d
AKM_RWBUF_SIZE	akm09911.h	61;"	d
AKM_SENSOR_CONF_SIZE	akm09911.h	57;"	d
AKM_SENSOR_DATA_SIZE	akm09911.h	58;"	d
AKM_SENSOR_INFO_SIZE	akm09911.h	56;"	d
AKM_SINGLE_MEASUREMENT_MODE	bosch/bmi160.h	1088;"	d
AKM_SINGLE_MEAS_MODE	bosch/bmi160.h	3424;"	d
AKM_SYSCLS_NAME	akm09911.h	48;"	d
AKM_SYSDEV_NAME	akm09911.h	49;"	d
AKM_YPR_DATA_SIZE	akm09911.h	60;"	d
ALS_DATA_MASK	ltr553.c	88;"	d	file:
ALS_GAIN_SWITCH_THRESHOLD	ltr553.c	83;"	d	file:
ALS_HIGH_BYTE	ltr553.c	90;"	d	file:
ALS_H_to_L_counts	ga1auv100.c	84;"	d	file:
ALS_LOW_BYTE	ltr553.c	89;"	d	file:
ALS_L_to_H_counts	ga1auv100.c	83;"	d	file:
ALS_NAME	helix.c	174;"	d	file:
ANY_MOTION	bosch/bmi160.h	3507;"	d
AW2013_LED_RESET_DELAY	aw2013_led.c	23;"	d	file:
AW2013_LED_VTG_MAX_UV	aw2013_led.c	20;"	d	file:
AW2013_LED_VTG_MIN_UV	aw2013_led.c	19;"	d	file:
AW_CHIP_ID	aw2013_led.c	39;"	d	file:
AW_LED_BREATHE_MODE_MASK	aw2013_led.c	43;"	d	file:
AW_LED_CDEV_NAME	aw2013_led.c	24;"	d	file:
AW_LED_FADE_OFF_MASK	aw2013_led.c	41;"	d	file:
AW_LED_FADE_ON_MASK	aw2013_led.c	42;"	d	file:
AW_LED_MOUDLE_ENABLE_MASK	aw2013_led.c	40;"	d	file:
AW_LED_RESET_MASK	aw2013_led.c	44;"	d	file:
AW_REG_CHIP_ID	aw2013_led.c	27;"	d	file:
AW_REG_DELAY_PERIOD_BASE	aw2013_led.c	36;"	d	file:
AW_REG_GLOBAL_CONTROL	aw2013_led.c	29;"	d	file:
AW_REG_LED_BRIGHTNESS_BASE	aw2013_led.c	33;"	d	file:
AW_REG_LED_CONFIG_BASE	aw2013_led.c	32;"	d	file:
AW_REG_LED_ENABLE	aw2013_led.c	31;"	d	file:
AW_REG_LED_STATUS	aw2013_led.c	30;"	d	file:
AW_REG_RESET	aw2013_led.c	28;"	d	file:
AW_REG_TIMESET0_BASE	aw2013_led.c	34;"	d	file:
AW_REG_TIMESET1_BASE	aw2013_led.c	35;"	d	file:
AXIS_MAX	bosch/bmi160_driver.c	/^	AXIS_MAX$/;"	e	enum:BMI_AXIS_TYPE	file:
A_BYTES_FRM	bosch/bmi160_driver.h	135;"	d
BMI160_ACCEL_CIC_AVG8	bosch/bmi160.h	3179;"	d
BMI160_ACCEL_DATA_LENGTH	bosch/bmi160.h	596;"	d
BMI160_ACCEL_NORMAL_AVG4	bosch/bmi160.h	3178;"	d
BMI160_ACCEL_OSR2_AVG2	bosch/bmi160.h	3177;"	d
BMI160_ACCEL_OSR4_AVG1	bosch/bmi160.h	3176;"	d
BMI160_ACCEL_OUTPUT_DATA_RATE_0_78HZ	bosch/bmi160.h	3158;"	d
BMI160_ACCEL_OUTPUT_DATA_RATE_100HZ	bosch/bmi160.h	3165;"	d
BMI160_ACCEL_OUTPUT_DATA_RATE_12_5HZ	bosch/bmi160.h	3162;"	d
BMI160_ACCEL_OUTPUT_DATA_RATE_1600HZ	bosch/bmi160.h	3169;"	d
BMI160_ACCEL_OUTPUT_DATA_RATE_1_56HZ	bosch/bmi160.h	3159;"	d
BMI160_ACCEL_OUTPUT_DATA_RATE_200HZ	bosch/bmi160.h	3166;"	d
BMI160_ACCEL_OUTPUT_DATA_RATE_25HZ	bosch/bmi160.h	3163;"	d
BMI160_ACCEL_OUTPUT_DATA_RATE_3_12HZ	bosch/bmi160.h	3160;"	d
BMI160_ACCEL_OUTPUT_DATA_RATE_400HZ	bosch/bmi160.h	3167;"	d
BMI160_ACCEL_OUTPUT_DATA_RATE_50HZ	bosch/bmi160.h	3164;"	d
BMI160_ACCEL_OUTPUT_DATA_RATE_6_25HZ	bosch/bmi160.h	3161;"	d
BMI160_ACCEL_OUTPUT_DATA_RATE_800HZ	bosch/bmi160.h	3168;"	d
BMI160_ACCEL_OUTPUT_DATA_RATE_RESERVED	bosch/bmi160.h	3157;"	d
BMI160_ACCEL_OUTPUT_DATA_RATE_RESERVED0	bosch/bmi160.h	3170;"	d
BMI160_ACCEL_OUTPUT_DATA_RATE_RESERVED1	bosch/bmi160.h	3171;"	d
BMI160_ACCEL_OUTPUT_DATA_RATE_RESERVED2	bosch/bmi160.h	3172;"	d
BMI160_ACCEL_RANGE0	bosch/bmi160.h	445;"	d
BMI160_ACCEL_RANGE1	bosch/bmi160.h	446;"	d
BMI160_ACCEL_RANGE3	bosch/bmi160.h	447;"	d
BMI160_ACCEL_RANGE4	bosch/bmi160.h	448;"	d
BMI160_ACCEL_RANGE_16G	bosch/bmi160.h	3153;"	d
BMI160_ACCEL_RANGE_2G	bosch/bmi160.h	3150;"	d
BMI160_ACCEL_RANGE_4G	bosch/bmi160.h	3151;"	d
BMI160_ACCEL_RANGE_8G	bosch/bmi160.h	3152;"	d
BMI160_ACCEL_RES_AVG128	bosch/bmi160.h	3183;"	d
BMI160_ACCEL_RES_AVG16	bosch/bmi160.h	3180;"	d
BMI160_ACCEL_RES_AVG32	bosch/bmi160.h	3181;"	d
BMI160_ACCEL_RES_AVG64	bosch/bmi160.h	3182;"	d
BMI160_ACCEL_XYZ_DATA_LENGTH	bosch/bmi160.h	597;"	d
BMI160_ACCEL_XYZ_DATA_SIZE	bosch/bmi160.h	620;"	d
BMI160_ACCEL_X_DATA_SIZE	bosch/bmi160.h	617;"	d
BMI160_ACCEL_X_LSB_BYTE	bosch/bmi160.h	689;"	d
BMI160_ACCEL_X_MSB_BYTE	bosch/bmi160.h	690;"	d
BMI160_ACCEL_Y_DATA_SIZE	bosch/bmi160.h	618;"	d
BMI160_ACCEL_Y_LSB_BYTE	bosch/bmi160.h	691;"	d
BMI160_ACCEL_Y_MSB_BYTE	bosch/bmi160.h	692;"	d
BMI160_ACCEL_Z_DATA_SIZE	bosch/bmi160.h	619;"	d
BMI160_ACCEL_Z_LSB_BYTE	bosch/bmi160.h	693;"	d
BMI160_ACCEL_Z_MSB_BYTE	bosch/bmi160.h	694;"	d
BMI160_AKM09911_I2C_ADDRESS	bosch/bmi160.h	416;"	d
BMI160_AKM09912_I2C_ADDRESS	bosch/bmi160.h	426;"	d
BMI160_AKM_INIT_DELAY	bosch/bmi160.h	613;"	d
BMI160_AKM_SENSITIVITY_DATA_SIZE	bosch/bmi160.h	641;"	d
BMI160_ANY_MOTION_X_ENABLE	bosch/bmi160.h	3243;"	d
BMI160_ANY_MOTION_Y_ENABLE	bosch/bmi160.h	3244;"	d
BMI160_ANY_MOTION_Z_ENABLE	bosch/bmi160.h	3245;"	d
BMI160_AUX_AKM09911_I2C_ADDR_2	bosch/bmi160.h	418;"	d
BMI160_AUX_AKM09912_I2C_ADDR_1	bosch/bmi160.h	420;"	d
BMI160_AUX_AKM09912_I2C_ADDR_2	bosch/bmi160.h	422;"	d
BMI160_AUX_AKM09912_I2C_ADDR_3	bosch/bmi160.h	424;"	d
BMI160_AUX_BMM150_I2C_ADDRESS	bosch/bmi160.h	413;"	d
BMI160_AUX_YAS532_I2C_ADDRESS	bosch/bmi160.h	414;"	d
BMI160_BMM150_CHIP_ID	bosch/bmi160.h	3408;"	d
BMI160_BMM150_DATA_REG	bosch/bmi160.h	3411;"	d
BMI160_BMM150_DIG_DIG_XYZ1_LSB	bosch/bmi160.h	1117;"	d
BMI160_BMM150_DIG_DIG_XYZ1_MSB	bosch/bmi160.h	1118;"	d
BMI160_BMM150_DIG_DIG_Z3_LSB	bosch/bmi160.h	1113;"	d
BMI160_BMM150_DIG_DIG_Z3_MSB	bosch/bmi160.h	1114;"	d
BMI160_BMM150_DIG_DIG_Z4_LSB	bosch/bmi160.h	1115;"	d
BMI160_BMM150_DIG_DIG_Z4_MSB	bosch/bmi160.h	1116;"	d
BMI160_BMM150_DIG_X1	bosch/bmi160.h	1103;"	d
BMI160_BMM150_DIG_X2	bosch/bmi160.h	1105;"	d
BMI160_BMM150_DIG_XY1	bosch/bmi160.h	1107;"	d
BMI160_BMM150_DIG_XY2	bosch/bmi160.h	1108;"	d
BMI160_BMM150_DIG_Y1	bosch/bmi160.h	1104;"	d
BMI160_BMM150_DIG_Y3	bosch/bmi160.h	1106;"	d
BMI160_BMM150_DIG_Z1_LSB	bosch/bmi160.h	1109;"	d
BMI160_BMM150_DIG_Z1_MSB	bosch/bmi160.h	1110;"	d
BMI160_BMM150_DIG_Z2_LSB	bosch/bmi160.h	1111;"	d
BMI160_BMM150_DIG_Z2_MSB	bosch/bmi160.h	1112;"	d
BMI160_BMM150_FORCE_MODE	bosch/bmi160.h	1099;"	d
BMI160_BMM150_MAX_RETRY_WAKEUP	bosch/bmi160.h	1096;"	d
BMI160_BMM150_POWER_OFF	bosch/bmi160.h	1098;"	d
BMI160_BMM150_POWER_ON	bosch/bmi160.h	1097;"	d
BMI160_BMM150_POWER_ON_FAIL	bosch/bmi160.h	1101;"	d
BMI160_BMM150_POWER_ON_SUCCESS	bosch/bmi160.h	1100;"	d
BMI160_BMM150_POWE_CONTROL_REG	bosch/bmi160.h	3409;"	d
BMI160_BMM150_POWE_MODE_REG	bosch/bmi160.h	3410;"	d
BMI160_BMM150_SET_POWER_CONTROL	bosch/bmi160.h	1095;"	d
BMI160_BMM150_WAKEUP_DELAY1	bosch/bmi160.h	605;"	d
BMI160_BMM150_WAKEUP_DELAY2	bosch/bmi160.h	606;"	d
BMI160_BMM150_WAKEUP_DELAY3	bosch/bmi160.h	607;"	d
BMI160_BMM150_XY_REP	bosch/bmi160.h	3412;"	d
BMI160_BMM150_Z_REP	bosch/bmi160.h	3413;"	d
BMI160_BMM_POWER_MODE_REG	bosch/bmi160.h	3552;"	d
BMI160_BRD_FUNC_PTR	bosch/bmi160.h	/^BMI160_BRD_FUNC_PTR;\/**< burst write function pointer *\/$/;"	m	struct:bmi160_t
BMI160_BRD_FUNC_PTR	bosch/bmi160.h	372;"	d
BMI160_BST_AKM_ASAX	bosch/bmi160.h	3417;"	d
BMI160_BST_AKM_ASAY	bosch/bmi160.h	3418;"	d
BMI160_BST_AKM_ASAZ	bosch/bmi160.h	3419;"	d
BMI160_BURST_READ_FUNC	bosch/bmi160.h	401;"	d
BMI160_BUS_READ_FUNC	bosch/bmi160.h	398;"	d
BMI160_BUS_WRITE_FUNC	bosch/bmi160.h	346;"	d
BMI160_CMD_COMMANDS_ADDR	bosch/bmi160.h	923;"	d
BMI160_CMD_COMMANDS__LEN	bosch/bmi160.h	3108;"	d
BMI160_CMD_COMMANDS__MSK	bosch/bmi160.h	3109;"	d
BMI160_CMD_COMMANDS__POS	bosch/bmi160.h	3107;"	d
BMI160_CMD_COMMANDS__REG	bosch/bmi160.h	3110;"	d
BMI160_CMD_EXT_MODE_ADDR	bosch/bmi160.h	927;"	d
BMI160_CMD_PAGING_EN__LEN	bosch/bmi160.h	3122;"	d
BMI160_CMD_PAGING_EN__MSK	bosch/bmi160.h	3123;"	d
BMI160_CMD_PAGING_EN__POS	bosch/bmi160.h	3121;"	d
BMI160_CMD_PAGING_EN__REG	bosch/bmi160.h	3124;"	d
BMI160_CMD_TARGET_PAGE__LEN	bosch/bmi160.h	3116;"	d
BMI160_CMD_TARGET_PAGE__MSK	bosch/bmi160.h	3117;"	d
BMI160_CMD_TARGET_PAGE__POS	bosch/bmi160.h	3115;"	d
BMI160_CMD_TARGET_PAGE__REG	bosch/bmi160.h	3118;"	d
BMI160_COMMAND_REG_ONE	bosch/bmi160.h	3571;"	d
BMI160_COMMAND_REG_THREE	bosch/bmi160.h	3573;"	d
BMI160_COMMAND_REG_TWO	bosch/bmi160.h	3572;"	d
BMI160_COM_C_TRIM_FIVE_ADDR	bosch/bmi160.h	928;"	d
BMI160_COM_C_TRIM_FIVE__LEN	bosch/bmi160.h	3128;"	d
BMI160_COM_C_TRIM_FIVE__MSK	bosch/bmi160.h	3129;"	d
BMI160_COM_C_TRIM_FIVE__POS	bosch/bmi160.h	3127;"	d
BMI160_COM_C_TRIM_FIVE__REG	bosch/bmi160.h	3130;"	d
BMI160_DATA_FRAME_ACCEL_X_LSB_BYTE	bosch/bmi160.h	695;"	d
BMI160_DATA_FRAME_ACCEL_X_MSB_BYTE	bosch/bmi160.h	696;"	d
BMI160_DATA_FRAME_ACCEL_Y_LSB_BYTE	bosch/bmi160.h	697;"	d
BMI160_DATA_FRAME_ACCEL_Y_MSB_BYTE	bosch/bmi160.h	698;"	d
BMI160_DATA_FRAME_ACCEL_Z_LSB_BYTE	bosch/bmi160.h	699;"	d
BMI160_DATA_FRAME_ACCEL_Z_MSB_BYTE	bosch/bmi160.h	700;"	d
BMI160_DATA_FRAME_GYRO_X_LSB_BYTE	bosch/bmi160.h	682;"	d
BMI160_DATA_FRAME_GYRO_X_MSB_BYTE	bosch/bmi160.h	683;"	d
BMI160_DATA_FRAME_GYRO_Y_LSB_BYTE	bosch/bmi160.h	684;"	d
BMI160_DATA_FRAME_GYRO_Y_MSB_BYTE	bosch/bmi160.h	685;"	d
BMI160_DATA_FRAME_GYRO_Z_LSB_BYTE	bosch/bmi160.h	686;"	d
BMI160_DATA_FRAME_GYRO_Z_MSB_BYTE	bosch/bmi160.h	687;"	d
BMI160_DATA_FRAME_MAG_R_LSB_BYTE	bosch/bmi160.h	673;"	d
BMI160_DATA_FRAME_MAG_R_MSB_BYTE	bosch/bmi160.h	674;"	d
BMI160_DATA_FRAME_MAG_X_LSB_BYTE	bosch/bmi160.h	667;"	d
BMI160_DATA_FRAME_MAG_X_MSB_BYTE	bosch/bmi160.h	668;"	d
BMI160_DATA_FRAME_MAG_Y_LSB_BYTE	bosch/bmi160.h	669;"	d
BMI160_DATA_FRAME_MAG_Y_MSB_BYTE	bosch/bmi160.h	670;"	d
BMI160_DATA_FRAME_MAG_Z_LSB_BYTE	bosch/bmi160.h	671;"	d
BMI160_DATA_FRAME_MAG_Z_MSB_BYTE	bosch/bmi160.h	672;"	d
BMI160_DATA_RDY_ENABLE	bosch/bmi160.h	3256;"	d
BMI160_DELAY_SETTLING_TIME	bosch/bmi160.h	723;"	d
BMI160_DISABLE	bosch/bmi160.h	3473;"	d
BMI160_DOUBLE_TAP_ENABLE	bosch/bmi160.h	3246;"	d
BMI160_EDGE	bosch/bmi160.h	3477;"	d
BMI160_ENABLE	bosch/bmi160.h	3472;"	d
BMI160_ENABLE_ANY_MOTION_AXIS	bosch/bmi160.h	3553;"	d
BMI160_ENABLE_ANY_MOTION_INTR1	bosch/bmi160.h	3549;"	d
BMI160_ENABLE_ANY_MOTION_INTR2	bosch/bmi160.h	3550;"	d
BMI160_ENABLE_LOW_G	bosch/bmi160.h	3554;"	d
BMI160_ENABLE_MAG_IF_MODE	bosch/bmi160.h	3548;"	d
BMI160_FIFO_AG_LENGTH	bosch/bmi160.h	582;"	d
BMI160_FIFO_AMG_LENGTH	bosch/bmi160.h	583;"	d
BMI160_FIFO_A_ENABLE	bosch/bmi160.h	3566;"	d
BMI160_FIFO_A_LENGTH	bosch/bmi160.h	579;"	d
BMI160_FIFO_DATA_LENGTH	bosch/bmi160.h	599;"	d
BMI160_FIFO_DATA_SIZE	bosch/bmi160.h	637;"	d
BMI160_FIFO_FULL_ENABLE	bosch/bmi160.h	3257;"	d
BMI160_FIFO_GYRO_ENABLE	bosch/bmi160.h	3557;"	d
BMI160_FIFO_G_A_ENABLE	bosch/bmi160.h	3565;"	d
BMI160_FIFO_G_LENGTH	bosch/bmi160.h	580;"	d
BMI160_FIFO_INDEX_LENGTH	bosch/bmi160.h	3448;"	d
BMI160_FIFO_LENGTH_LSB_BYTE	bosch/bmi160.h	705;"	d
BMI160_FIFO_LENGTH_MSB_BYTE	bosch/bmi160.h	706;"	d
BMI160_FIFO_MA_OR_MG_LENGTH	bosch/bmi160.h	584;"	d
BMI160_FIFO_M_A_ENABLE	bosch/bmi160.h	3564;"	d
BMI160_FIFO_M_ENABLE	bosch/bmi160.h	3567;"	d
BMI160_FIFO_M_G_A_ENABLE	bosch/bmi160.h	3562;"	d
BMI160_FIFO_M_G_ENABLE	bosch/bmi160.h	3563;"	d
BMI160_FIFO_M_LENGTH	bosch/bmi160.h	581;"	d
BMI160_FIFO_R_LSB_DATA	bosch/bmi160.h	508;"	d
BMI160_FIFO_R_MSB_DATA	bosch/bmi160.h	509;"	d
BMI160_FIFO_SENSOR_TIME_LENGTH	bosch/bmi160.h	578;"	d
BMI160_FIFO_SENSOR_TIME_LSB	bosch/bmi160.h	575;"	d
BMI160_FIFO_SENSOR_TIME_MSB	bosch/bmi160.h	577;"	d
BMI160_FIFO_SENSOR_TIME_XLSB	bosch/bmi160.h	576;"	d
BMI160_FIFO_TAG_INTR_MASK	bosch/bmi160.h	3449;"	d
BMI160_FIFO_WM_ENABLE	bosch/bmi160.h	3258;"	d
BMI160_FIFO_X_LSB_DATA	bosch/bmi160.h	502;"	d
BMI160_FIFO_X_MSB_DATA	bosch/bmi160.h	503;"	d
BMI160_FIFO_Y_LSB_DATA	bosch/bmi160.h	504;"	d
BMI160_FIFO_Y_MSB_DATA	bosch/bmi160.h	505;"	d
BMI160_FIFO_Z_LSB_DATA	bosch/bmi160.h	506;"	d
BMI160_FIFO_Z_MSB_DATA	bosch/bmi160.h	507;"	d
BMI160_FLAT_ENABLE	bosch/bmi160.h	3249;"	d
BMI160_FOC_STAT_HIGH	bosch/bmi160.h	450;"	d
BMI160_GA_FIFO_A_X_LSB	bosch/bmi160.h	517;"	d
BMI160_GA_FIFO_A_X_MSB	bosch/bmi160.h	518;"	d
BMI160_GA_FIFO_A_Y_LSB	bosch/bmi160.h	519;"	d
BMI160_GA_FIFO_A_Y_MSB	bosch/bmi160.h	520;"	d
BMI160_GA_FIFO_A_Z_LSB	bosch/bmi160.h	521;"	d
BMI160_GA_FIFO_A_Z_MSB	bosch/bmi160.h	522;"	d
BMI160_GA_FIFO_G_X_LSB	bosch/bmi160.h	511;"	d
BMI160_GA_FIFO_G_X_MSB	bosch/bmi160.h	512;"	d
BMI160_GA_FIFO_G_Y_LSB	bosch/bmi160.h	513;"	d
BMI160_GA_FIFO_G_Y_MSB	bosch/bmi160.h	514;"	d
BMI160_GA_FIFO_G_Z_LSB	bosch/bmi160.h	515;"	d
BMI160_GA_FIFO_G_Z_MSB	bosch/bmi160.h	516;"	d
BMI160_GEN_READ_WRITE_DATA_LENGTH	bosch/bmi160.h	433;"	d
BMI160_GEN_READ_WRITE_DELAY	bosch/bmi160.h	609;"	d
BMI160_GET_BITSLICE	bosch/bmi160.h	3578;"	d
BMI160_GYRO_CIC_MODE	bosch/bmi160.h	3202;"	d
BMI160_GYRO_DATA_LENGTH	bosch/bmi160.h	594;"	d
BMI160_GYRO_MANUAL_OFFSET_0_7	bosch/bmi160.h	3531;"	d
BMI160_GYRO_MANUAL_OFFSET_8_9	bosch/bmi160.h	3532;"	d
BMI160_GYRO_NORMAL_MODE	bosch/bmi160.h	3201;"	d
BMI160_GYRO_OSR2_MODE	bosch/bmi160.h	3200;"	d
BMI160_GYRO_OSR4_MODE	bosch/bmi160.h	3199;"	d
BMI160_GYRO_OUTPUT_DATA_RATE_100HZ	bosch/bmi160.h	3190;"	d
BMI160_GYRO_OUTPUT_DATA_RATE_1600HZ	bosch/bmi160.h	3194;"	d
BMI160_GYRO_OUTPUT_DATA_RATE_200HZ	bosch/bmi160.h	3191;"	d
BMI160_GYRO_OUTPUT_DATA_RATE_25HZ	bosch/bmi160.h	3188;"	d
BMI160_GYRO_OUTPUT_DATA_RATE_3200HZ	bosch/bmi160.h	3195;"	d
BMI160_GYRO_OUTPUT_DATA_RATE_400HZ	bosch/bmi160.h	3192;"	d
BMI160_GYRO_OUTPUT_DATA_RATE_50HZ	bosch/bmi160.h	3189;"	d
BMI160_GYRO_OUTPUT_DATA_RATE_800HZ	bosch/bmi160.h	3193;"	d
BMI160_GYRO_OUTPUT_DATA_RATE_RESERVED	bosch/bmi160.h	3187;"	d
BMI160_GYRO_RANGE_1000_DEG_SEC	bosch/bmi160.h	3207;"	d
BMI160_GYRO_RANGE_125_DEG_SEC	bosch/bmi160.h	3210;"	d
BMI160_GYRO_RANGE_2000_DEG_SEC	bosch/bmi160.h	3206;"	d
BMI160_GYRO_RANGE_250_DEG_SEC	bosch/bmi160.h	3209;"	d
BMI160_GYRO_RANGE_500_DEG_SEC	bosch/bmi160.h	3208;"	d
BMI160_GYRO_XYZ_DATA_LENGTH	bosch/bmi160.h	595;"	d
BMI160_GYRO_XYZ_DATA_SIZE	bosch/bmi160.h	625;"	d
BMI160_GYRO_X_DATA_SIZE	bosch/bmi160.h	622;"	d
BMI160_GYRO_X_LSB_BYTE	bosch/bmi160.h	676;"	d
BMI160_GYRO_X_MSB_BYTE	bosch/bmi160.h	677;"	d
BMI160_GYRO_Y_DATA_SIZE	bosch/bmi160.h	623;"	d
BMI160_GYRO_Y_LSB_BYTE	bosch/bmi160.h	678;"	d
BMI160_GYRO_Y_MSB_BYTE	bosch/bmi160.h	679;"	d
BMI160_GYRO_Z_DATA_SIZE	bosch/bmi160.h	624;"	d
BMI160_GYRO_Z_LSB_BYTE	bosch/bmi160.h	680;"	d
BMI160_GYRO_Z_MSB_BYTE	bosch/bmi160.h	681;"	d
BMI160_HARD_OFFSET_DATA_SIZE	bosch/bmi160.h	642;"	d
BMI160_HIGH_G_X_ENABLE	bosch/bmi160.h	3252;"	d
BMI160_HIGH_G_Y_ENABLE	bosch/bmi160.h	3253;"	d
BMI160_HIGH_G_Z_ENABLE	bosch/bmi160.h	3254;"	d
BMI160_I2C_ADDR1	bosch/bmi160.h	411;"	d
BMI160_I2C_ADDR2	bosch/bmi160.h	412;"	d
BMI160_INIT_VALUE	bosch/bmi160.h	432;"	d
BMI160_INPUT	bosch/bmi160.h	3491;"	d
BMI160_INT0	bosch/bmi160_driver.c	/^	BMI160_INT0 = 0,$/;"	e	enum:BMI_INT_TYPE	file:
BMI160_INT1	bosch/bmi160_driver.c	/^	BMI160_INT1,$/;"	e	enum:BMI_INT_TYPE	file:
BMI160_INTR1_EDGE_CTRL	bosch/bmi160.h	3272;"	d
BMI160_INTR1_INPUT_ENABLE	bosch/bmi160.h	3281;"	d
BMI160_INTR1_LEVEL	bosch/bmi160.h	3274;"	d
BMI160_INTR1_MAP_ANY_MOTION	bosch/bmi160.h	3289;"	d
BMI160_INTR1_MAP_DATA_RDY	bosch/bmi160.h	3301;"	d
BMI160_INTR1_MAP_DOUBLE_TAP	bosch/bmi160.h	3293;"	d
BMI160_INTR1_MAP_FIFO_FULL	bosch/bmi160.h	3305;"	d
BMI160_INTR1_MAP_FIFO_WM	bosch/bmi160.h	3303;"	d
BMI160_INTR1_MAP_FLAT	bosch/bmi160.h	3299;"	d
BMI160_INTR1_MAP_HIGH_G	bosch/bmi160.h	3287;"	d
BMI160_INTR1_MAP_LOW_G	bosch/bmi160.h	3285;"	d
BMI160_INTR1_MAP_NOMO	bosch/bmi160.h	3291;"	d
BMI160_INTR1_MAP_ORIENT	bosch/bmi160.h	3297;"	d
BMI160_INTR1_MAP_PMUTRIG	bosch/bmi160.h	3307;"	d
BMI160_INTR1_MAP_SINGLE_TAP	bosch/bmi160.h	3295;"	d
BMI160_INTR1_OUTPUT_ENABLE	bosch/bmi160.h	3278;"	d
BMI160_INTR1_OUTPUT_TYPE	bosch/bmi160.h	3276;"	d
BMI160_INTR2_EDGE_CTRL	bosch/bmi160.h	3273;"	d
BMI160_INTR2_INPUT_ENABLE	bosch/bmi160.h	3282;"	d
BMI160_INTR2_LEVEL	bosch/bmi160.h	3275;"	d
BMI160_INTR2_MAP_ANY_MOTION	bosch/bmi160.h	3290;"	d
BMI160_INTR2_MAP_DATA_RDY	bosch/bmi160.h	3302;"	d
BMI160_INTR2_MAP_DOUBLE_TAP	bosch/bmi160.h	3294;"	d
BMI160_INTR2_MAP_FIFO_FULL	bosch/bmi160.h	3306;"	d
BMI160_INTR2_MAP_FIFO_WM	bosch/bmi160.h	3304;"	d
BMI160_INTR2_MAP_FLAT	bosch/bmi160.h	3300;"	d
BMI160_INTR2_MAP_HIGH_G	bosch/bmi160.h	3288;"	d
BMI160_INTR2_MAP_LOW_G	bosch/bmi160.h	3286;"	d
BMI160_INTR2_MAP_NOMO	bosch/bmi160.h	3292;"	d
BMI160_INTR2_MAP_ORIENT	bosch/bmi160.h	3298;"	d
BMI160_INTR2_MAP_PMUTRIG	bosch/bmi160.h	3308;"	d
BMI160_INTR2_MAP_SINGLE_TAP	bosch/bmi160.h	3296;"	d
BMI160_INTR2_OUTPUT_ENABLE	bosch/bmi160.h	3279;"	d
BMI160_INTR2_OUTPUT_TYPE	bosch/bmi160.h	3277;"	d
BMI160_INT_MAX	bosch/bmi160_driver.c	/^	BMI160_INT_MAX$/;"	e	enum:BMI_INT_TYPE	file:
BMI160_LATCHED	bosch/bmi160.h	3527;"	d
BMI160_LATCH_DUR_10_MILLI_SEC	bosch/bmi160.h	3518;"	d
BMI160_LATCH_DUR_160_MILLI_SEC	bosch/bmi160.h	3522;"	d
BMI160_LATCH_DUR_1_25_MILLI_SEC	bosch/bmi160.h	3515;"	d
BMI160_LATCH_DUR_1_28_SEC	bosch/bmi160.h	3525;"	d
BMI160_LATCH_DUR_20_MILLI_SEC	bosch/bmi160.h	3519;"	d
BMI160_LATCH_DUR_2_56_SEC	bosch/bmi160.h	3526;"	d
BMI160_LATCH_DUR_2_5_MILLI_SEC	bosch/bmi160.h	3516;"	d
BMI160_LATCH_DUR_312_5_MICRO_SEC	bosch/bmi160.h	3513;"	d
BMI160_LATCH_DUR_320_MILLI_SEC	bosch/bmi160.h	3523;"	d
BMI160_LATCH_DUR_40_MILLI_SEC	bosch/bmi160.h	3520;"	d
BMI160_LATCH_DUR_5_MILLI_SEC	bosch/bmi160.h	3517;"	d
BMI160_LATCH_DUR_625_MICRO_SEC	bosch/bmi160.h	3514;"	d
BMI160_LATCH_DUR_640_MILLI_SEC	bosch/bmi160.h	3524;"	d
BMI160_LATCH_DUR_80_MILLI_SEC	bosch/bmi160.h	3521;"	d
BMI160_LATCH_DUR_NONE	bosch/bmi160.h	3512;"	d
BMI160_LEVEL	bosch/bmi160.h	3478;"	d
BMI160_LEVEL_HIGH	bosch/bmi160.h	3483;"	d
BMI160_LEVEL_LOW	bosch/bmi160.h	3482;"	d
BMI160_LOW_G_ENABLE	bosch/bmi160.h	3255;"	d
BMI160_LOW_G_INTR_STAT	bosch/bmi160.h	3560;"	d
BMI160_MAG_DATA_READ_REG	bosch/bmi160.h	3551;"	d
BMI160_MAG_DIG_X1	bosch/bmi160.h	3349;"	d
BMI160_MAG_DIG_X2	bosch/bmi160.h	3353;"	d
BMI160_MAG_DIG_XY1	bosch/bmi160.h	3364;"	d
BMI160_MAG_DIG_XY2	bosch/bmi160.h	3363;"	d
BMI160_MAG_DIG_XYZ1_LSB	bosch/bmi160.h	3359;"	d
BMI160_MAG_DIG_XYZ1_MSB	bosch/bmi160.h	3360;"	d
BMI160_MAG_DIG_Y1	bosch/bmi160.h	3350;"	d
BMI160_MAG_DIG_Y2	bosch/bmi160.h	3354;"	d
BMI160_MAG_DIG_Z1_LSB	bosch/bmi160.h	3357;"	d
BMI160_MAG_DIG_Z1_MSB	bosch/bmi160.h	3358;"	d
BMI160_MAG_DIG_Z2_LSB	bosch/bmi160.h	3355;"	d
BMI160_MAG_DIG_Z2_MSB	bosch/bmi160.h	3356;"	d
BMI160_MAG_DIG_Z3_LSB	bosch/bmi160.h	3361;"	d
BMI160_MAG_DIG_Z3_MSB	bosch/bmi160.h	3362;"	d
BMI160_MAG_DIG_Z4_LSB	bosch/bmi160.h	3351;"	d
BMI160_MAG_DIG_Z4_MSB	bosch/bmi160.h	3352;"	d
BMI160_MAG_ENHANCED_DR	bosch/bmi160.h	3378;"	d
BMI160_MAG_ENHANCED_REPXY	bosch/bmi160.h	3385;"	d
BMI160_MAG_ENHANCED_REPZ	bosch/bmi160.h	3392;"	d
BMI160_MAG_FLIP_OVERFLOW_ADCVAL	bosch/bmi160.h	3403;"	d
BMI160_MAG_FORCE_MODE	bosch/bmi160.h	3429;"	d
BMI160_MAG_HALL_OVERFLOW_ADCVAL	bosch/bmi160.h	3404;"	d
BMI160_MAG_HIGHACCURACY_DR	bosch/bmi160.h	3377;"	d
BMI160_MAG_HIGHACCURACY_REPXY	bosch/bmi160.h	3384;"	d
BMI160_MAG_HIGHACCURACY_REPZ	bosch/bmi160.h	3391;"	d
BMI160_MAG_LOWPOWER_DR	bosch/bmi160.h	3375;"	d
BMI160_MAG_LOWPOWER_REPXY	bosch/bmi160.h	3382;"	d
BMI160_MAG_LOWPOWER_REPZ	bosch/bmi160.h	3389;"	d
BMI160_MAG_NEGATIVE_SATURATION_Z	bosch/bmi160.h	3401;"	d
BMI160_MAG_NOAMRL_SWITCH_TIMES	bosch/bmi160.h	3393;"	d
BMI160_MAG_OUTPUT_DATA_RATE_0_78HZ	bosch/bmi160.h	3215;"	d
BMI160_MAG_OUTPUT_DATA_RATE_100HZ	bosch/bmi160.h	3222;"	d
BMI160_MAG_OUTPUT_DATA_RATE_12_5HZ	bosch/bmi160.h	3219;"	d
BMI160_MAG_OUTPUT_DATA_RATE_1600HZ	bosch/bmi160.h	3226;"	d
BMI160_MAG_OUTPUT_DATA_RATE_1_56HZ	bosch/bmi160.h	3216;"	d
BMI160_MAG_OUTPUT_DATA_RATE_200HZ	bosch/bmi160.h	3223;"	d
BMI160_MAG_OUTPUT_DATA_RATE_25HZ	bosch/bmi160.h	3220;"	d
BMI160_MAG_OUTPUT_DATA_RATE_3_12HZ	bosch/bmi160.h	3217;"	d
BMI160_MAG_OUTPUT_DATA_RATE_400HZ	bosch/bmi160.h	3224;"	d
BMI160_MAG_OUTPUT_DATA_RATE_50HZ	bosch/bmi160.h	3221;"	d
BMI160_MAG_OUTPUT_DATA_RATE_6_25HZ	bosch/bmi160.h	3218;"	d
BMI160_MAG_OUTPUT_DATA_RATE_800HZ	bosch/bmi160.h	3225;"	d
BMI160_MAG_OUTPUT_DATA_RATE_RESERVED	bosch/bmi160.h	3214;"	d
BMI160_MAG_OUTPUT_DATA_RATE_RESERVED0	bosch/bmi160.h	3227;"	d
BMI160_MAG_OUTPUT_DATA_RATE_RESERVED1	bosch/bmi160.h	3228;"	d
BMI160_MAG_OUTPUT_DATA_RATE_RESERVED2	bosch/bmi160.h	3229;"	d
BMI160_MAG_OVERFLOW_OUTPUT	bosch/bmi160.h	3399;"	d
BMI160_MAG_OVERFLOW_OUTPUT_S32	bosch/bmi160.h	3400;"	d
BMI160_MAG_POSITIVE_SATURATION_Z	bosch/bmi160.h	3402;"	d
BMI160_MAG_PRESETMODE_ENHANCED	bosch/bmi160.h	3371;"	d
BMI160_MAG_PRESETMODE_HIGHACCURACY	bosch/bmi160.h	3370;"	d
BMI160_MAG_PRESETMODE_LOWPOWER	bosch/bmi160.h	3368;"	d
BMI160_MAG_PRESETMODE_REGULAR	bosch/bmi160.h	3369;"	d
BMI160_MAG_REGULAR_DR	bosch/bmi160.h	3376;"	d
BMI160_MAG_REGULAR_REPXY	bosch/bmi160.h	3383;"	d
BMI160_MAG_REGULAR_REPZ	bosch/bmi160.h	3390;"	d
BMI160_MAG_R_DATA_LENGTH	bosch/bmi160.h	590;"	d
BMI160_MAG_R_DATA_SIZE	bosch/bmi160.h	630;"	d
BMI160_MAG_R_LSB_BYTE	bosch/bmi160.h	665;"	d
BMI160_MAG_R_MSB_BYTE	bosch/bmi160.h	666;"	d
BMI160_MAG_SUSPEND_MODE	bosch/bmi160.h	3430;"	d
BMI160_MAG_TRIM_DATA_SIZE	bosch/bmi160.h	633;"	d
BMI160_MAG_XYZR_DATA_LENGTH	bosch/bmi160.h	592;"	d
BMI160_MAG_XYZR_DATA_SIZE	bosch/bmi160.h	632;"	d
BMI160_MAG_XYZ_DATA_LENGTH	bosch/bmi160.h	591;"	d
BMI160_MAG_XYZ_DATA_SIZE	bosch/bmi160.h	631;"	d
BMI160_MAG_X_DATA_LENGTH	bosch/bmi160.h	587;"	d
BMI160_MAG_X_DATA_SIZE	bosch/bmi160.h	627;"	d
BMI160_MAG_X_LSB_BYTE	bosch/bmi160.h	659;"	d
BMI160_MAG_X_MSB_BYTE	bosch/bmi160.h	660;"	d
BMI160_MAG_YAS_DATA_LENGTH	bosch/bmi160.h	593;"	d
BMI160_MAG_Y_DATA_LENGTH	bosch/bmi160.h	588;"	d
BMI160_MAG_Y_DATA_SIZE	bosch/bmi160.h	628;"	d
BMI160_MAG_Y_LSB_BYTE	bosch/bmi160.h	661;"	d
BMI160_MAG_Y_MSB_BYTE	bosch/bmi160.h	662;"	d
BMI160_MAG_Z_DATA_LENGTH	bosch/bmi160.h	589;"	d
BMI160_MAG_Z_DATA_SIZE	bosch/bmi160.h	629;"	d
BMI160_MAG_Z_LSB_BYTE	bosch/bmi160.h	663;"	d
BMI160_MAG_Z_MSB_BYTE	bosch/bmi160.h	664;"	d
BMI160_MANUAL_DISABLE	bosch/bmi160.h	3545;"	d
BMI160_MANUAL_ENABLE	bosch/bmi160.h	3546;"	d
BMI160_MAP_INTR1	bosch/bmi160.h	3311;"	d
BMI160_MAP_INTR2	bosch/bmi160.h	3312;"	d
BMI160_MAXIMUM_TIMEOUT	bosch/bmi160.h	434;"	d
BMI160_MAX_ACCEL_BW	bosch/bmi160.h	483;"	d
BMI160_MAX_ACCEL_FOC	bosch/bmi160.h	487;"	d
BMI160_MAX_ACCEL_OUTPUT_DATA_RATE	bosch/bmi160.h	495;"	d
BMI160_MAX_ACCEL_SELFTEST_AXIS	bosch/bmi160.h	480;"	d
BMI160_MAX_FLAT_HOLD	bosch/bmi160.h	486;"	d
BMI160_MAX_FLAT_HYST	bosch/bmi160.h	497;"	d
BMI160_MAX_FLAT_THETA	bosch/bmi160.h	499;"	d
BMI160_MAX_GYRO_BW	bosch/bmi160.h	482;"	d
BMI160_MAX_GYRO_RANGE	bosch/bmi160.h	490;"	d
BMI160_MAX_GYRO_SLEEP_TIGGER	bosch/bmi160.h	491;"	d
BMI160_MAX_GYRO_STEP_COUNTER	bosch/bmi160.h	481;"	d
BMI160_MAX_GYRO_WAKEUP_TRIGGER	bosch/bmi160.h	479;"	d
BMI160_MAX_IF_MODE	bosch/bmi160.h	488;"	d
BMI160_MAX_LATCH_INTR	bosch/bmi160.h	496;"	d
BMI160_MAX_ORIENT_BLOCKING	bosch/bmi160.h	485;"	d
BMI160_MAX_ORIENT_MODE	bosch/bmi160.h	484;"	d
BMI160_MAX_ORIENT_THETA	bosch/bmi160.h	498;"	d
BMI160_MAX_TAP_TURN	bosch/bmi160.h	492;"	d
BMI160_MAX_TARGET_PAGE	bosch/bmi160.h	489;"	d
BMI160_MAX_UNDER_SAMPLING	bosch/bmi160.h	493;"	d
BMI160_MAX_UNDER_SIG_MOTION	bosch/bmi160.h	494;"	d
BMI160_MAX_VALUE_FIFO_ACCEL	bosch/bmi160.h	461;"	d
BMI160_MAX_VALUE_FIFO_FILTER	bosch/bmi160.h	456;"	d
BMI160_MAX_VALUE_FIFO_GYRO	bosch/bmi160.h	462;"	d
BMI160_MAX_VALUE_FIFO_HEADER	bosch/bmi160.h	459;"	d
BMI160_MAX_VALUE_FIFO_INTR	bosch/bmi160.h	458;"	d
BMI160_MAX_VALUE_FIFO_MAG	bosch/bmi160.h	460;"	d
BMI160_MAX_VALUE_FIFO_TIME	bosch/bmi160.h	457;"	d
BMI160_MAX_VALUE_I2C_WDT	bosch/bmi160.h	473;"	d
BMI160_MAX_VALUE_LOW_G_MODE	bosch/bmi160.h	464;"	d
BMI160_MAX_VALUE_NO_MOTION	bosch/bmi160.h	465;"	d
BMI160_MAX_VALUE_NVM_PROG	bosch/bmi160.h	470;"	d
BMI160_MAX_VALUE_ORIENT_AXES	bosch/bmi160.h	469;"	d
BMI160_MAX_VALUE_ORIENT_UD	bosch/bmi160.h	468;"	d
BMI160_MAX_VALUE_PAGE	bosch/bmi160.h	472;"	d
BMI160_MAX_VALUE_SELFTEST_AMP	bosch/bmi160.h	477;"	d
BMI160_MAX_VALUE_SELFTEST_SIGN	bosch/bmi160.h	476;"	d
BMI160_MAX_VALUE_SELFTEST_START	bosch/bmi160.h	478;"	d
BMI160_MAX_VALUE_SIGNIFICANT_MOTION	bosch/bmi160.h	455;"	d
BMI160_MAX_VALUE_SLEEP_STATE	bosch/bmi160.h	474;"	d
BMI160_MAX_VALUE_SOURCE_INTR	bosch/bmi160.h	463;"	d
BMI160_MAX_VALUE_SPI3	bosch/bmi160.h	471;"	d
BMI160_MAX_VALUE_TAP_QUIET	bosch/bmi160.h	467;"	d
BMI160_MAX_VALUE_TAP_SHOCK	bosch/bmi160.h	466;"	d
BMI160_MAX_VALUE_WAKEUP_INTR	bosch/bmi160.h	475;"	d
BMI160_MA_FIFO_A_X_LSB	bosch/bmi160.h	553;"	d
BMI160_MA_FIFO_A_X_MSB	bosch/bmi160.h	554;"	d
BMI160_MA_FIFO_A_Y_LSB	bosch/bmi160.h	555;"	d
BMI160_MA_FIFO_A_Y_MSB	bosch/bmi160.h	556;"	d
BMI160_MA_FIFO_A_Z_LSB	bosch/bmi160.h	557;"	d
BMI160_MA_FIFO_A_Z_MSB	bosch/bmi160.h	558;"	d
BMI160_MA_FIFO_M_R_LSB	bosch/bmi160.h	551;"	d
BMI160_MA_FIFO_M_R_MSB	bosch/bmi160.h	552;"	d
BMI160_MA_FIFO_M_X_LSB	bosch/bmi160.h	545;"	d
BMI160_MA_FIFO_M_X_MSB	bosch/bmi160.h	546;"	d
BMI160_MA_FIFO_M_Y_LSB	bosch/bmi160.h	547;"	d
BMI160_MA_FIFO_M_Y_MSB	bosch/bmi160.h	548;"	d
BMI160_MA_FIFO_M_Z_LSB	bosch/bmi160.h	549;"	d
BMI160_MA_FIFO_M_Z_MSB	bosch/bmi160.h	550;"	d
BMI160_MDELAY_DATA_TYPE	bosch/bmi160.h	406;"	d
BMI160_MGA_FIFO_A_X_LSB	bosch/bmi160.h	538;"	d
BMI160_MGA_FIFO_A_X_MSB	bosch/bmi160.h	539;"	d
BMI160_MGA_FIFO_A_Y_LSB	bosch/bmi160.h	540;"	d
BMI160_MGA_FIFO_A_Y_MSB	bosch/bmi160.h	541;"	d
BMI160_MGA_FIFO_A_Z_LSB	bosch/bmi160.h	542;"	d
BMI160_MGA_FIFO_A_Z_MSB	bosch/bmi160.h	543;"	d
BMI160_MGA_FIFO_G_X_LSB	bosch/bmi160.h	532;"	d
BMI160_MGA_FIFO_G_X_MSB	bosch/bmi160.h	533;"	d
BMI160_MGA_FIFO_G_Y_LSB	bosch/bmi160.h	534;"	d
BMI160_MGA_FIFO_G_Y_MSB	bosch/bmi160.h	535;"	d
BMI160_MGA_FIFO_G_Z_LSB	bosch/bmi160.h	536;"	d
BMI160_MGA_FIFO_G_Z_MSB	bosch/bmi160.h	537;"	d
BMI160_MGA_FIFO_M_R_LSB	bosch/bmi160.h	530;"	d
BMI160_MGA_FIFO_M_R_MSB	bosch/bmi160.h	531;"	d
BMI160_MGA_FIFO_M_X_LSB	bosch/bmi160.h	524;"	d
BMI160_MGA_FIFO_M_X_MSB	bosch/bmi160.h	525;"	d
BMI160_MGA_FIFO_M_Y_LSB	bosch/bmi160.h	526;"	d
BMI160_MGA_FIFO_M_Y_MSB	bosch/bmi160.h	527;"	d
BMI160_MGA_FIFO_M_Z_LSB	bosch/bmi160.h	528;"	d
BMI160_MGA_FIFO_M_Z_MSB	bosch/bmi160.h	529;"	d
BMI160_MG_FIFO_G_X_LSB	bosch/bmi160.h	568;"	d
BMI160_MG_FIFO_G_X_MSB	bosch/bmi160.h	569;"	d
BMI160_MG_FIFO_G_Y_LSB	bosch/bmi160.h	570;"	d
BMI160_MG_FIFO_G_Y_MSB	bosch/bmi160.h	571;"	d
BMI160_MG_FIFO_G_Z_LSB	bosch/bmi160.h	572;"	d
BMI160_MG_FIFO_G_Z_MSB	bosch/bmi160.h	573;"	d
BMI160_MG_FIFO_M_R_LSB	bosch/bmi160.h	566;"	d
BMI160_MG_FIFO_M_R_MSB	bosch/bmi160.h	567;"	d
BMI160_MG_FIFO_M_X_LSB	bosch/bmi160.h	560;"	d
BMI160_MG_FIFO_M_X_MSB	bosch/bmi160.h	561;"	d
BMI160_MG_FIFO_M_Y_LSB	bosch/bmi160.h	562;"	d
BMI160_MG_FIFO_M_Y_MSB	bosch/bmi160.h	563;"	d
BMI160_MG_FIFO_M_Z_LSB	bosch/bmi160.h	564;"	d
BMI160_MG_FIFO_M_Z_MSB	bosch/bmi160.h	565;"	d
BMI160_NOMOTION_X_ENABLE	bosch/bmi160.h	3261;"	d
BMI160_NOMOTION_Y_ENABLE	bosch/bmi160.h	3262;"	d
BMI160_NOMOTION_Z_ENABLE	bosch/bmi160.h	3263;"	d
BMI160_NULL	bosch/bmi160.h	722;"	d
BMI160_OPEN_DRAIN	bosch/bmi160.h	3487;"	d
BMI160_ORIENT_ENABLE	bosch/bmi160.h	3248;"	d
BMI160_OUTPUT	bosch/bmi160.h	3492;"	d
BMI160_OUTPUT_DATA_RATE0	bosch/bmi160.h	436;"	d
BMI160_OUTPUT_DATA_RATE1	bosch/bmi160.h	437;"	d
BMI160_OUTPUT_DATA_RATE2	bosch/bmi160.h	438;"	d
BMI160_OUTPUT_DATA_RATE3	bosch/bmi160.h	439;"	d
BMI160_OUTPUT_DATA_RATE4	bosch/bmi160.h	440;"	d
BMI160_OUTPUT_DATA_RATE5	bosch/bmi160.h	441;"	d
BMI160_OUTPUT_DATA_RATE6	bosch/bmi160.h	442;"	d
BMI160_OUTPUT_DATA_RATE7	bosch/bmi160.h	443;"	d
BMI160_PULL_UP_DATA	bosch/bmi160.h	3561;"	d
BMI160_PUSH_PULL	bosch/bmi160.h	3488;"	d
BMI160_RD_FUNC_PTR	bosch/bmi160.h	/^BMI160_RD_FUNC_PTR;\/**< bus read function pointer *\/$/;"	m	struct:bmi160_t
BMI160_RD_FUNC_PTR	bosch/bmi160.h	369;"	d
BMI160_REG_YAS537_CMDR	bosch/bmi160.h	1045;"	d
BMI160_RETURN_FUNCTION_TYPE	bosch/bmi160.h	725;"	d
BMI160_SEC_INTERFACE_GEN_READ_WRITE_DELAY	bosch/bmi160.h	604;"	d
BMI160_SENSOR_TIME_DATA_SIZE	bosch/bmi160.h	640;"	d
BMI160_SENSOR_TIME_LENGTH	bosch/bmi160.h	601;"	d
BMI160_SENSOR_TIME_LSB_BYTE	bosch/bmi160.h	657;"	d
BMI160_SENSOR_TIME_MSB_BYTE	bosch/bmi160.h	655;"	d
BMI160_SENSOR_TIME_XLSB_BYTE	bosch/bmi160.h	656;"	d
BMI160_SET_BITSLICE	bosch/bmi160.h	3582;"	d
BMI160_SHIFT_BIT_POSITION_BY_01_BIT	bosch/bmi160.h	933;"	d
BMI160_SHIFT_BIT_POSITION_BY_02_BITS	bosch/bmi160.h	934;"	d
BMI160_SHIFT_BIT_POSITION_BY_03_BITS	bosch/bmi160.h	935;"	d
BMI160_SHIFT_BIT_POSITION_BY_04_BITS	bosch/bmi160.h	936;"	d
BMI160_SHIFT_BIT_POSITION_BY_05_BITS	bosch/bmi160.h	937;"	d
BMI160_SHIFT_BIT_POSITION_BY_06_BITS	bosch/bmi160.h	938;"	d
BMI160_SHIFT_BIT_POSITION_BY_07_BITS	bosch/bmi160.h	939;"	d
BMI160_SHIFT_BIT_POSITION_BY_08_BITS	bosch/bmi160.h	940;"	d
BMI160_SHIFT_BIT_POSITION_BY_09_BITS	bosch/bmi160.h	941;"	d
BMI160_SHIFT_BIT_POSITION_BY_12_BITS	bosch/bmi160.h	942;"	d
BMI160_SHIFT_BIT_POSITION_BY_13_BITS	bosch/bmi160.h	943;"	d
BMI160_SHIFT_BIT_POSITION_BY_14_BITS	bosch/bmi160.h	944;"	d
BMI160_SHIFT_BIT_POSITION_BY_15_BITS	bosch/bmi160.h	945;"	d
BMI160_SHIFT_BIT_POSITION_BY_16_BITS	bosch/bmi160.h	946;"	d
BMI160_SIG_MOTION_INTR_ENABLE	bosch/bmi160.h	3558;"	d
BMI160_SIG_MOTION_STAT_HIGH	bosch/bmi160.h	451;"	d
BMI160_SINGLE_TAP_ENABLE	bosch/bmi160.h	3247;"	d
BMI160_SPI_RD_MASK	bosch/bmi160.h	367;"	d
BMI160_STEP_CONFIG_0_7	bosch/bmi160.h	3536;"	d
BMI160_STEP_CONFIG_11_14	bosch/bmi160.h	3538;"	d
BMI160_STEP_CONFIG_8_10	bosch/bmi160.h	3537;"	d
BMI160_STEP_COUNTER_LENGTH	bosch/bmi160.h	600;"	d
BMI160_STEP_COUNT_DATA_SIZE	bosch/bmi160.h	638;"	d
BMI160_STEP_COUNT_LSB_BYTE	bosch/bmi160.h	708;"	d
BMI160_STEP_COUNT_MSB_BYTE	bosch/bmi160.h	709;"	d
BMI160_STEP_DETECTOR_EN	bosch/bmi160.h	3264;"	d
BMI160_STEP_DETECT_INTR_ENABLE	bosch/bmi160.h	3559;"	d
BMI160_STEP_DET_STAT_HIGH	bosch/bmi160.h	452;"	d
BMI160_STEP_NORMAL_MODE	bosch/bmi160.h	3337;"	d
BMI160_STEP_ROBUST_MODE	bosch/bmi160.h	3339;"	d
BMI160_STEP_SENSITIVE_MODE	bosch/bmi160.h	3338;"	d
BMI160_STORE_COUNT	bosch/bmi160_driver.c	36;"	d	file:
BMI160_TAP_DURN_100MS	bosch/bmi160.h	3317;"	d
BMI160_TAP_DURN_150MS	bosch/bmi160.h	3318;"	d
BMI160_TAP_DURN_200MS	bosch/bmi160.h	3319;"	d
BMI160_TAP_DURN_250MS	bosch/bmi160.h	3320;"	d
BMI160_TAP_DURN_375MS	bosch/bmi160.h	3321;"	d
BMI160_TAP_DURN_500MS	bosch/bmi160.h	3322;"	d
BMI160_TAP_DURN_50MS	bosch/bmi160.h	3316;"	d
BMI160_TAP_DURN_700MS	bosch/bmi160.h	3323;"	d
BMI160_TAP_QUIET_20MS	bosch/bmi160.h	3333;"	d
BMI160_TAP_QUIET_30MS	bosch/bmi160.h	3332;"	d
BMI160_TAP_SHOCK_50MS	bosch/bmi160.h	3327;"	d
BMI160_TAP_SHOCK_75MS	bosch/bmi160.h	3328;"	d
BMI160_TEMP_DATA_LENGTH	bosch/bmi160.h	598;"	d
BMI160_TEMP_DATA_SIZE	bosch/bmi160.h	636;"	d
BMI160_TEMP_LSB_BYTE	bosch/bmi160.h	702;"	d
BMI160_TEMP_MSB_BYTE	bosch/bmi160.h	703;"	d
BMI160_USER_ACCEL_CONFIG_ACCEL_BW__LEN	bosch/bmi160.h	1919;"	d
BMI160_USER_ACCEL_CONFIG_ACCEL_BW__MSK	bosch/bmi160.h	1920;"	d
BMI160_USER_ACCEL_CONFIG_ACCEL_BW__POS	bosch/bmi160.h	1918;"	d
BMI160_USER_ACCEL_CONFIG_ACCEL_BW__REG	bosch/bmi160.h	1921;"	d
BMI160_USER_ACCEL_CONFIG_ACCEL_UNDER_SAMPLING__LEN	bosch/bmi160.h	1925;"	d
BMI160_USER_ACCEL_CONFIG_ACCEL_UNDER_SAMPLING__MSK	bosch/bmi160.h	1926;"	d
BMI160_USER_ACCEL_CONFIG_ACCEL_UNDER_SAMPLING__POS	bosch/bmi160.h	1924;"	d
BMI160_USER_ACCEL_CONFIG_ACCEL_UNDER_SAMPLING__REG	bosch/bmi160.h	1927;"	d
BMI160_USER_ACCEL_CONFIG_ADDR	bosch/bmi160.h	801;"	d
BMI160_USER_ACCEL_CONFIG_OUTPUT_DATA_RATE__LEN	bosch/bmi160.h	1912;"	d
BMI160_USER_ACCEL_CONFIG_OUTPUT_DATA_RATE__MSK	bosch/bmi160.h	1913;"	d
BMI160_USER_ACCEL_CONFIG_OUTPUT_DATA_RATE__POS	bosch/bmi160.h	1911;"	d
BMI160_USER_ACCEL_CONFIG_OUTPUT_DATA_RATE__REG	bosch/bmi160.h	1914;"	d
BMI160_USER_ACCEL_POWER_MODE_STAT__LEN	bosch/bmi160.h	1373;"	d
BMI160_USER_ACCEL_POWER_MODE_STAT__MSK	bosch/bmi160.h	1374;"	d
BMI160_USER_ACCEL_POWER_MODE_STAT__POS	bosch/bmi160.h	1372;"	d
BMI160_USER_ACCEL_POWER_MODE_STAT__REG	bosch/bmi160.h	1375;"	d
BMI160_USER_ACCEL_RANGE_ADDR	bosch/bmi160.h	805;"	d
BMI160_USER_ACCEL_RANGE__LEN	bosch/bmi160.h	1932;"	d
BMI160_USER_ACCEL_RANGE__MSK	bosch/bmi160.h	1933;"	d
BMI160_USER_ACCEL_RANGE__POS	bosch/bmi160.h	1931;"	d
BMI160_USER_ACCEL_RANGE__REG	bosch/bmi160.h	1934;"	d
BMI160_USER_ACCEL_SELFTEST_AXIS__LEN	bosch/bmi160.h	2918;"	d
BMI160_USER_ACCEL_SELFTEST_AXIS__MSK	bosch/bmi160.h	2919;"	d
BMI160_USER_ACCEL_SELFTEST_AXIS__POS	bosch/bmi160.h	2917;"	d
BMI160_USER_ACCEL_SELFTEST_AXIS__REG	bosch/bmi160.h	2920;"	d
BMI160_USER_ACCEL_SELFTEST_SIGN__LEN	bosch/bmi160.h	2924;"	d
BMI160_USER_ACCEL_SELFTEST_SIGN__MSK	bosch/bmi160.h	2925;"	d
BMI160_USER_ACCEL_SELFTEST_SIGN__POS	bosch/bmi160.h	2923;"	d
BMI160_USER_ACCEL_SELFTEST_SIGN__REG	bosch/bmi160.h	2926;"	d
BMI160_USER_CHIP_ID_ADDR	bosch/bmi160.h	732;"	d
BMI160_USER_CHIP_ID__LEN	bosch/bmi160.h	1309;"	d
BMI160_USER_CHIP_ID__MSK	bosch/bmi160.h	1308;"	d
BMI160_USER_CHIP_ID__POS	bosch/bmi160.h	1307;"	d
BMI160_USER_CHIP_ID__REG	bosch/bmi160.h	1310;"	d
BMI160_USER_CONFIG_ADDR	bosch/bmi160.h	883;"	d
BMI160_USER_CONFIG_NVM_PROG_ENABLE__LEN	bosch/bmi160.h	2868;"	d
BMI160_USER_CONFIG_NVM_PROG_ENABLE__MSK	bosch/bmi160.h	2869;"	d
BMI160_USER_CONFIG_NVM_PROG_ENABLE__POS	bosch/bmi160.h	2867;"	d
BMI160_USER_CONFIG_NVM_PROG_ENABLE__REG	bosch/bmi160.h	2870;"	d
BMI160_USER_DATA_0_ADDR	bosch/bmi160.h	744;"	d
BMI160_USER_DATA_0_MAG_X_LSB__LEN	bosch/bmi160.h	1382;"	d
BMI160_USER_DATA_0_MAG_X_LSB__MSK	bosch/bmi160.h	1383;"	d
BMI160_USER_DATA_0_MAG_X_LSB__POS	bosch/bmi160.h	1381;"	d
BMI160_USER_DATA_0_MAG_X_LSB__REG	bosch/bmi160.h	1384;"	d
BMI160_USER_DATA_10_ADDR	bosch/bmi160.h	757;"	d
BMI160_USER_DATA_10_GYRO_Y_LSB__LEN	bosch/bmi160.h	1468;"	d
BMI160_USER_DATA_10_GYRO_Y_LSB__MSK	bosch/bmi160.h	1469;"	d
BMI160_USER_DATA_10_GYRO_Y_LSB__POS	bosch/bmi160.h	1467;"	d
BMI160_USER_DATA_10_GYRO_Y_LSB__REG	bosch/bmi160.h	1470;"	d
BMI160_USER_DATA_11_ADDR	bosch/bmi160.h	758;"	d
BMI160_USER_DATA_11_GYRO_Y_MSB__LEN	bosch/bmi160.h	1474;"	d
BMI160_USER_DATA_11_GYRO_Y_MSB__MSK	bosch/bmi160.h	1475;"	d
BMI160_USER_DATA_11_GYRO_Y_MSB__POS	bosch/bmi160.h	1473;"	d
BMI160_USER_DATA_11_GYRO_Y_MSB__REG	bosch/bmi160.h	1476;"	d
BMI160_USER_DATA_12_ADDR	bosch/bmi160.h	759;"	d
BMI160_USER_DATA_12_GYRO_Z_LSB__LEN	bosch/bmi160.h	1480;"	d
BMI160_USER_DATA_12_GYRO_Z_LSB__MSK	bosch/bmi160.h	1481;"	d
BMI160_USER_DATA_12_GYRO_Z_LSB__POS	bosch/bmi160.h	1479;"	d
BMI160_USER_DATA_12_GYRO_Z_LSB__REG	bosch/bmi160.h	1482;"	d
BMI160_USER_DATA_13_ADDR	bosch/bmi160.h	760;"	d
BMI160_USER_DATA_13_GYRO_Z_MSB__LEN	bosch/bmi160.h	1486;"	d
BMI160_USER_DATA_13_GYRO_Z_MSB__MSK	bosch/bmi160.h	1487;"	d
BMI160_USER_DATA_13_GYRO_Z_MSB__POS	bosch/bmi160.h	1485;"	d
BMI160_USER_DATA_13_GYRO_Z_MSB__REG	bosch/bmi160.h	1488;"	d
BMI160_USER_DATA_14_ACCEL_X_LSB__LEN	bosch/bmi160.h	1494;"	d
BMI160_USER_DATA_14_ACCEL_X_LSB__MSK	bosch/bmi160.h	1495;"	d
BMI160_USER_DATA_14_ACCEL_X_LSB__POS	bosch/bmi160.h	1493;"	d
BMI160_USER_DATA_14_ACCEL_X_LSB__REG	bosch/bmi160.h	1496;"	d
BMI160_USER_DATA_14_ADDR	bosch/bmi160.h	761;"	d
BMI160_USER_DATA_15_ACCEL_X_MSB__LEN	bosch/bmi160.h	1500;"	d
BMI160_USER_DATA_15_ACCEL_X_MSB__MSK	bosch/bmi160.h	1501;"	d
BMI160_USER_DATA_15_ACCEL_X_MSB__POS	bosch/bmi160.h	1499;"	d
BMI160_USER_DATA_15_ACCEL_X_MSB__REG	bosch/bmi160.h	1502;"	d
BMI160_USER_DATA_15_ADDR	bosch/bmi160.h	762;"	d
BMI160_USER_DATA_16_ACCEL_Y_LSB__LEN	bosch/bmi160.h	1506;"	d
BMI160_USER_DATA_16_ACCEL_Y_LSB__MSK	bosch/bmi160.h	1507;"	d
BMI160_USER_DATA_16_ACCEL_Y_LSB__POS	bosch/bmi160.h	1505;"	d
BMI160_USER_DATA_16_ACCEL_Y_LSB__REG	bosch/bmi160.h	1508;"	d
BMI160_USER_DATA_16_ADDR	bosch/bmi160.h	766;"	d
BMI160_USER_DATA_17_ACCEL_Y_MSB__LEN	bosch/bmi160.h	1512;"	d
BMI160_USER_DATA_17_ACCEL_Y_MSB__MSK	bosch/bmi160.h	1513;"	d
BMI160_USER_DATA_17_ACCEL_Y_MSB__POS	bosch/bmi160.h	1511;"	d
BMI160_USER_DATA_17_ACCEL_Y_MSB__REG	bosch/bmi160.h	1514;"	d
BMI160_USER_DATA_17_ADDR	bosch/bmi160.h	767;"	d
BMI160_USER_DATA_18_ACCEL_Z_LSB__LEN	bosch/bmi160.h	1518;"	d
BMI160_USER_DATA_18_ACCEL_Z_LSB__MSK	bosch/bmi160.h	1519;"	d
BMI160_USER_DATA_18_ACCEL_Z_LSB__POS	bosch/bmi160.h	1517;"	d
BMI160_USER_DATA_18_ACCEL_Z_LSB__REG	bosch/bmi160.h	1520;"	d
BMI160_USER_DATA_18_ADDR	bosch/bmi160.h	768;"	d
BMI160_USER_DATA_19_ACCEL_Z_MSB__LEN	bosch/bmi160.h	1524;"	d
BMI160_USER_DATA_19_ACCEL_Z_MSB__MSK	bosch/bmi160.h	1525;"	d
BMI160_USER_DATA_19_ACCEL_Z_MSB__POS	bosch/bmi160.h	1523;"	d
BMI160_USER_DATA_19_ACCEL_Z_MSB__REG	bosch/bmi160.h	1526;"	d
BMI160_USER_DATA_19_ADDR	bosch/bmi160.h	769;"	d
BMI160_USER_DATA_1_ADDR	bosch/bmi160.h	745;"	d
BMI160_USER_DATA_1_MAG_X_MSB__LEN	bosch/bmi160.h	1394;"	d
BMI160_USER_DATA_1_MAG_X_MSB__MSK	bosch/bmi160.h	1395;"	d
BMI160_USER_DATA_1_MAG_X_MSB__POS	bosch/bmi160.h	1393;"	d
BMI160_USER_DATA_1_MAG_X_MSB__REG	bosch/bmi160.h	1396;"	d
BMI160_USER_DATA_2_ADDR	bosch/bmi160.h	746;"	d
BMI160_USER_DATA_2_MAG_Y_LSB__LEN	bosch/bmi160.h	1400;"	d
BMI160_USER_DATA_2_MAG_Y_LSB__MSK	bosch/bmi160.h	1401;"	d
BMI160_USER_DATA_2_MAG_Y_LSB__POS	bosch/bmi160.h	1399;"	d
BMI160_USER_DATA_2_MAG_Y_LSB__REG	bosch/bmi160.h	1402;"	d
BMI160_USER_DATA_3_ADDR	bosch/bmi160.h	747;"	d
BMI160_USER_DATA_3_MAG_Y_MSB__LEN	bosch/bmi160.h	1412;"	d
BMI160_USER_DATA_3_MAG_Y_MSB__MSK	bosch/bmi160.h	1413;"	d
BMI160_USER_DATA_3_MAG_Y_MSB__POS	bosch/bmi160.h	1411;"	d
BMI160_USER_DATA_3_MAG_Y_MSB__REG	bosch/bmi160.h	1414;"	d
BMI160_USER_DATA_4_ADDR	bosch/bmi160.h	748;"	d
BMI160_USER_DATA_4_MAG_Z_LSB__LEN	bosch/bmi160.h	1418;"	d
BMI160_USER_DATA_4_MAG_Z_LSB__MSK	bosch/bmi160.h	1419;"	d
BMI160_USER_DATA_4_MAG_Z_LSB__POS	bosch/bmi160.h	1417;"	d
BMI160_USER_DATA_4_MAG_Z_LSB__REG	bosch/bmi160.h	1420;"	d
BMI160_USER_DATA_5_ADDR	bosch/bmi160.h	749;"	d
BMI160_USER_DATA_5_MAG_Z_MSB__LEN	bosch/bmi160.h	1430;"	d
BMI160_USER_DATA_5_MAG_Z_MSB__MSK	bosch/bmi160.h	1431;"	d
BMI160_USER_DATA_5_MAG_Z_MSB__POS	bosch/bmi160.h	1429;"	d
BMI160_USER_DATA_5_MAG_Z_MSB__REG	bosch/bmi160.h	1432;"	d
BMI160_USER_DATA_6_ADDR	bosch/bmi160.h	750;"	d
BMI160_USER_DATA_6_RHALL_LSB__LEN	bosch/bmi160.h	1436;"	d
BMI160_USER_DATA_6_RHALL_LSB__MSK	bosch/bmi160.h	1437;"	d
BMI160_USER_DATA_6_RHALL_LSB__POS	bosch/bmi160.h	1435;"	d
BMI160_USER_DATA_6_RHALL_LSB__REG	bosch/bmi160.h	1438;"	d
BMI160_USER_DATA_7_ADDR	bosch/bmi160.h	751;"	d
BMI160_USER_DATA_7_RHALL_MSB__LEN	bosch/bmi160.h	1448;"	d
BMI160_USER_DATA_7_RHALL_MSB__MSK	bosch/bmi160.h	1449;"	d
BMI160_USER_DATA_7_RHALL_MSB__POS	bosch/bmi160.h	1447;"	d
BMI160_USER_DATA_7_RHALL_MSB__REG	bosch/bmi160.h	1450;"	d
BMI160_USER_DATA_8_ADDR	bosch/bmi160.h	755;"	d
BMI160_USER_DATA_8_GYRO_X_LSB__LEN	bosch/bmi160.h	1456;"	d
BMI160_USER_DATA_8_GYRO_X_LSB__MSK	bosch/bmi160.h	1457;"	d
BMI160_USER_DATA_8_GYRO_X_LSB__POS	bosch/bmi160.h	1455;"	d
BMI160_USER_DATA_8_GYRO_X_LSB__REG	bosch/bmi160.h	1458;"	d
BMI160_USER_DATA_9_ADDR	bosch/bmi160.h	756;"	d
BMI160_USER_DATA_9_GYRO_X_MSB__LEN	bosch/bmi160.h	1462;"	d
BMI160_USER_DATA_9_GYRO_X_MSB__MSK	bosch/bmi160.h	1463;"	d
BMI160_USER_DATA_9_GYRO_X_MSB__POS	bosch/bmi160.h	1461;"	d
BMI160_USER_DATA_9_GYRO_X_MSB__REG	bosch/bmi160.h	1464;"	d
BMI160_USER_DATA_MAG_R_LSB__LEN	bosch/bmi160.h	1442;"	d
BMI160_USER_DATA_MAG_R_LSB__MSK	bosch/bmi160.h	1443;"	d
BMI160_USER_DATA_MAG_R_LSB__POS	bosch/bmi160.h	1441;"	d
BMI160_USER_DATA_MAG_R_LSB__REG	bosch/bmi160.h	1444;"	d
BMI160_USER_DATA_MAG_X_LSB__LEN	bosch/bmi160.h	1388;"	d
BMI160_USER_DATA_MAG_X_LSB__MSK	bosch/bmi160.h	1389;"	d
BMI160_USER_DATA_MAG_X_LSB__POS	bosch/bmi160.h	1387;"	d
BMI160_USER_DATA_MAG_X_LSB__REG	bosch/bmi160.h	1390;"	d
BMI160_USER_DATA_MAG_Y_LSB__LEN	bosch/bmi160.h	1406;"	d
BMI160_USER_DATA_MAG_Y_LSB__MSK	bosch/bmi160.h	1407;"	d
BMI160_USER_DATA_MAG_Y_LSB__POS	bosch/bmi160.h	1405;"	d
BMI160_USER_DATA_MAG_Y_LSB__REG	bosch/bmi160.h	1408;"	d
BMI160_USER_DATA_MAG_Z_LSB__LEN	bosch/bmi160.h	1424;"	d
BMI160_USER_DATA_MAG_Z_LSB__MSK	bosch/bmi160.h	1425;"	d
BMI160_USER_DATA_MAG_Z_LSB__POS	bosch/bmi160.h	1423;"	d
BMI160_USER_DATA_MAG_Z_LSB__REG	bosch/bmi160.h	1426;"	d
BMI160_USER_DROP_CMD_ERR__LEN	bosch/bmi160.h	1339;"	d
BMI160_USER_DROP_CMD_ERR__MSK	bosch/bmi160.h	1340;"	d
BMI160_USER_DROP_CMD_ERR__POS	bosch/bmi160.h	1338;"	d
BMI160_USER_DROP_CMD_ERR__REG	bosch/bmi160.h	1341;"	d
BMI160_USER_ERROR_ADDR	bosch/bmi160.h	736;"	d
BMI160_USER_ERR_CODE__LEN	bosch/bmi160.h	1327;"	d
BMI160_USER_ERR_CODE__MSK	bosch/bmi160.h	1328;"	d
BMI160_USER_ERR_CODE__POS	bosch/bmi160.h	1326;"	d
BMI160_USER_ERR_CODE__REG	bosch/bmi160.h	1329;"	d
BMI160_USER_ERR_STAT__LEN	bosch/bmi160.h	1316;"	d
BMI160_USER_ERR_STAT__MSK	bosch/bmi160.h	1317;"	d
BMI160_USER_ERR_STAT__POS	bosch/bmi160.h	1315;"	d
BMI160_USER_ERR_STAT__REG	bosch/bmi160.h	1318;"	d
BMI160_USER_FATAL_ERR__LEN	bosch/bmi160.h	1321;"	d
BMI160_USER_FATAL_ERR__MSK	bosch/bmi160.h	1322;"	d
BMI160_USER_FATAL_ERR__POS	bosch/bmi160.h	1320;"	d
BMI160_USER_FATAL_ERR__REG	bosch/bmi160.h	1323;"	d
BMI160_USER_FIFO_ACCEL_ENABLE__LEN	bosch/bmi160.h	2048;"	d
BMI160_USER_FIFO_ACCEL_ENABLE__MSK	bosch/bmi160.h	2049;"	d
BMI160_USER_FIFO_ACCEL_ENABLE__POS	bosch/bmi160.h	2047;"	d
BMI160_USER_FIFO_ACCEL_ENABLE__REG	bosch/bmi160.h	2050;"	d
BMI160_USER_FIFO_BYTE_COUNTER_LSB__LEN	bosch/bmi160.h	1886;"	d
BMI160_USER_FIFO_BYTE_COUNTER_LSB__MSK	bosch/bmi160.h	1887;"	d
BMI160_USER_FIFO_BYTE_COUNTER_LSB__POS	bosch/bmi160.h	1885;"	d
BMI160_USER_FIFO_BYTE_COUNTER_LSB__REG	bosch/bmi160.h	1888;"	d
BMI160_USER_FIFO_BYTE_COUNTER_MSB__LEN	bosch/bmi160.h	1893;"	d
BMI160_USER_FIFO_BYTE_COUNTER_MSB__MSK	bosch/bmi160.h	1894;"	d
BMI160_USER_FIFO_BYTE_COUNTER_MSB__POS	bosch/bmi160.h	1892;"	d
BMI160_USER_FIFO_BYTE_COUNTER_MSB__REG	bosch/bmi160.h	1895;"	d
BMI160_USER_FIFO_CONFIG_0_ADDR	bosch/bmi160.h	825;"	d
BMI160_USER_FIFO_CONFIG_1_ADDR	bosch/bmi160.h	826;"	d
BMI160_USER_FIFO_DATA_ADDR	bosch/bmi160.h	797;"	d
BMI160_USER_FIFO_DATA__LEN	bosch/bmi160.h	1903;"	d
BMI160_USER_FIFO_DATA__MSK	bosch/bmi160.h	1904;"	d
BMI160_USER_FIFO_DATA__POS	bosch/bmi160.h	1902;"	d
BMI160_USER_FIFO_DATA__REG	bosch/bmi160.h	1905;"	d
BMI160_USER_FIFO_DOWN_ACCEL__LEN	bosch/bmi160.h	1986;"	d
BMI160_USER_FIFO_DOWN_ACCEL__MSK	bosch/bmi160.h	1987;"	d
BMI160_USER_FIFO_DOWN_ACCEL__POS	bosch/bmi160.h	1985;"	d
BMI160_USER_FIFO_DOWN_ACCEL__REG	bosch/bmi160.h	1988;"	d
BMI160_USER_FIFO_DOWN_ADDR	bosch/bmi160.h	821;"	d
BMI160_USER_FIFO_DOWN_GYRO__LEN	bosch/bmi160.h	1972;"	d
BMI160_USER_FIFO_DOWN_GYRO__MSK	bosch/bmi160.h	1973;"	d
BMI160_USER_FIFO_DOWN_GYRO__POS	bosch/bmi160.h	1971;"	d
BMI160_USER_FIFO_DOWN_GYRO__REG	bosch/bmi160.h	1974;"	d
BMI160_USER_FIFO_FILTER_ACCEL__LEN	bosch/bmi160.h	1992;"	d
BMI160_USER_FIFO_FILTER_ACCEL__MSK	bosch/bmi160.h	1993;"	d
BMI160_USER_FIFO_FILTER_ACCEL__POS	bosch/bmi160.h	1991;"	d
BMI160_USER_FIFO_FILTER_ACCEL__REG	bosch/bmi160.h	1994;"	d
BMI160_USER_FIFO_FILTER_GYRO__LEN	bosch/bmi160.h	1980;"	d
BMI160_USER_FIFO_FILTER_GYRO__MSK	bosch/bmi160.h	1981;"	d
BMI160_USER_FIFO_FILTER_GYRO__POS	bosch/bmi160.h	1979;"	d
BMI160_USER_FIFO_FILTER_GYRO__REG	bosch/bmi160.h	1982;"	d
BMI160_USER_FIFO_GYRO_ENABLE__LEN	bosch/bmi160.h	2057;"	d
BMI160_USER_FIFO_GYRO_ENABLE__MSK	bosch/bmi160.h	2058;"	d
BMI160_USER_FIFO_GYRO_ENABLE__POS	bosch/bmi160.h	2056;"	d
BMI160_USER_FIFO_GYRO_ENABLE__REG	bosch/bmi160.h	2059;"	d
BMI160_USER_FIFO_HEADER_ENABLE__LEN	bosch/bmi160.h	2030;"	d
BMI160_USER_FIFO_HEADER_ENABLE__MSK	bosch/bmi160.h	2031;"	d
BMI160_USER_FIFO_HEADER_ENABLE__POS	bosch/bmi160.h	2029;"	d
BMI160_USER_FIFO_HEADER_ENABLE__REG	bosch/bmi160.h	2032;"	d
BMI160_USER_FIFO_LENGTH_0_ADDR	bosch/bmi160.h	795;"	d
BMI160_USER_FIFO_LENGTH_1_ADDR	bosch/bmi160.h	796;"	d
BMI160_USER_FIFO_MAG_ENABLE__LEN	bosch/bmi160.h	2039;"	d
BMI160_USER_FIFO_MAG_ENABLE__MSK	bosch/bmi160.h	2040;"	d
BMI160_USER_FIFO_MAG_ENABLE__POS	bosch/bmi160.h	2038;"	d
BMI160_USER_FIFO_MAG_ENABLE__REG	bosch/bmi160.h	2041;"	d
BMI160_USER_FIFO_TAG_INTR1_ENABLE__LEN	bosch/bmi160.h	2022;"	d
BMI160_USER_FIFO_TAG_INTR1_ENABLE__MSK	bosch/bmi160.h	2023;"	d
BMI160_USER_FIFO_TAG_INTR1_ENABLE__POS	bosch/bmi160.h	2021;"	d
BMI160_USER_FIFO_TAG_INTR1_ENABLE__REG	bosch/bmi160.h	2024;"	d
BMI160_USER_FIFO_TAG_INTR2_ENABLE__LEN	bosch/bmi160.h	2016;"	d
BMI160_USER_FIFO_TAG_INTR2_ENABLE__MSK	bosch/bmi160.h	2017;"	d
BMI160_USER_FIFO_TAG_INTR2_ENABLE__POS	bosch/bmi160.h	2015;"	d
BMI160_USER_FIFO_TAG_INTR2_ENABLE__REG	bosch/bmi160.h	2018;"	d
BMI160_USER_FIFO_TIME_ENABLE__LEN	bosch/bmi160.h	2008;"	d
BMI160_USER_FIFO_TIME_ENABLE__MSK	bosch/bmi160.h	2009;"	d
BMI160_USER_FIFO_TIME_ENABLE__POS	bosch/bmi160.h	2007;"	d
BMI160_USER_FIFO_TIME_ENABLE__REG	bosch/bmi160.h	2010;"	d
BMI160_USER_FIFO_WM__LEN	bosch/bmi160.h	2000;"	d
BMI160_USER_FIFO_WM__MSK	bosch/bmi160.h	2001;"	d
BMI160_USER_FIFO_WM__POS	bosch/bmi160.h	1999;"	d
BMI160_USER_FIFO_WM__REG	bosch/bmi160.h	2002;"	d
BMI160_USER_FOC_ACCEL_X__LEN	bosch/bmi160.h	2851;"	d
BMI160_USER_FOC_ACCEL_X__MSK	bosch/bmi160.h	2852;"	d
BMI160_USER_FOC_ACCEL_X__POS	bosch/bmi160.h	2850;"	d
BMI160_USER_FOC_ACCEL_X__REG	bosch/bmi160.h	2853;"	d
BMI160_USER_FOC_ACCEL_Y__LEN	bosch/bmi160.h	2845;"	d
BMI160_USER_FOC_ACCEL_Y__MSK	bosch/bmi160.h	2846;"	d
BMI160_USER_FOC_ACCEL_Y__POS	bosch/bmi160.h	2844;"	d
BMI160_USER_FOC_ACCEL_Y__REG	bosch/bmi160.h	2847;"	d
BMI160_USER_FOC_ACCEL_Z__LEN	bosch/bmi160.h	2839;"	d
BMI160_USER_FOC_ACCEL_Z__MSK	bosch/bmi160.h	2840;"	d
BMI160_USER_FOC_ACCEL_Z__POS	bosch/bmi160.h	2838;"	d
BMI160_USER_FOC_ACCEL_Z__REG	bosch/bmi160.h	2841;"	d
BMI160_USER_FOC_CONFIG_ADDR	bosch/bmi160.h	879;"	d
BMI160_USER_FOC_GYRO_ENABLE__LEN	bosch/bmi160.h	2859;"	d
BMI160_USER_FOC_GYRO_ENABLE__MSK	bosch/bmi160.h	2860;"	d
BMI160_USER_FOC_GYRO_ENABLE__POS	bosch/bmi160.h	2858;"	d
BMI160_USER_FOC_GYRO_ENABLE__REG	bosch/bmi160.h	2861;"	d
BMI160_USER_GYRO_CONFIG_ADDR	bosch/bmi160.h	809;"	d
BMI160_USER_GYRO_CONFIG_BW__LEN	bosch/bmi160.h	1948;"	d
BMI160_USER_GYRO_CONFIG_BW__MSK	bosch/bmi160.h	1949;"	d
BMI160_USER_GYRO_CONFIG_BW__POS	bosch/bmi160.h	1947;"	d
BMI160_USER_GYRO_CONFIG_BW__REG	bosch/bmi160.h	1950;"	d
BMI160_USER_GYRO_CONFIG_OUTPUT_DATA_RATE__LEN	bosch/bmi160.h	1941;"	d
BMI160_USER_GYRO_CONFIG_OUTPUT_DATA_RATE__MSK	bosch/bmi160.h	1942;"	d
BMI160_USER_GYRO_CONFIG_OUTPUT_DATA_RATE__POS	bosch/bmi160.h	1940;"	d
BMI160_USER_GYRO_CONFIG_OUTPUT_DATA_RATE__REG	bosch/bmi160.h	1943;"	d
BMI160_USER_GYRO_POWER_MODE_STAT__LEN	bosch/bmi160.h	1364;"	d
BMI160_USER_GYRO_POWER_MODE_STAT__MSK	bosch/bmi160.h	1365;"	d
BMI160_USER_GYRO_POWER_MODE_STAT__POS	bosch/bmi160.h	1363;"	d
BMI160_USER_GYRO_POWER_MODE_STAT__REG	bosch/bmi160.h	1366;"	d
BMI160_USER_GYRO_RANGE_ADDR	bosch/bmi160.h	813;"	d
BMI160_USER_GYRO_RANGE__LEN	bosch/bmi160.h	1955;"	d
BMI160_USER_GYRO_RANGE__MSK	bosch/bmi160.h	1956;"	d
BMI160_USER_GYRO_RANGE__POS	bosch/bmi160.h	1954;"	d
BMI160_USER_GYRO_RANGE__REG	bosch/bmi160.h	1957;"	d
BMI160_USER_GYRO_SELFTEST_START__LEN	bosch/bmi160.h	2938;"	d
BMI160_USER_GYRO_SELFTEST_START__MSK	bosch/bmi160.h	2939;"	d
BMI160_USER_GYRO_SELFTEST_START__POS	bosch/bmi160.h	2937;"	d
BMI160_USER_GYRO_SELFTEST_START__REG	bosch/bmi160.h	2940;"	d
BMI160_USER_GYRO_SLEEP_STATE__LEN	bosch/bmi160.h	2904;"	d
BMI160_USER_GYRO_SLEEP_STATE__MSK	bosch/bmi160.h	2905;"	d
BMI160_USER_GYRO_SLEEP_STATE__POS	bosch/bmi160.h	2903;"	d
BMI160_USER_GYRO_SLEEP_STATE__REG	bosch/bmi160.h	2906;"	d
BMI160_USER_GYRO_SLEEP_TRIGGER__LEN	bosch/bmi160.h	2892;"	d
BMI160_USER_GYRO_SLEEP_TRIGGER__MSK	bosch/bmi160.h	2893;"	d
BMI160_USER_GYRO_SLEEP_TRIGGER__POS	bosch/bmi160.h	2891;"	d
BMI160_USER_GYRO_SLEEP_TRIGGER__REG	bosch/bmi160.h	2894;"	d
BMI160_USER_GYRO_WAKEUP_INTR__LEN	bosch/bmi160.h	2910;"	d
BMI160_USER_GYRO_WAKEUP_INTR__MSK	bosch/bmi160.h	2911;"	d
BMI160_USER_GYRO_WAKEUP_INTR__POS	bosch/bmi160.h	2909;"	d
BMI160_USER_GYRO_WAKEUP_INTR__REG	bosch/bmi160.h	2912;"	d
BMI160_USER_GYRO_WAKEUP_TRIGGER__LEN	bosch/bmi160.h	2898;"	d
BMI160_USER_GYRO_WAKEUP_TRIGGER__MSK	bosch/bmi160.h	2899;"	d
BMI160_USER_GYRO_WAKEUP_TRIGGER__POS	bosch/bmi160.h	2897;"	d
BMI160_USER_GYRO_WAKEUP_TRIGGER__REG	bosch/bmi160.h	2900;"	d
BMI160_USER_I2C_DEVICE_ADDR__LEN	bosch/bmi160.h	2068;"	d
BMI160_USER_I2C_DEVICE_ADDR__MSK	bosch/bmi160.h	2069;"	d
BMI160_USER_I2C_DEVICE_ADDR__POS	bosch/bmi160.h	2067;"	d
BMI160_USER_I2C_DEVICE_ADDR__REG	bosch/bmi160.h	2070;"	d
BMI160_USER_I2C_FAIL_ERR__LEN	bosch/bmi160.h	1333;"	d
BMI160_USER_I2C_FAIL_ERR__MSK	bosch/bmi160.h	1334;"	d
BMI160_USER_I2C_FAIL_ERR__POS	bosch/bmi160.h	1332;"	d
BMI160_USER_I2C_FAIL_ERR__REG	bosch/bmi160.h	1335;"	d
BMI160_USER_IF_CONFIG_ADDR	bosch/bmi160.h	887;"	d
BMI160_USER_IF_CONFIG_I2C_WDT_ENABLE__LEN	bosch/bmi160.h	2960;"	d
BMI160_USER_IF_CONFIG_I2C_WDT_ENABLE__MSK	bosch/bmi160.h	2961;"	d
BMI160_USER_IF_CONFIG_I2C_WDT_ENABLE__POS	bosch/bmi160.h	2959;"	d
BMI160_USER_IF_CONFIG_I2C_WDT_ENABLE__REG	bosch/bmi160.h	2962;"	d
BMI160_USER_IF_CONFIG_I2C_WDT_SELECT__LEN	bosch/bmi160.h	2953;"	d
BMI160_USER_IF_CONFIG_I2C_WDT_SELECT__MSK	bosch/bmi160.h	2954;"	d
BMI160_USER_IF_CONFIG_I2C_WDT_SELECT__POS	bosch/bmi160.h	2952;"	d
BMI160_USER_IF_CONFIG_I2C_WDT_SELECT__REG	bosch/bmi160.h	2955;"	d
BMI160_USER_IF_CONFIG_IF_MODE__LEN	bosch/bmi160.h	2883;"	d
BMI160_USER_IF_CONFIG_IF_MODE__MSK	bosch/bmi160.h	2884;"	d
BMI160_USER_IF_CONFIG_IF_MODE__POS	bosch/bmi160.h	2882;"	d
BMI160_USER_IF_CONFIG_IF_MODE__REG	bosch/bmi160.h	2885;"	d
BMI160_USER_IF_CONFIG_SPI3__LEN	bosch/bmi160.h	2876;"	d
BMI160_USER_IF_CONFIG_SPI3__MSK	bosch/bmi160.h	2877;"	d
BMI160_USER_IF_CONFIG_SPI3__POS	bosch/bmi160.h	2875;"	d
BMI160_USER_IF_CONFIG_SPI3__REG	bosch/bmi160.h	2878;"	d
BMI160_USER_INTR1_EDGE_CTRL__LEN	bosch/bmi160.h	2264;"	d
BMI160_USER_INTR1_EDGE_CTRL__MSK	bosch/bmi160.h	2265;"	d
BMI160_USER_INTR1_EDGE_CTRL__POS	bosch/bmi160.h	2263;"	d
BMI160_USER_INTR1_EDGE_CTRL__REG	bosch/bmi160.h	2266;"	d
BMI160_USER_INTR1_INPUT_ENABLE__LEN	bosch/bmi160.h	2342;"	d
BMI160_USER_INTR1_INPUT_ENABLE__MSK	bosch/bmi160.h	2343;"	d
BMI160_USER_INTR1_INPUT_ENABLE__POS	bosch/bmi160.h	2341;"	d
BMI160_USER_INTR1_INPUT_ENABLE__REG	bosch/bmi160.h	2344;"	d
BMI160_USER_INTR1_LEVEL__LEN	bosch/bmi160.h	2273;"	d
BMI160_USER_INTR1_LEVEL__MSK	bosch/bmi160.h	2274;"	d
BMI160_USER_INTR1_LEVEL__POS	bosch/bmi160.h	2272;"	d
BMI160_USER_INTR1_LEVEL__REG	bosch/bmi160.h	2275;"	d
BMI160_USER_INTR1_OUTPUT_ENABLE__LEN	bosch/bmi160.h	2291;"	d
BMI160_USER_INTR1_OUTPUT_ENABLE__MSK	bosch/bmi160.h	2292;"	d
BMI160_USER_INTR1_OUTPUT_ENABLE__POS	bosch/bmi160.h	2290;"	d
BMI160_USER_INTR1_OUTPUT_ENABLE__REG	bosch/bmi160.h	2293;"	d
BMI160_USER_INTR1_OUTPUT_TYPE__LEN	bosch/bmi160.h	2282;"	d
BMI160_USER_INTR1_OUTPUT_TYPE__MSK	bosch/bmi160.h	2283;"	d
BMI160_USER_INTR1_OUTPUT_TYPE__POS	bosch/bmi160.h	2281;"	d
BMI160_USER_INTR1_OUTPUT_TYPE__REG	bosch/bmi160.h	2284;"	d
BMI160_USER_INTR2_EDGE_CTRL__LEN	bosch/bmi160.h	2300;"	d
BMI160_USER_INTR2_EDGE_CTRL__MSK	bosch/bmi160.h	2301;"	d
BMI160_USER_INTR2_EDGE_CTRL__POS	bosch/bmi160.h	2299;"	d
BMI160_USER_INTR2_EDGE_CTRL__REG	bosch/bmi160.h	2302;"	d
BMI160_USER_INTR2_INPUT_ENABLE__LEN	bosch/bmi160.h	2349;"	d
BMI160_USER_INTR2_INPUT_ENABLE__MSK	bosch/bmi160.h	2350;"	d
BMI160_USER_INTR2_INPUT_ENABLE__POS	bosch/bmi160.h	2348;"	d
BMI160_USER_INTR2_INPUT_ENABLE__REG	bosch/bmi160.h	2351;"	d
BMI160_USER_INTR2_LEVEL__LEN	bosch/bmi160.h	2309;"	d
BMI160_USER_INTR2_LEVEL__MSK	bosch/bmi160.h	2310;"	d
BMI160_USER_INTR2_LEVEL__POS	bosch/bmi160.h	2308;"	d
BMI160_USER_INTR2_LEVEL__REG	bosch/bmi160.h	2311;"	d
BMI160_USER_INTR2_OUTPUT_EN__LEN	bosch/bmi160.h	2325;"	d
BMI160_USER_INTR2_OUTPUT_EN__MSK	bosch/bmi160.h	2326;"	d
BMI160_USER_INTR2_OUTPUT_EN__POS	bosch/bmi160.h	2324;"	d
BMI160_USER_INTR2_OUTPUT_EN__REG	bosch/bmi160.h	2327;"	d
BMI160_USER_INTR2_OUTPUT_TYPE__LEN	bosch/bmi160.h	2318;"	d
BMI160_USER_INTR2_OUTPUT_TYPE__MSK	bosch/bmi160.h	2319;"	d
BMI160_USER_INTR2_OUTPUT_TYPE__POS	bosch/bmi160.h	2317;"	d
BMI160_USER_INTR2_OUTPUT_TYPE__REG	bosch/bmi160.h	2320;"	d
BMI160_USER_INTR_DATA_0_ADDR	bosch/bmi160.h	855;"	d
BMI160_USER_INTR_DATA_0_INTR_LOW_HIGH_SOURCE__LEN	bosch/bmi160.h	2575;"	d
BMI160_USER_INTR_DATA_0_INTR_LOW_HIGH_SOURCE__MSK	bosch/bmi160.h	2576;"	d
BMI160_USER_INTR_DATA_0_INTR_LOW_HIGH_SOURCE__POS	bosch/bmi160.h	2574;"	d
BMI160_USER_INTR_DATA_0_INTR_LOW_HIGH_SOURCE__REG	bosch/bmi160.h	2577;"	d
BMI160_USER_INTR_DATA_0_INTR_TAP_SOURCE__LEN	bosch/bmi160.h	2565;"	d
BMI160_USER_INTR_DATA_0_INTR_TAP_SOURCE__MSK	bosch/bmi160.h	2566;"	d
BMI160_USER_INTR_DATA_0_INTR_TAP_SOURCE__POS	bosch/bmi160.h	2564;"	d
BMI160_USER_INTR_DATA_0_INTR_TAP_SOURCE__REG	bosch/bmi160.h	2567;"	d
BMI160_USER_INTR_DATA_1_ADDR	bosch/bmi160.h	856;"	d
BMI160_USER_INTR_DATA_1_INTR_MOTION_SOURCE__LEN	bosch/bmi160.h	2585;"	d
BMI160_USER_INTR_DATA_1_INTR_MOTION_SOURCE__MSK	bosch/bmi160.h	2586;"	d
BMI160_USER_INTR_DATA_1_INTR_MOTION_SOURCE__POS	bosch/bmi160.h	2584;"	d
BMI160_USER_INTR_DATA_1_INTR_MOTION_SOURCE__REG	bosch/bmi160.h	2587;"	d
BMI160_USER_INTR_ENABLE_0_ADDR	bosch/bmi160.h	838;"	d
BMI160_USER_INTR_ENABLE_0_ANY_MOTION_X_ENABLE__LEN	bosch/bmi160.h	2116;"	d
BMI160_USER_INTR_ENABLE_0_ANY_MOTION_X_ENABLE__MSK	bosch/bmi160.h	2117;"	d
BMI160_USER_INTR_ENABLE_0_ANY_MOTION_X_ENABLE__POS	bosch/bmi160.h	2115;"	d
BMI160_USER_INTR_ENABLE_0_ANY_MOTION_X_ENABLE__REG	bosch/bmi160.h	2118;"	d
BMI160_USER_INTR_ENABLE_0_ANY_MOTION_Y_ENABLE__LEN	bosch/bmi160.h	2123;"	d
BMI160_USER_INTR_ENABLE_0_ANY_MOTION_Y_ENABLE__MSK	bosch/bmi160.h	2124;"	d
BMI160_USER_INTR_ENABLE_0_ANY_MOTION_Y_ENABLE__POS	bosch/bmi160.h	2122;"	d
BMI160_USER_INTR_ENABLE_0_ANY_MOTION_Y_ENABLE__REG	bosch/bmi160.h	2125;"	d
BMI160_USER_INTR_ENABLE_0_ANY_MOTION_Z_ENABLE__LEN	bosch/bmi160.h	2130;"	d
BMI160_USER_INTR_ENABLE_0_ANY_MOTION_Z_ENABLE__MSK	bosch/bmi160.h	2131;"	d
BMI160_USER_INTR_ENABLE_0_ANY_MOTION_Z_ENABLE__POS	bosch/bmi160.h	2129;"	d
BMI160_USER_INTR_ENABLE_0_ANY_MOTION_Z_ENABLE__REG	bosch/bmi160.h	2132;"	d
BMI160_USER_INTR_ENABLE_0_DOUBLE_TAP_ENABLE__LEN	bosch/bmi160.h	2139;"	d
BMI160_USER_INTR_ENABLE_0_DOUBLE_TAP_ENABLE__MSK	bosch/bmi160.h	2140;"	d
BMI160_USER_INTR_ENABLE_0_DOUBLE_TAP_ENABLE__POS	bosch/bmi160.h	2138;"	d
BMI160_USER_INTR_ENABLE_0_DOUBLE_TAP_ENABLE__REG	bosch/bmi160.h	2141;"	d
BMI160_USER_INTR_ENABLE_0_FLAT_ENABLE__LEN	bosch/bmi160.h	2166;"	d
BMI160_USER_INTR_ENABLE_0_FLAT_ENABLE__MSK	bosch/bmi160.h	2167;"	d
BMI160_USER_INTR_ENABLE_0_FLAT_ENABLE__POS	bosch/bmi160.h	2165;"	d
BMI160_USER_INTR_ENABLE_0_FLAT_ENABLE__REG	bosch/bmi160.h	2168;"	d
BMI160_USER_INTR_ENABLE_0_ORIENT_ENABLE__LEN	bosch/bmi160.h	2157;"	d
BMI160_USER_INTR_ENABLE_0_ORIENT_ENABLE__MSK	bosch/bmi160.h	2158;"	d
BMI160_USER_INTR_ENABLE_0_ORIENT_ENABLE__POS	bosch/bmi160.h	2156;"	d
BMI160_USER_INTR_ENABLE_0_ORIENT_ENABLE__REG	bosch/bmi160.h	2159;"	d
BMI160_USER_INTR_ENABLE_0_SINGLE_TAP_ENABLE__LEN	bosch/bmi160.h	2148;"	d
BMI160_USER_INTR_ENABLE_0_SINGLE_TAP_ENABLE__MSK	bosch/bmi160.h	2149;"	d
BMI160_USER_INTR_ENABLE_0_SINGLE_TAP_ENABLE__POS	bosch/bmi160.h	2147;"	d
BMI160_USER_INTR_ENABLE_0_SINGLE_TAP_ENABLE__REG	bosch/bmi160.h	2150;"	d
BMI160_USER_INTR_ENABLE_1_ADDR	bosch/bmi160.h	839;"	d
BMI160_USER_INTR_ENABLE_1_DATA_RDY_ENABLE__LEN	bosch/bmi160.h	2207;"	d
BMI160_USER_INTR_ENABLE_1_DATA_RDY_ENABLE__MSK	bosch/bmi160.h	2208;"	d
BMI160_USER_INTR_ENABLE_1_DATA_RDY_ENABLE__POS	bosch/bmi160.h	2206;"	d
BMI160_USER_INTR_ENABLE_1_DATA_RDY_ENABLE__REG	bosch/bmi160.h	2209;"	d
BMI160_USER_INTR_ENABLE_1_FIFO_FULL_ENABLE__LEN	bosch/bmi160.h	2216;"	d
BMI160_USER_INTR_ENABLE_1_FIFO_FULL_ENABLE__MSK	bosch/bmi160.h	2217;"	d
BMI160_USER_INTR_ENABLE_1_FIFO_FULL_ENABLE__POS	bosch/bmi160.h	2215;"	d
BMI160_USER_INTR_ENABLE_1_FIFO_FULL_ENABLE__REG	bosch/bmi160.h	2218;"	d
BMI160_USER_INTR_ENABLE_1_FIFO_WM_ENABLE__LEN	bosch/bmi160.h	2223;"	d
BMI160_USER_INTR_ENABLE_1_FIFO_WM_ENABLE__MSK	bosch/bmi160.h	2224;"	d
BMI160_USER_INTR_ENABLE_1_FIFO_WM_ENABLE__POS	bosch/bmi160.h	2222;"	d
BMI160_USER_INTR_ENABLE_1_FIFO_WM_ENABLE__REG	bosch/bmi160.h	2225;"	d
BMI160_USER_INTR_ENABLE_1_HIGH_G_X_ENABLE__LEN	bosch/bmi160.h	2175;"	d
BMI160_USER_INTR_ENABLE_1_HIGH_G_X_ENABLE__MSK	bosch/bmi160.h	2176;"	d
BMI160_USER_INTR_ENABLE_1_HIGH_G_X_ENABLE__POS	bosch/bmi160.h	2174;"	d
BMI160_USER_INTR_ENABLE_1_HIGH_G_X_ENABLE__REG	bosch/bmi160.h	2177;"	d
BMI160_USER_INTR_ENABLE_1_HIGH_G_Y_ENABLE__LEN	bosch/bmi160.h	2182;"	d
BMI160_USER_INTR_ENABLE_1_HIGH_G_Y_ENABLE__MSK	bosch/bmi160.h	2183;"	d
BMI160_USER_INTR_ENABLE_1_HIGH_G_Y_ENABLE__POS	bosch/bmi160.h	2181;"	d
BMI160_USER_INTR_ENABLE_1_HIGH_G_Y_ENABLE__REG	bosch/bmi160.h	2184;"	d
BMI160_USER_INTR_ENABLE_1_HIGH_G_Z_ENABLE__LEN	bosch/bmi160.h	2189;"	d
BMI160_USER_INTR_ENABLE_1_HIGH_G_Z_ENABLE__MSK	bosch/bmi160.h	2190;"	d
BMI160_USER_INTR_ENABLE_1_HIGH_G_Z_ENABLE__POS	bosch/bmi160.h	2188;"	d
BMI160_USER_INTR_ENABLE_1_HIGH_G_Z_ENABLE__REG	bosch/bmi160.h	2191;"	d
BMI160_USER_INTR_ENABLE_1_LOW_G_ENABLE__LEN	bosch/bmi160.h	2198;"	d
BMI160_USER_INTR_ENABLE_1_LOW_G_ENABLE__MSK	bosch/bmi160.h	2199;"	d
BMI160_USER_INTR_ENABLE_1_LOW_G_ENABLE__POS	bosch/bmi160.h	2197;"	d
BMI160_USER_INTR_ENABLE_1_LOW_G_ENABLE__REG	bosch/bmi160.h	2200;"	d
BMI160_USER_INTR_ENABLE_2_ADDR	bosch/bmi160.h	840;"	d
BMI160_USER_INTR_ENABLE_2_NOMOTION_X_ENABLE__LEN	bosch/bmi160.h	2232;"	d
BMI160_USER_INTR_ENABLE_2_NOMOTION_X_ENABLE__MSK	bosch/bmi160.h	2233;"	d
BMI160_USER_INTR_ENABLE_2_NOMOTION_X_ENABLE__POS	bosch/bmi160.h	2231;"	d
BMI160_USER_INTR_ENABLE_2_NOMOTION_X_ENABLE__REG	bosch/bmi160.h	2234;"	d
BMI160_USER_INTR_ENABLE_2_NOMOTION_Y_ENABLE__LEN	bosch/bmi160.h	2239;"	d
BMI160_USER_INTR_ENABLE_2_NOMOTION_Y_ENABLE__MSK	bosch/bmi160.h	2240;"	d
BMI160_USER_INTR_ENABLE_2_NOMOTION_Y_ENABLE__POS	bosch/bmi160.h	2238;"	d
BMI160_USER_INTR_ENABLE_2_NOMOTION_Y_ENABLE__REG	bosch/bmi160.h	2241;"	d
BMI160_USER_INTR_ENABLE_2_NOMOTION_Z_ENABLE__LEN	bosch/bmi160.h	2246;"	d
BMI160_USER_INTR_ENABLE_2_NOMOTION_Z_ENABLE__MSK	bosch/bmi160.h	2247;"	d
BMI160_USER_INTR_ENABLE_2_NOMOTION_Z_ENABLE__POS	bosch/bmi160.h	2245;"	d
BMI160_USER_INTR_ENABLE_2_NOMOTION_Z_ENABLE__REG	bosch/bmi160.h	2248;"	d
BMI160_USER_INTR_ENABLE_2_STEP_DETECTOR_ENABLE__LEN	bosch/bmi160.h	2255;"	d
BMI160_USER_INTR_ENABLE_2_STEP_DETECTOR_ENABLE__MSK	bosch/bmi160.h	2256;"	d
BMI160_USER_INTR_ENABLE_2_STEP_DETECTOR_ENABLE__POS	bosch/bmi160.h	2254;"	d
BMI160_USER_INTR_ENABLE_2_STEP_DETECTOR_ENABLE__REG	bosch/bmi160.h	2257;"	d
BMI160_USER_INTR_FLAT_0_ADDR	bosch/bmi160.h	874;"	d
BMI160_USER_INTR_FLAT_0_INTR_FLAT_THETA__LEN	bosch/bmi160.h	2812;"	d
BMI160_USER_INTR_FLAT_0_INTR_FLAT_THETA__MSK	bosch/bmi160.h	2813;"	d
BMI160_USER_INTR_FLAT_0_INTR_FLAT_THETA__POS	bosch/bmi160.h	2811;"	d
BMI160_USER_INTR_FLAT_0_INTR_FLAT_THETA__REG	bosch/bmi160.h	2814;"	d
BMI160_USER_INTR_FLAT_1_ADDR	bosch/bmi160.h	875;"	d
BMI160_USER_INTR_FLAT_1_INTR_FLAT_HOLD__LEN	bosch/bmi160.h	2830;"	d
BMI160_USER_INTR_FLAT_1_INTR_FLAT_HOLD__MSK	bosch/bmi160.h	2831;"	d
BMI160_USER_INTR_FLAT_1_INTR_FLAT_HOLD__POS	bosch/bmi160.h	2829;"	d
BMI160_USER_INTR_FLAT_1_INTR_FLAT_HOLD__REG	bosch/bmi160.h	2832;"	d
BMI160_USER_INTR_FLAT_1_INTR_FLAT_HYST__LEN	bosch/bmi160.h	2821;"	d
BMI160_USER_INTR_FLAT_1_INTR_FLAT_HYST__MSK	bosch/bmi160.h	2822;"	d
BMI160_USER_INTR_FLAT_1_INTR_FLAT_HYST__POS	bosch/bmi160.h	2820;"	d
BMI160_USER_INTR_FLAT_1_INTR_FLAT_HYST__REG	bosch/bmi160.h	2823;"	d
BMI160_USER_INTR_LATCH_ADDR	bosch/bmi160.h	845;"	d
BMI160_USER_INTR_LATCH__LEN	bosch/bmi160.h	2334;"	d
BMI160_USER_INTR_LATCH__MSK	bosch/bmi160.h	2335;"	d
BMI160_USER_INTR_LATCH__POS	bosch/bmi160.h	2333;"	d
BMI160_USER_INTR_LATCH__REG	bosch/bmi160.h	2336;"	d
BMI160_USER_INTR_LOWHIGH_0_ADDR	bosch/bmi160.h	861;"	d
BMI160_USER_INTR_LOWHIGH_0_INTR_LOW_DURN__LEN	bosch/bmi160.h	2594;"	d
BMI160_USER_INTR_LOWHIGH_0_INTR_LOW_DURN__MSK	bosch/bmi160.h	2595;"	d
BMI160_USER_INTR_LOWHIGH_0_INTR_LOW_DURN__POS	bosch/bmi160.h	2593;"	d
BMI160_USER_INTR_LOWHIGH_0_INTR_LOW_DURN__REG	bosch/bmi160.h	2596;"	d
BMI160_USER_INTR_LOWHIGH_1_ADDR	bosch/bmi160.h	862;"	d
BMI160_USER_INTR_LOWHIGH_1_INTR_LOW_THRES__LEN	bosch/bmi160.h	2603;"	d
BMI160_USER_INTR_LOWHIGH_1_INTR_LOW_THRES__MSK	bosch/bmi160.h	2604;"	d
BMI160_USER_INTR_LOWHIGH_1_INTR_LOW_THRES__POS	bosch/bmi160.h	2602;"	d
BMI160_USER_INTR_LOWHIGH_1_INTR_LOW_THRES__REG	bosch/bmi160.h	2605;"	d
BMI160_USER_INTR_LOWHIGH_2_ADDR	bosch/bmi160.h	863;"	d
BMI160_USER_INTR_LOWHIGH_2_INTR_HIGH_G_HYST__LEN	bosch/bmi160.h	2630;"	d
BMI160_USER_INTR_LOWHIGH_2_INTR_HIGH_G_HYST__MSK	bosch/bmi160.h	2631;"	d
BMI160_USER_INTR_LOWHIGH_2_INTR_HIGH_G_HYST__POS	bosch/bmi160.h	2629;"	d
BMI160_USER_INTR_LOWHIGH_2_INTR_HIGH_G_HYST__REG	bosch/bmi160.h	2632;"	d
BMI160_USER_INTR_LOWHIGH_2_INTR_LOW_G_HYST__LEN	bosch/bmi160.h	2612;"	d
BMI160_USER_INTR_LOWHIGH_2_INTR_LOW_G_HYST__MSK	bosch/bmi160.h	2613;"	d
BMI160_USER_INTR_LOWHIGH_2_INTR_LOW_G_HYST__POS	bosch/bmi160.h	2611;"	d
BMI160_USER_INTR_LOWHIGH_2_INTR_LOW_G_HYST__REG	bosch/bmi160.h	2614;"	d
BMI160_USER_INTR_LOWHIGH_2_INTR_LOW_G_MODE__LEN	bosch/bmi160.h	2621;"	d
BMI160_USER_INTR_LOWHIGH_2_INTR_LOW_G_MODE__MSK	bosch/bmi160.h	2622;"	d
BMI160_USER_INTR_LOWHIGH_2_INTR_LOW_G_MODE__POS	bosch/bmi160.h	2620;"	d
BMI160_USER_INTR_LOWHIGH_2_INTR_LOW_G_MODE__REG	bosch/bmi160.h	2623;"	d
BMI160_USER_INTR_LOWHIGH_3_ADDR	bosch/bmi160.h	864;"	d
BMI160_USER_INTR_LOWHIGH_3_INTR_HIGH_G_DURN__LEN	bosch/bmi160.h	2639;"	d
BMI160_USER_INTR_LOWHIGH_3_INTR_HIGH_G_DURN__MSK	bosch/bmi160.h	2640;"	d
BMI160_USER_INTR_LOWHIGH_3_INTR_HIGH_G_DURN__POS	bosch/bmi160.h	2638;"	d
BMI160_USER_INTR_LOWHIGH_3_INTR_HIGH_G_DURN__REG	bosch/bmi160.h	2641;"	d
BMI160_USER_INTR_LOWHIGH_4_ADDR	bosch/bmi160.h	865;"	d
BMI160_USER_INTR_LOWHIGH_4_INTR_HIGH_THRES__LEN	bosch/bmi160.h	2648;"	d
BMI160_USER_INTR_LOWHIGH_4_INTR_HIGH_THRES__MSK	bosch/bmi160.h	2649;"	d
BMI160_USER_INTR_LOWHIGH_4_INTR_HIGH_THRES__POS	bosch/bmi160.h	2647;"	d
BMI160_USER_INTR_LOWHIGH_4_INTR_HIGH_THRES__REG	bosch/bmi160.h	2650;"	d
BMI160_USER_INTR_MAP_0_ADDR	bosch/bmi160.h	849;"	d
BMI160_USER_INTR_MAP_0_INTR1_ANY_MOTION__LEN	bosch/bmi160.h	2375;"	d
BMI160_USER_INTR_MAP_0_INTR1_ANY_MOTION__MSK	bosch/bmi160.h	2376;"	d
BMI160_USER_INTR_MAP_0_INTR1_ANY_MOTION__POS	bosch/bmi160.h	2374;"	d
BMI160_USER_INTR_MAP_0_INTR1_ANY_MOTION__REG	bosch/bmi160.h	2377;"	d
BMI160_USER_INTR_MAP_0_INTR1_DOUBLE_TAP__LEN	bosch/bmi160.h	2392;"	d
BMI160_USER_INTR_MAP_0_INTR1_DOUBLE_TAP__MSK	bosch/bmi160.h	2393;"	d
BMI160_USER_INTR_MAP_0_INTR1_DOUBLE_TAP__POS	bosch/bmi160.h	2391;"	d
BMI160_USER_INTR_MAP_0_INTR1_DOUBLE_TAP__REG	bosch/bmi160.h	2394;"	d
BMI160_USER_INTR_MAP_0_INTR1_FLAT__LEN	bosch/bmi160.h	2419;"	d
BMI160_USER_INTR_MAP_0_INTR1_FLAT__MSK	bosch/bmi160.h	2420;"	d
BMI160_USER_INTR_MAP_0_INTR1_FLAT__POS	bosch/bmi160.h	2418;"	d
BMI160_USER_INTR_MAP_0_INTR1_FLAT__REG	bosch/bmi160.h	2421;"	d
BMI160_USER_INTR_MAP_0_INTR1_HIGH_G__LEN	bosch/bmi160.h	2366;"	d
BMI160_USER_INTR_MAP_0_INTR1_HIGH_G__MSK	bosch/bmi160.h	2367;"	d
BMI160_USER_INTR_MAP_0_INTR1_HIGH_G__POS	bosch/bmi160.h	2365;"	d
BMI160_USER_INTR_MAP_0_INTR1_HIGH_G__REG	bosch/bmi160.h	2368;"	d
BMI160_USER_INTR_MAP_0_INTR1_LOW_G__LEN	bosch/bmi160.h	2358;"	d
BMI160_USER_INTR_MAP_0_INTR1_LOW_G__MSK	bosch/bmi160.h	2359;"	d
BMI160_USER_INTR_MAP_0_INTR1_LOW_G__POS	bosch/bmi160.h	2357;"	d
BMI160_USER_INTR_MAP_0_INTR1_LOW_G__REG	bosch/bmi160.h	2360;"	d
BMI160_USER_INTR_MAP_0_INTR1_NOMOTION__LEN	bosch/bmi160.h	2384;"	d
BMI160_USER_INTR_MAP_0_INTR1_NOMOTION__MSK	bosch/bmi160.h	2385;"	d
BMI160_USER_INTR_MAP_0_INTR1_NOMOTION__POS	bosch/bmi160.h	2383;"	d
BMI160_USER_INTR_MAP_0_INTR1_NOMOTION__REG	bosch/bmi160.h	2386;"	d
BMI160_USER_INTR_MAP_0_INTR1_ORIENT__LEN	bosch/bmi160.h	2410;"	d
BMI160_USER_INTR_MAP_0_INTR1_ORIENT__MSK	bosch/bmi160.h	2411;"	d
BMI160_USER_INTR_MAP_0_INTR1_ORIENT__POS	bosch/bmi160.h	2409;"	d
BMI160_USER_INTR_MAP_0_INTR1_ORIENT__REG	bosch/bmi160.h	2412;"	d
BMI160_USER_INTR_MAP_0_INTR1_SINGLE_TAP__LEN	bosch/bmi160.h	2401;"	d
BMI160_USER_INTR_MAP_0_INTR1_SINGLE_TAP__MSK	bosch/bmi160.h	2402;"	d
BMI160_USER_INTR_MAP_0_INTR1_SINGLE_TAP__POS	bosch/bmi160.h	2400;"	d
BMI160_USER_INTR_MAP_0_INTR1_SINGLE_TAP__REG	bosch/bmi160.h	2403;"	d
BMI160_USER_INTR_MAP_1_ADDR	bosch/bmi160.h	850;"	d
BMI160_USER_INTR_MAP_1_INTR1_DATA_RDY__LEN	bosch/bmi160.h	2486;"	d
BMI160_USER_INTR_MAP_1_INTR1_DATA_RDY__MSK	bosch/bmi160.h	2487;"	d
BMI160_USER_INTR_MAP_1_INTR1_DATA_RDY__POS	bosch/bmi160.h	2485;"	d
BMI160_USER_INTR_MAP_1_INTR1_DATA_RDY__REG	bosch/bmi160.h	2488;"	d
BMI160_USER_INTR_MAP_1_INTR1_FIFO_FULL__LEN	bosch/bmi160.h	2470;"	d
BMI160_USER_INTR_MAP_1_INTR1_FIFO_FULL__MSK	bosch/bmi160.h	2471;"	d
BMI160_USER_INTR_MAP_1_INTR1_FIFO_FULL__POS	bosch/bmi160.h	2469;"	d
BMI160_USER_INTR_MAP_1_INTR1_FIFO_FULL__REG	bosch/bmi160.h	2472;"	d
BMI160_USER_INTR_MAP_1_INTR1_FIFO_WM__LEN	bosch/bmi160.h	2477;"	d
BMI160_USER_INTR_MAP_1_INTR1_FIFO_WM__MSK	bosch/bmi160.h	2478;"	d
BMI160_USER_INTR_MAP_1_INTR1_FIFO_WM__POS	bosch/bmi160.h	2476;"	d
BMI160_USER_INTR_MAP_1_INTR1_FIFO_WM__REG	bosch/bmi160.h	2479;"	d
BMI160_USER_INTR_MAP_1_INTR1_PMU_TRIG__LEN	bosch/bmi160.h	2461;"	d
BMI160_USER_INTR_MAP_1_INTR1_PMU_TRIG__MSK	bosch/bmi160.h	2462;"	d
BMI160_USER_INTR_MAP_1_INTR1_PMU_TRIG__POS	bosch/bmi160.h	2460;"	d
BMI160_USER_INTR_MAP_1_INTR1_PMU_TRIG__REG	bosch/bmi160.h	2463;"	d
BMI160_USER_INTR_MAP_1_INTR2_DATA_RDY__LEN	bosch/bmi160.h	2452;"	d
BMI160_USER_INTR_MAP_1_INTR2_DATA_RDY__MSK	bosch/bmi160.h	2453;"	d
BMI160_USER_INTR_MAP_1_INTR2_DATA_RDY__POS	bosch/bmi160.h	2451;"	d
BMI160_USER_INTR_MAP_1_INTR2_DATA_RDY__REG	bosch/bmi160.h	2454;"	d
BMI160_USER_INTR_MAP_1_INTR2_FIFO_FULL__LEN	bosch/bmi160.h	2436;"	d
BMI160_USER_INTR_MAP_1_INTR2_FIFO_FULL__MSK	bosch/bmi160.h	2437;"	d
BMI160_USER_INTR_MAP_1_INTR2_FIFO_FULL__POS	bosch/bmi160.h	2435;"	d
BMI160_USER_INTR_MAP_1_INTR2_FIFO_FULL__REG	bosch/bmi160.h	2438;"	d
BMI160_USER_INTR_MAP_1_INTR2_FIFO_WM__LEN	bosch/bmi160.h	2443;"	d
BMI160_USER_INTR_MAP_1_INTR2_FIFO_WM__MSK	bosch/bmi160.h	2444;"	d
BMI160_USER_INTR_MAP_1_INTR2_FIFO_WM__POS	bosch/bmi160.h	2442;"	d
BMI160_USER_INTR_MAP_1_INTR2_FIFO_WM__REG	bosch/bmi160.h	2445;"	d
BMI160_USER_INTR_MAP_1_INTR2_PMU_TRIG__LEN	bosch/bmi160.h	2427;"	d
BMI160_USER_INTR_MAP_1_INTR2_PMU_TRIG__MSK	bosch/bmi160.h	2428;"	d
BMI160_USER_INTR_MAP_1_INTR2_PMU_TRIG__POS	bosch/bmi160.h	2426;"	d
BMI160_USER_INTR_MAP_1_INTR2_PMU_TRIG__REG	bosch/bmi160.h	2429;"	d
BMI160_USER_INTR_MAP_2_ADDR	bosch/bmi160.h	851;"	d
BMI160_USER_INTR_MAP_2_INTR2_ANY_MOTION__LEN	bosch/bmi160.h	2512;"	d
BMI160_USER_INTR_MAP_2_INTR2_ANY_MOTION__MSK	bosch/bmi160.h	2513;"	d
BMI160_USER_INTR_MAP_2_INTR2_ANY_MOTION__POS	bosch/bmi160.h	2511;"	d
BMI160_USER_INTR_MAP_2_INTR2_ANY_MOTION__REG	bosch/bmi160.h	2514;"	d
BMI160_USER_INTR_MAP_2_INTR2_DOUBLE_TAP__LEN	bosch/bmi160.h	2529;"	d
BMI160_USER_INTR_MAP_2_INTR2_DOUBLE_TAP__MSK	bosch/bmi160.h	2530;"	d
BMI160_USER_INTR_MAP_2_INTR2_DOUBLE_TAP__POS	bosch/bmi160.h	2528;"	d
BMI160_USER_INTR_MAP_2_INTR2_DOUBLE_TAP__REG	bosch/bmi160.h	2531;"	d
BMI160_USER_INTR_MAP_2_INTR2_FLAT__LEN	bosch/bmi160.h	2556;"	d
BMI160_USER_INTR_MAP_2_INTR2_FLAT__MSK	bosch/bmi160.h	2557;"	d
BMI160_USER_INTR_MAP_2_INTR2_FLAT__POS	bosch/bmi160.h	2555;"	d
BMI160_USER_INTR_MAP_2_INTR2_FLAT__REG	bosch/bmi160.h	2558;"	d
BMI160_USER_INTR_MAP_2_INTR2_HIGH_G__LEN	bosch/bmi160.h	2503;"	d
BMI160_USER_INTR_MAP_2_INTR2_HIGH_G__MSK	bosch/bmi160.h	2504;"	d
BMI160_USER_INTR_MAP_2_INTR2_HIGH_G__POS	bosch/bmi160.h	2502;"	d
BMI160_USER_INTR_MAP_2_INTR2_HIGH_G__REG	bosch/bmi160.h	2505;"	d
BMI160_USER_INTR_MAP_2_INTR2_LOW_G__LEN	bosch/bmi160.h	2495;"	d
BMI160_USER_INTR_MAP_2_INTR2_LOW_G__MSK	bosch/bmi160.h	2496;"	d
BMI160_USER_INTR_MAP_2_INTR2_LOW_G__POS	bosch/bmi160.h	2494;"	d
BMI160_USER_INTR_MAP_2_INTR2_LOW_G__REG	bosch/bmi160.h	2497;"	d
BMI160_USER_INTR_MAP_2_INTR2_NOMOTION__LEN	bosch/bmi160.h	2521;"	d
BMI160_USER_INTR_MAP_2_INTR2_NOMOTION__MSK	bosch/bmi160.h	2522;"	d
BMI160_USER_INTR_MAP_2_INTR2_NOMOTION__POS	bosch/bmi160.h	2520;"	d
BMI160_USER_INTR_MAP_2_INTR2_NOMOTION__REG	bosch/bmi160.h	2523;"	d
BMI160_USER_INTR_MAP_2_INTR2_ORIENT__LEN	bosch/bmi160.h	2547;"	d
BMI160_USER_INTR_MAP_2_INTR2_ORIENT__MSK	bosch/bmi160.h	2548;"	d
BMI160_USER_INTR_MAP_2_INTR2_ORIENT__POS	bosch/bmi160.h	2546;"	d
BMI160_USER_INTR_MAP_2_INTR2_ORIENT__REG	bosch/bmi160.h	2549;"	d
BMI160_USER_INTR_MAP_2_INTR2_SINGLE_TAP__LEN	bosch/bmi160.h	2538;"	d
BMI160_USER_INTR_MAP_2_INTR2_SINGLE_TAP__MSK	bosch/bmi160.h	2539;"	d
BMI160_USER_INTR_MAP_2_INTR2_SINGLE_TAP__POS	bosch/bmi160.h	2537;"	d
BMI160_USER_INTR_MAP_2_INTR2_SINGLE_TAP__REG	bosch/bmi160.h	2540;"	d
BMI160_USER_INTR_MOTION_0_ADDR	bosch/bmi160.h	866;"	d
BMI160_USER_INTR_MOTION_0_INTR_ANY_MOTION_DURN__LEN	bosch/bmi160.h	2657;"	d
BMI160_USER_INTR_MOTION_0_INTR_ANY_MOTION_DURN__MSK	bosch/bmi160.h	2658;"	d
BMI160_USER_INTR_MOTION_0_INTR_ANY_MOTION_DURN__POS	bosch/bmi160.h	2656;"	d
BMI160_USER_INTR_MOTION_0_INTR_ANY_MOTION_DURN__REG	bosch/bmi160.h	2659;"	d
BMI160_USER_INTR_MOTION_0_INTR_SLOW_NO_MOTION_DURN__LEN	bosch/bmi160.h	2666;"	d
BMI160_USER_INTR_MOTION_0_INTR_SLOW_NO_MOTION_DURN__MSK	bosch/bmi160.h	2667;"	d
BMI160_USER_INTR_MOTION_0_INTR_SLOW_NO_MOTION_DURN__POS	bosch/bmi160.h	2665;"	d
BMI160_USER_INTR_MOTION_0_INTR_SLOW_NO_MOTION_DURN__REG	bosch/bmi160.h	2668;"	d
BMI160_USER_INTR_MOTION_1_ADDR	bosch/bmi160.h	867;"	d
BMI160_USER_INTR_MOTION_1_INTR_ANY_MOTION_THRES__LEN	bosch/bmi160.h	2675;"	d
BMI160_USER_INTR_MOTION_1_INTR_ANY_MOTION_THRES__MSK	bosch/bmi160.h	2676;"	d
BMI160_USER_INTR_MOTION_1_INTR_ANY_MOTION_THRES__POS	bosch/bmi160.h	2674;"	d
BMI160_USER_INTR_MOTION_1_INTR_ANY_MOTION_THRES__REG	bosch/bmi160.h	2677;"	d
BMI160_USER_INTR_MOTION_2_ADDR	bosch/bmi160.h	868;"	d
BMI160_USER_INTR_MOTION_2_INTR_SLOW_NO_MOTION_THRES__LEN	bosch/bmi160.h	2684;"	d
BMI160_USER_INTR_MOTION_2_INTR_SLOW_NO_MOTION_THRES__MSK	bosch/bmi160.h	2685;"	d
BMI160_USER_INTR_MOTION_2_INTR_SLOW_NO_MOTION_THRES__POS	bosch/bmi160.h	2683;"	d
BMI160_USER_INTR_MOTION_2_INTR_SLOW_NO_MOTION_THRES__REG	bosch/bmi160.h	2686;"	d
BMI160_USER_INTR_MOTION_3_ADDR	bosch/bmi160.h	869;"	d
BMI160_USER_INTR_MOTION_3_INTR_SLOW_NO_MOTION_SELECT__LEN	bosch/bmi160.h	2693;"	d
BMI160_USER_INTR_MOTION_3_INTR_SLOW_NO_MOTION_SELECT__MSK	bosch/bmi160.h	2694;"	d
BMI160_USER_INTR_MOTION_3_INTR_SLOW_NO_MOTION_SELECT__POS	bosch/bmi160.h	2692;"	d
BMI160_USER_INTR_MOTION_3_INTR_SLOW_NO_MOTION_SELECT__REG	bosch/bmi160.h	2695;"	d
BMI160_USER_INTR_ORIENT_0_ADDR	bosch/bmi160.h	872;"	d
BMI160_USER_INTR_ORIENT_0_INTR_ORIENT_BLOCKING__LEN	bosch/bmi160.h	2767;"	d
BMI160_USER_INTR_ORIENT_0_INTR_ORIENT_BLOCKING__MSK	bosch/bmi160.h	2768;"	d
BMI160_USER_INTR_ORIENT_0_INTR_ORIENT_BLOCKING__POS	bosch/bmi160.h	2766;"	d
BMI160_USER_INTR_ORIENT_0_INTR_ORIENT_BLOCKING__REG	bosch/bmi160.h	2769;"	d
BMI160_USER_INTR_ORIENT_0_INTR_ORIENT_HYST__LEN	bosch/bmi160.h	2776;"	d
BMI160_USER_INTR_ORIENT_0_INTR_ORIENT_HYST__MSK	bosch/bmi160.h	2777;"	d
BMI160_USER_INTR_ORIENT_0_INTR_ORIENT_HYST__POS	bosch/bmi160.h	2775;"	d
BMI160_USER_INTR_ORIENT_0_INTR_ORIENT_HYST__REG	bosch/bmi160.h	2778;"	d
BMI160_USER_INTR_ORIENT_0_INTR_ORIENT_MODE__LEN	bosch/bmi160.h	2758;"	d
BMI160_USER_INTR_ORIENT_0_INTR_ORIENT_MODE__MSK	bosch/bmi160.h	2759;"	d
BMI160_USER_INTR_ORIENT_0_INTR_ORIENT_MODE__POS	bosch/bmi160.h	2757;"	d
BMI160_USER_INTR_ORIENT_0_INTR_ORIENT_MODE__REG	bosch/bmi160.h	2760;"	d
BMI160_USER_INTR_ORIENT_1_ADDR	bosch/bmi160.h	873;"	d
BMI160_USER_INTR_ORIENT_1_INTR_ORIENT_AXES_EX__LEN	bosch/bmi160.h	2803;"	d
BMI160_USER_INTR_ORIENT_1_INTR_ORIENT_AXES_EX__MSK	bosch/bmi160.h	2804;"	d
BMI160_USER_INTR_ORIENT_1_INTR_ORIENT_AXES_EX__POS	bosch/bmi160.h	2802;"	d
BMI160_USER_INTR_ORIENT_1_INTR_ORIENT_AXES_EX__REG	bosch/bmi160.h	2805;"	d
BMI160_USER_INTR_ORIENT_1_INTR_ORIENT_THETA__LEN	bosch/bmi160.h	2785;"	d
BMI160_USER_INTR_ORIENT_1_INTR_ORIENT_THETA__MSK	bosch/bmi160.h	2786;"	d
BMI160_USER_INTR_ORIENT_1_INTR_ORIENT_THETA__POS	bosch/bmi160.h	2784;"	d
BMI160_USER_INTR_ORIENT_1_INTR_ORIENT_THETA__REG	bosch/bmi160.h	2787;"	d
BMI160_USER_INTR_ORIENT_1_INTR_ORIENT_UD_ENABLE__LEN	bosch/bmi160.h	2794;"	d
BMI160_USER_INTR_ORIENT_1_INTR_ORIENT_UD_ENABLE__MSK	bosch/bmi160.h	2795;"	d
BMI160_USER_INTR_ORIENT_1_INTR_ORIENT_UD_ENABLE__POS	bosch/bmi160.h	2793;"	d
BMI160_USER_INTR_ORIENT_1_INTR_ORIENT_UD_ENABLE__REG	bosch/bmi160.h	2796;"	d
BMI160_USER_INTR_OUT_CTRL_ADDR	bosch/bmi160.h	841;"	d
BMI160_USER_INTR_SIGNIFICANT_MOTION_PROOF__LEN	bosch/bmi160.h	2716;"	d
BMI160_USER_INTR_SIGNIFICANT_MOTION_PROOF__MSK	bosch/bmi160.h	2717;"	d
BMI160_USER_INTR_SIGNIFICANT_MOTION_PROOF__POS	bosch/bmi160.h	2715;"	d
BMI160_USER_INTR_SIGNIFICANT_MOTION_PROOF__REG	bosch/bmi160.h	2718;"	d
BMI160_USER_INTR_SIGNIFICANT_MOTION_SKIP__LEN	bosch/bmi160.h	2709;"	d
BMI160_USER_INTR_SIGNIFICANT_MOTION_SKIP__MSK	bosch/bmi160.h	2710;"	d
BMI160_USER_INTR_SIGNIFICANT_MOTION_SKIP__POS	bosch/bmi160.h	2708;"	d
BMI160_USER_INTR_SIGNIFICANT_MOTION_SKIP__REG	bosch/bmi160.h	2711;"	d
BMI160_USER_INTR_SIGNIFICATION_MOTION_SELECT__LEN	bosch/bmi160.h	2702;"	d
BMI160_USER_INTR_SIGNIFICATION_MOTION_SELECT__MSK	bosch/bmi160.h	2703;"	d
BMI160_USER_INTR_SIGNIFICATION_MOTION_SELECT__POS	bosch/bmi160.h	2701;"	d
BMI160_USER_INTR_SIGNIFICATION_MOTION_SELECT__REG	bosch/bmi160.h	2704;"	d
BMI160_USER_INTR_STAT_0_ADDR	bosch/bmi160.h	783;"	d
BMI160_USER_INTR_STAT_0_ANY_MOTION__LEN	bosch/bmi160.h	1627;"	d
BMI160_USER_INTR_STAT_0_ANY_MOTION__MSK	bosch/bmi160.h	1628;"	d
BMI160_USER_INTR_STAT_0_ANY_MOTION__POS	bosch/bmi160.h	1626;"	d
BMI160_USER_INTR_STAT_0_ANY_MOTION__REG	bosch/bmi160.h	1629;"	d
BMI160_USER_INTR_STAT_0_DOUBLE_TAP_INTR__LEN	bosch/bmi160.h	1645;"	d
BMI160_USER_INTR_STAT_0_DOUBLE_TAP_INTR__MSK	bosch/bmi160.h	1646;"	d
BMI160_USER_INTR_STAT_0_DOUBLE_TAP_INTR__POS	bosch/bmi160.h	1644;"	d
BMI160_USER_INTR_STAT_0_DOUBLE_TAP_INTR__REG	bosch/bmi160.h	1647;"	d
BMI160_USER_INTR_STAT_0_FLAT__LEN	bosch/bmi160.h	1672;"	d
BMI160_USER_INTR_STAT_0_FLAT__MSK	bosch/bmi160.h	1673;"	d
BMI160_USER_INTR_STAT_0_FLAT__POS	bosch/bmi160.h	1671;"	d
BMI160_USER_INTR_STAT_0_FLAT__REG	bosch/bmi160.h	1674;"	d
BMI160_USER_INTR_STAT_0_ORIENT__LEN	bosch/bmi160.h	1663;"	d
BMI160_USER_INTR_STAT_0_ORIENT__MSK	bosch/bmi160.h	1664;"	d
BMI160_USER_INTR_STAT_0_ORIENT__POS	bosch/bmi160.h	1662;"	d
BMI160_USER_INTR_STAT_0_ORIENT__REG	bosch/bmi160.h	1665;"	d
BMI160_USER_INTR_STAT_0_PMU_TRIGGER__LEN	bosch/bmi160.h	1636;"	d
BMI160_USER_INTR_STAT_0_PMU_TRIGGER__MSK	bosch/bmi160.h	1637;"	d
BMI160_USER_INTR_STAT_0_PMU_TRIGGER__POS	bosch/bmi160.h	1635;"	d
BMI160_USER_INTR_STAT_0_PMU_TRIGGER__REG	bosch/bmi160.h	1638;"	d
BMI160_USER_INTR_STAT_0_SIGNIFICANT_INTR__LEN	bosch/bmi160.h	1618;"	d
BMI160_USER_INTR_STAT_0_SIGNIFICANT_INTR__MSK	bosch/bmi160.h	1619;"	d
BMI160_USER_INTR_STAT_0_SIGNIFICANT_INTR__POS	bosch/bmi160.h	1617;"	d
BMI160_USER_INTR_STAT_0_SIGNIFICANT_INTR__REG	bosch/bmi160.h	1620;"	d
BMI160_USER_INTR_STAT_0_SINGLE_TAP_INTR__LEN	bosch/bmi160.h	1654;"	d
BMI160_USER_INTR_STAT_0_SINGLE_TAP_INTR__MSK	bosch/bmi160.h	1655;"	d
BMI160_USER_INTR_STAT_0_SINGLE_TAP_INTR__POS	bosch/bmi160.h	1653;"	d
BMI160_USER_INTR_STAT_0_SINGLE_TAP_INTR__REG	bosch/bmi160.h	1656;"	d
BMI160_USER_INTR_STAT_0_STEP_INTR__LEN	bosch/bmi160.h	1609;"	d
BMI160_USER_INTR_STAT_0_STEP_INTR__MSK	bosch/bmi160.h	1610;"	d
BMI160_USER_INTR_STAT_0_STEP_INTR__POS	bosch/bmi160.h	1608;"	d
BMI160_USER_INTR_STAT_0_STEP_INTR__REG	bosch/bmi160.h	1611;"	d
BMI160_USER_INTR_STAT_1_ADDR	bosch/bmi160.h	784;"	d
BMI160_USER_INTR_STAT_1_DATA_RDY_INTR__LEN	bosch/bmi160.h	1699;"	d
BMI160_USER_INTR_STAT_1_DATA_RDY_INTR__MSK	bosch/bmi160.h	1700;"	d
BMI160_USER_INTR_STAT_1_DATA_RDY_INTR__POS	bosch/bmi160.h	1698;"	d
BMI160_USER_INTR_STAT_1_DATA_RDY_INTR__REG	bosch/bmi160.h	1701;"	d
BMI160_USER_INTR_STAT_1_FIFO_FULL_INTR__LEN	bosch/bmi160.h	1708;"	d
BMI160_USER_INTR_STAT_1_FIFO_FULL_INTR__MSK	bosch/bmi160.h	1709;"	d
BMI160_USER_INTR_STAT_1_FIFO_FULL_INTR__POS	bosch/bmi160.h	1707;"	d
BMI160_USER_INTR_STAT_1_FIFO_FULL_INTR__REG	bosch/bmi160.h	1710;"	d
BMI160_USER_INTR_STAT_1_FIFO_WM_INTR__LEN	bosch/bmi160.h	1717;"	d
BMI160_USER_INTR_STAT_1_FIFO_WM_INTR__MSK	bosch/bmi160.h	1718;"	d
BMI160_USER_INTR_STAT_1_FIFO_WM_INTR__POS	bosch/bmi160.h	1716;"	d
BMI160_USER_INTR_STAT_1_FIFO_WM_INTR__REG	bosch/bmi160.h	1719;"	d
BMI160_USER_INTR_STAT_1_HIGH_G_INTR__LEN	bosch/bmi160.h	1681;"	d
BMI160_USER_INTR_STAT_1_HIGH_G_INTR__MSK	bosch/bmi160.h	1682;"	d
BMI160_USER_INTR_STAT_1_HIGH_G_INTR__POS	bosch/bmi160.h	1680;"	d
BMI160_USER_INTR_STAT_1_HIGH_G_INTR__REG	bosch/bmi160.h	1683;"	d
BMI160_USER_INTR_STAT_1_LOW_G_INTR__LEN	bosch/bmi160.h	1690;"	d
BMI160_USER_INTR_STAT_1_LOW_G_INTR__MSK	bosch/bmi160.h	1691;"	d
BMI160_USER_INTR_STAT_1_LOW_G_INTR__POS	bosch/bmi160.h	1689;"	d
BMI160_USER_INTR_STAT_1_LOW_G_INTR__REG	bosch/bmi160.h	1692;"	d
BMI160_USER_INTR_STAT_1_NOMOTION_INTR__LEN	bosch/bmi160.h	1726;"	d
BMI160_USER_INTR_STAT_1_NOMOTION_INTR__MSK	bosch/bmi160.h	1727;"	d
BMI160_USER_INTR_STAT_1_NOMOTION_INTR__POS	bosch/bmi160.h	1725;"	d
BMI160_USER_INTR_STAT_1_NOMOTION_INTR__REG	bosch/bmi160.h	1728;"	d
BMI160_USER_INTR_STAT_2_ADDR	bosch/bmi160.h	785;"	d
BMI160_USER_INTR_STAT_2_ANY_MOTION_FIRST_X__LEN	bosch/bmi160.h	1735;"	d
BMI160_USER_INTR_STAT_2_ANY_MOTION_FIRST_X__MSK	bosch/bmi160.h	1736;"	d
BMI160_USER_INTR_STAT_2_ANY_MOTION_FIRST_X__POS	bosch/bmi160.h	1734;"	d
BMI160_USER_INTR_STAT_2_ANY_MOTION_FIRST_X__REG	bosch/bmi160.h	1737;"	d
BMI160_USER_INTR_STAT_2_ANY_MOTION_FIRST_Y__LEN	bosch/bmi160.h	1742;"	d
BMI160_USER_INTR_STAT_2_ANY_MOTION_FIRST_Y__MSK	bosch/bmi160.h	1743;"	d
BMI160_USER_INTR_STAT_2_ANY_MOTION_FIRST_Y__POS	bosch/bmi160.h	1741;"	d
BMI160_USER_INTR_STAT_2_ANY_MOTION_FIRST_Y__REG	bosch/bmi160.h	1744;"	d
BMI160_USER_INTR_STAT_2_ANY_MOTION_FIRST_Z__LEN	bosch/bmi160.h	1749;"	d
BMI160_USER_INTR_STAT_2_ANY_MOTION_FIRST_Z__MSK	bosch/bmi160.h	1750;"	d
BMI160_USER_INTR_STAT_2_ANY_MOTION_FIRST_Z__POS	bosch/bmi160.h	1748;"	d
BMI160_USER_INTR_STAT_2_ANY_MOTION_FIRST_Z__REG	bosch/bmi160.h	1751;"	d
BMI160_USER_INTR_STAT_2_ANY_MOTION_SIGN__LEN	bosch/bmi160.h	1758;"	d
BMI160_USER_INTR_STAT_2_ANY_MOTION_SIGN__MSK	bosch/bmi160.h	1759;"	d
BMI160_USER_INTR_STAT_2_ANY_MOTION_SIGN__POS	bosch/bmi160.h	1757;"	d
BMI160_USER_INTR_STAT_2_ANY_MOTION_SIGN__REG	bosch/bmi160.h	1760;"	d
BMI160_USER_INTR_STAT_2_TAP_FIRST_X__LEN	bosch/bmi160.h	1767;"	d
BMI160_USER_INTR_STAT_2_TAP_FIRST_X__MSK	bosch/bmi160.h	1768;"	d
BMI160_USER_INTR_STAT_2_TAP_FIRST_X__POS	bosch/bmi160.h	1766;"	d
BMI160_USER_INTR_STAT_2_TAP_FIRST_X__REG	bosch/bmi160.h	1769;"	d
BMI160_USER_INTR_STAT_2_TAP_FIRST_Y__LEN	bosch/bmi160.h	1774;"	d
BMI160_USER_INTR_STAT_2_TAP_FIRST_Y__MSK	bosch/bmi160.h	1775;"	d
BMI160_USER_INTR_STAT_2_TAP_FIRST_Y__POS	bosch/bmi160.h	1773;"	d
BMI160_USER_INTR_STAT_2_TAP_FIRST_Y__REG	bosch/bmi160.h	1776;"	d
BMI160_USER_INTR_STAT_2_TAP_FIRST_Z__LEN	bosch/bmi160.h	1781;"	d
BMI160_USER_INTR_STAT_2_TAP_FIRST_Z__MSK	bosch/bmi160.h	1782;"	d
BMI160_USER_INTR_STAT_2_TAP_FIRST_Z__POS	bosch/bmi160.h	1780;"	d
BMI160_USER_INTR_STAT_2_TAP_FIRST_Z__REG	bosch/bmi160.h	1783;"	d
BMI160_USER_INTR_STAT_2_TAP_SIGN__LEN	bosch/bmi160.h	1788;"	d
BMI160_USER_INTR_STAT_2_TAP_SIGN__MSK	bosch/bmi160.h	1789;"	d
BMI160_USER_INTR_STAT_2_TAP_SIGN__POS	bosch/bmi160.h	1787;"	d
BMI160_USER_INTR_STAT_2_TAP_SIGN__REG	bosch/bmi160.h	1790;"	d
BMI160_USER_INTR_STAT_2__LEN	bosch/bmi160.h	1797;"	d
BMI160_USER_INTR_STAT_2__MSK	bosch/bmi160.h	1798;"	d
BMI160_USER_INTR_STAT_2__POS	bosch/bmi160.h	1796;"	d
BMI160_USER_INTR_STAT_2__REG	bosch/bmi160.h	1799;"	d
BMI160_USER_INTR_STAT_3_ADDR	bosch/bmi160.h	786;"	d
BMI160_USER_INTR_STAT_3_FLAT__LEN	bosch/bmi160.h	1852;"	d
BMI160_USER_INTR_STAT_3_FLAT__MSK	bosch/bmi160.h	1853;"	d
BMI160_USER_INTR_STAT_3_FLAT__POS	bosch/bmi160.h	1851;"	d
BMI160_USER_INTR_STAT_3_FLAT__REG	bosch/bmi160.h	1854;"	d
BMI160_USER_INTR_STAT_3_HIGH_G_FIRST_X__LEN	bosch/bmi160.h	1806;"	d
BMI160_USER_INTR_STAT_3_HIGH_G_FIRST_X__MSK	bosch/bmi160.h	1807;"	d
BMI160_USER_INTR_STAT_3_HIGH_G_FIRST_X__POS	bosch/bmi160.h	1805;"	d
BMI160_USER_INTR_STAT_3_HIGH_G_FIRST_X__REG	bosch/bmi160.h	1808;"	d
BMI160_USER_INTR_STAT_3_HIGH_G_FIRST_Y__LEN	bosch/bmi160.h	1813;"	d
BMI160_USER_INTR_STAT_3_HIGH_G_FIRST_Y__MSK	bosch/bmi160.h	1814;"	d
BMI160_USER_INTR_STAT_3_HIGH_G_FIRST_Y__POS	bosch/bmi160.h	1812;"	d
BMI160_USER_INTR_STAT_3_HIGH_G_FIRST_Y__REG	bosch/bmi160.h	1815;"	d
BMI160_USER_INTR_STAT_3_HIGH_G_FIRST_Z__LEN	bosch/bmi160.h	1820;"	d
BMI160_USER_INTR_STAT_3_HIGH_G_FIRST_Z__MSK	bosch/bmi160.h	1821;"	d
BMI160_USER_INTR_STAT_3_HIGH_G_FIRST_Z__POS	bosch/bmi160.h	1819;"	d
BMI160_USER_INTR_STAT_3_HIGH_G_FIRST_Z__REG	bosch/bmi160.h	1822;"	d
BMI160_USER_INTR_STAT_3_HIGH_G_SIGN__LEN	bosch/bmi160.h	1827;"	d
BMI160_USER_INTR_STAT_3_HIGH_G_SIGN__MSK	bosch/bmi160.h	1828;"	d
BMI160_USER_INTR_STAT_3_HIGH_G_SIGN__POS	bosch/bmi160.h	1826;"	d
BMI160_USER_INTR_STAT_3_HIGH_G_SIGN__REG	bosch/bmi160.h	1829;"	d
BMI160_USER_INTR_STAT_3_ORIENT_XY__LEN	bosch/bmi160.h	1836;"	d
BMI160_USER_INTR_STAT_3_ORIENT_XY__MSK	bosch/bmi160.h	1837;"	d
BMI160_USER_INTR_STAT_3_ORIENT_XY__POS	bosch/bmi160.h	1835;"	d
BMI160_USER_INTR_STAT_3_ORIENT_XY__REG	bosch/bmi160.h	1838;"	d
BMI160_USER_INTR_STAT_3_ORIENT_Z__LEN	bosch/bmi160.h	1843;"	d
BMI160_USER_INTR_STAT_3_ORIENT_Z__MSK	bosch/bmi160.h	1844;"	d
BMI160_USER_INTR_STAT_3_ORIENT_Z__POS	bosch/bmi160.h	1842;"	d
BMI160_USER_INTR_STAT_3_ORIENT_Z__REG	bosch/bmi160.h	1845;"	d
BMI160_USER_INTR_STAT_3__LEN	bosch/bmi160.h	1861;"	d
BMI160_USER_INTR_STAT_3__MSK	bosch/bmi160.h	1862;"	d
BMI160_USER_INTR_STAT_3__POS	bosch/bmi160.h	1860;"	d
BMI160_USER_INTR_STAT_3__REG	bosch/bmi160.h	1863;"	d
BMI160_USER_INTR_TAP_0_ADDR	bosch/bmi160.h	870;"	d
BMI160_USER_INTR_TAP_0_INTR_TAP_DURN__LEN	bosch/bmi160.h	2725;"	d
BMI160_USER_INTR_TAP_0_INTR_TAP_DURN__MSK	bosch/bmi160.h	2726;"	d
BMI160_USER_INTR_TAP_0_INTR_TAP_DURN__POS	bosch/bmi160.h	2724;"	d
BMI160_USER_INTR_TAP_0_INTR_TAP_DURN__REG	bosch/bmi160.h	2727;"	d
BMI160_USER_INTR_TAP_0_INTR_TAP_QUIET__LEN	bosch/bmi160.h	2742;"	d
BMI160_USER_INTR_TAP_0_INTR_TAP_QUIET__MSK	bosch/bmi160.h	2743;"	d
BMI160_USER_INTR_TAP_0_INTR_TAP_QUIET__POS	bosch/bmi160.h	2741;"	d
BMI160_USER_INTR_TAP_0_INTR_TAP_QUIET__REG	bosch/bmi160.h	2744;"	d
BMI160_USER_INTR_TAP_0_INTR_TAP_SHOCK__LEN	bosch/bmi160.h	2734;"	d
BMI160_USER_INTR_TAP_0_INTR_TAP_SHOCK__MSK	bosch/bmi160.h	2735;"	d
BMI160_USER_INTR_TAP_0_INTR_TAP_SHOCK__POS	bosch/bmi160.h	2733;"	d
BMI160_USER_INTR_TAP_0_INTR_TAP_SHOCK__REG	bosch/bmi160.h	2736;"	d
BMI160_USER_INTR_TAP_1_ADDR	bosch/bmi160.h	871;"	d
BMI160_USER_INTR_TAP_1_INTR_TAP_THRES__LEN	bosch/bmi160.h	2750;"	d
BMI160_USER_INTR_TAP_1_INTR_TAP_THRES__MSK	bosch/bmi160.h	2751;"	d
BMI160_USER_INTR_TAP_1_INTR_TAP_THRES__POS	bosch/bmi160.h	2749;"	d
BMI160_USER_INTR_TAP_1_INTR_TAP_THRES__REG	bosch/bmi160.h	2752;"	d
BMI160_USER_MAG_BURST__LEN	bosch/bmi160.h	2077;"	d
BMI160_USER_MAG_BURST__MSK	bosch/bmi160.h	2078;"	d
BMI160_USER_MAG_BURST__POS	bosch/bmi160.h	2076;"	d
BMI160_USER_MAG_BURST__REG	bosch/bmi160.h	2079;"	d
BMI160_USER_MAG_CONFIG_ADDR	bosch/bmi160.h	817;"	d
BMI160_USER_MAG_CONFIG_OUTPUT_DATA_RATE__LEN	bosch/bmi160.h	1963;"	d
BMI160_USER_MAG_CONFIG_OUTPUT_DATA_RATE__MSK	bosch/bmi160.h	1964;"	d
BMI160_USER_MAG_CONFIG_OUTPUT_DATA_RATE__POS	bosch/bmi160.h	1962;"	d
BMI160_USER_MAG_CONFIG_OUTPUT_DATA_RATE__REG	bosch/bmi160.h	1965;"	d
BMI160_USER_MAG_DADA_RDY_ERR__LEN	bosch/bmi160.h	1347;"	d
BMI160_USER_MAG_DADA_RDY_ERR__MSK	bosch/bmi160.h	1348;"	d
BMI160_USER_MAG_DADA_RDY_ERR__POS	bosch/bmi160.h	1346;"	d
BMI160_USER_MAG_DADA_RDY_ERR__REG	bosch/bmi160.h	1349;"	d
BMI160_USER_MAG_IF_0_ADDR	bosch/bmi160.h	830;"	d
BMI160_USER_MAG_IF_1_ADDR	bosch/bmi160.h	831;"	d
BMI160_USER_MAG_IF_2_ADDR	bosch/bmi160.h	832;"	d
BMI160_USER_MAG_IF_3_ADDR	bosch/bmi160.h	833;"	d
BMI160_USER_MAG_IF_4_ADDR	bosch/bmi160.h	834;"	d
BMI160_USER_MAG_MANUAL_ENABLE__LEN	bosch/bmi160.h	2089;"	d
BMI160_USER_MAG_MANUAL_ENABLE__MSK	bosch/bmi160.h	2090;"	d
BMI160_USER_MAG_MANUAL_ENABLE__POS	bosch/bmi160.h	2088;"	d
BMI160_USER_MAG_MANUAL_ENABLE__REG	bosch/bmi160.h	2091;"	d
BMI160_USER_MAG_OFFSET__LEN	bosch/bmi160.h	2083;"	d
BMI160_USER_MAG_OFFSET__MSK	bosch/bmi160.h	2084;"	d
BMI160_USER_MAG_OFFSET__POS	bosch/bmi160.h	2082;"	d
BMI160_USER_MAG_OFFSET__REG	bosch/bmi160.h	2085;"	d
BMI160_USER_MAG_POWER_MODE_STAT__LEN	bosch/bmi160.h	1355;"	d
BMI160_USER_MAG_POWER_MODE_STAT__MSK	bosch/bmi160.h	1356;"	d
BMI160_USER_MAG_POWER_MODE_STAT__POS	bosch/bmi160.h	1354;"	d
BMI160_USER_MAG_POWER_MODE_STAT__REG	bosch/bmi160.h	1357;"	d
BMI160_USER_NV_CONFIG_ADDR	bosch/bmi160.h	899;"	d
BMI160_USER_NV_CONFIG_NVM_COUNTER__LEN	bosch/bmi160.h	2973;"	d
BMI160_USER_NV_CONFIG_NVM_COUNTER__MSK	bosch/bmi160.h	2974;"	d
BMI160_USER_NV_CONFIG_NVM_COUNTER__POS	bosch/bmi160.h	2972;"	d
BMI160_USER_NV_CONFIG_NVM_COUNTER__REG	bosch/bmi160.h	2975;"	d
BMI160_USER_NV_CONFIG_SPARE0__LEN	bosch/bmi160.h	2967;"	d
BMI160_USER_NV_CONFIG_SPARE0__MSK	bosch/bmi160.h	2968;"	d
BMI160_USER_NV_CONFIG_SPARE0__POS	bosch/bmi160.h	2966;"	d
BMI160_USER_NV_CONFIG_SPARE0__REG	bosch/bmi160.h	2969;"	d
BMI160_USER_NV_CONFIG_SPI_ENABLE__LEN	bosch/bmi160.h	2947;"	d
BMI160_USER_NV_CONFIG_SPI_ENABLE__MSK	bosch/bmi160.h	2948;"	d
BMI160_USER_NV_CONFIG_SPI_ENABLE__POS	bosch/bmi160.h	2946;"	d
BMI160_USER_NV_CONFIG_SPI_ENABLE__REG	bosch/bmi160.h	2949;"	d
BMI160_USER_OFFSET_0_ACCEL_OFF_X__LEN	bosch/bmi160.h	2981;"	d
BMI160_USER_OFFSET_0_ACCEL_OFF_X__MSK	bosch/bmi160.h	2982;"	d
BMI160_USER_OFFSET_0_ACCEL_OFF_X__POS	bosch/bmi160.h	2980;"	d
BMI160_USER_OFFSET_0_ACCEL_OFF_X__REG	bosch/bmi160.h	2983;"	d
BMI160_USER_OFFSET_0_ADDR	bosch/bmi160.h	903;"	d
BMI160_USER_OFFSET_1_ACCEL_OFF_Y__LEN	bosch/bmi160.h	2987;"	d
BMI160_USER_OFFSET_1_ACCEL_OFF_Y__MSK	bosch/bmi160.h	2988;"	d
BMI160_USER_OFFSET_1_ACCEL_OFF_Y__POS	bosch/bmi160.h	2986;"	d
BMI160_USER_OFFSET_1_ACCEL_OFF_Y__REG	bosch/bmi160.h	2989;"	d
BMI160_USER_OFFSET_1_ADDR	bosch/bmi160.h	904;"	d
BMI160_USER_OFFSET_2_ACCEL_OFF_Z__LEN	bosch/bmi160.h	2993;"	d
BMI160_USER_OFFSET_2_ACCEL_OFF_Z__MSK	bosch/bmi160.h	2994;"	d
BMI160_USER_OFFSET_2_ACCEL_OFF_Z__POS	bosch/bmi160.h	2992;"	d
BMI160_USER_OFFSET_2_ACCEL_OFF_Z__REG	bosch/bmi160.h	2995;"	d
BMI160_USER_OFFSET_2_ADDR	bosch/bmi160.h	905;"	d
BMI160_USER_OFFSET_3_ADDR	bosch/bmi160.h	906;"	d
BMI160_USER_OFFSET_3_GYRO_OFF_X__LEN	bosch/bmi160.h	3001;"	d
BMI160_USER_OFFSET_3_GYRO_OFF_X__MSK	bosch/bmi160.h	3002;"	d
BMI160_USER_OFFSET_3_GYRO_OFF_X__POS	bosch/bmi160.h	3000;"	d
BMI160_USER_OFFSET_3_GYRO_OFF_X__REG	bosch/bmi160.h	3003;"	d
BMI160_USER_OFFSET_4_ADDR	bosch/bmi160.h	907;"	d
BMI160_USER_OFFSET_4_GYRO_OFF_Y__LEN	bosch/bmi160.h	3007;"	d
BMI160_USER_OFFSET_4_GYRO_OFF_Y__MSK	bosch/bmi160.h	3008;"	d
BMI160_USER_OFFSET_4_GYRO_OFF_Y__POS	bosch/bmi160.h	3006;"	d
BMI160_USER_OFFSET_4_GYRO_OFF_Y__REG	bosch/bmi160.h	3009;"	d
BMI160_USER_OFFSET_5_ADDR	bosch/bmi160.h	908;"	d
BMI160_USER_OFFSET_5_GYRO_OFF_Z__LEN	bosch/bmi160.h	3013;"	d
BMI160_USER_OFFSET_5_GYRO_OFF_Z__MSK	bosch/bmi160.h	3014;"	d
BMI160_USER_OFFSET_5_GYRO_OFF_Z__POS	bosch/bmi160.h	3012;"	d
BMI160_USER_OFFSET_5_GYRO_OFF_Z__REG	bosch/bmi160.h	3015;"	d
BMI160_USER_OFFSET_6_ACCEL_OFF_ENABLE__LEN	bosch/bmi160.h	3040;"	d
BMI160_USER_OFFSET_6_ACCEL_OFF_ENABLE__MSK	bosch/bmi160.h	3041;"	d
BMI160_USER_OFFSET_6_ACCEL_OFF_ENABLE__POS	bosch/bmi160.h	3039;"	d
BMI160_USER_OFFSET_6_ACCEL_OFF_ENABLE__REG	bosch/bmi160.h	3042;"	d
BMI160_USER_OFFSET_6_ADDR	bosch/bmi160.h	909;"	d
BMI160_USER_OFFSET_6_GYRO_OFF_EN__LEN	bosch/bmi160.h	3049;"	d
BMI160_USER_OFFSET_6_GYRO_OFF_EN__MSK	bosch/bmi160.h	3050;"	d
BMI160_USER_OFFSET_6_GYRO_OFF_EN__POS	bosch/bmi160.h	3048;"	d
BMI160_USER_OFFSET_6_GYRO_OFF_EN__REG	bosch/bmi160.h	3051;"	d
BMI160_USER_OFFSET_6_GYRO_OFF_X__LEN	bosch/bmi160.h	3020;"	d
BMI160_USER_OFFSET_6_GYRO_OFF_X__MSK	bosch/bmi160.h	3021;"	d
BMI160_USER_OFFSET_6_GYRO_OFF_X__POS	bosch/bmi160.h	3019;"	d
BMI160_USER_OFFSET_6_GYRO_OFF_X__REG	bosch/bmi160.h	3022;"	d
BMI160_USER_OFFSET_6_GYRO_OFF_Y__LEN	bosch/bmi160.h	3026;"	d
BMI160_USER_OFFSET_6_GYRO_OFF_Y__MSK	bosch/bmi160.h	3027;"	d
BMI160_USER_OFFSET_6_GYRO_OFF_Y__POS	bosch/bmi160.h	3025;"	d
BMI160_USER_OFFSET_6_GYRO_OFF_Y__REG	bosch/bmi160.h	3028;"	d
BMI160_USER_OFFSET_6_GYRO_OFF_Z__LEN	bosch/bmi160.h	3032;"	d
BMI160_USER_OFFSET_6_GYRO_OFF_Z__MSK	bosch/bmi160.h	3033;"	d
BMI160_USER_OFFSET_6_GYRO_OFF_Z__POS	bosch/bmi160.h	3031;"	d
BMI160_USER_OFFSET_6_GYRO_OFF_Z__REG	bosch/bmi160.h	3034;"	d
BMI160_USER_PMU_STAT_ADDR	bosch/bmi160.h	740;"	d
BMI160_USER_PMU_TRIGGER_ADDR	bosch/bmi160.h	891;"	d
BMI160_USER_READ_ADDR__LEN	bosch/bmi160.h	2096;"	d
BMI160_USER_READ_ADDR__MSK	bosch/bmi160.h	2097;"	d
BMI160_USER_READ_ADDR__POS	bosch/bmi160.h	2095;"	d
BMI160_USER_READ_ADDR__REG	bosch/bmi160.h	2098;"	d
BMI160_USER_SELFTEST_AMP__LEN	bosch/bmi160.h	2930;"	d
BMI160_USER_SELFTEST_AMP__MSK	bosch/bmi160.h	2931;"	d
BMI160_USER_SELFTEST_AMP__POS	bosch/bmi160.h	2929;"	d
BMI160_USER_SELFTEST_AMP__REG	bosch/bmi160.h	2932;"	d
BMI160_USER_SELF_TEST_ADDR	bosch/bmi160.h	895;"	d
BMI160_USER_SENSORTIME_0_ADDR	bosch/bmi160.h	773;"	d
BMI160_USER_SENSORTIME_0_SENSOR_TIME_LSB__LEN	bosch/bmi160.h	1532;"	d
BMI160_USER_SENSORTIME_0_SENSOR_TIME_LSB__MSK	bosch/bmi160.h	1533;"	d
BMI160_USER_SENSORTIME_0_SENSOR_TIME_LSB__POS	bosch/bmi160.h	1531;"	d
BMI160_USER_SENSORTIME_0_SENSOR_TIME_LSB__REG	bosch/bmi160.h	1534;"	d
BMI160_USER_SENSORTIME_1_ADDR	bosch/bmi160.h	774;"	d
BMI160_USER_SENSORTIME_1_SENSOR_TIME_MSB__LEN	bosch/bmi160.h	1539;"	d
BMI160_USER_SENSORTIME_1_SENSOR_TIME_MSB__MSK	bosch/bmi160.h	1540;"	d
BMI160_USER_SENSORTIME_1_SENSOR_TIME_MSB__POS	bosch/bmi160.h	1538;"	d
BMI160_USER_SENSORTIME_1_SENSOR_TIME_MSB__REG	bosch/bmi160.h	1541;"	d
BMI160_USER_SENSORTIME_2_ADDR	bosch/bmi160.h	775;"	d
BMI160_USER_SENSORTIME_2_SENSOR_TIME_MSB__LEN	bosch/bmi160.h	1546;"	d
BMI160_USER_SENSORTIME_2_SENSOR_TIME_MSB__MSK	bosch/bmi160.h	1547;"	d
BMI160_USER_SENSORTIME_2_SENSOR_TIME_MSB__POS	bosch/bmi160.h	1545;"	d
BMI160_USER_SENSORTIME_2_SENSOR_TIME_MSB__REG	bosch/bmi160.h	1548;"	d
BMI160_USER_STAT_ADDR	bosch/bmi160.h	779;"	d
BMI160_USER_STAT_DATA_RDY_ACCEL__LEN	bosch/bmi160.h	1601;"	d
BMI160_USER_STAT_DATA_RDY_ACCEL__MSK	bosch/bmi160.h	1602;"	d
BMI160_USER_STAT_DATA_RDY_ACCEL__POS	bosch/bmi160.h	1600;"	d
BMI160_USER_STAT_DATA_RDY_ACCEL__REG	bosch/bmi160.h	1603;"	d
BMI160_USER_STAT_DATA_RDY_GYRO__LEN	bosch/bmi160.h	1595;"	d
BMI160_USER_STAT_DATA_RDY_GYRO__MSK	bosch/bmi160.h	1596;"	d
BMI160_USER_STAT_DATA_RDY_GYRO__POS	bosch/bmi160.h	1594;"	d
BMI160_USER_STAT_DATA_RDY_GYRO__REG	bosch/bmi160.h	1597;"	d
BMI160_USER_STAT_DATA_RDY_MAG__LEN	bosch/bmi160.h	1589;"	d
BMI160_USER_STAT_DATA_RDY_MAG__MSK	bosch/bmi160.h	1590;"	d
BMI160_USER_STAT_DATA_RDY_MAG__POS	bosch/bmi160.h	1588;"	d
BMI160_USER_STAT_DATA_RDY_MAG__REG	bosch/bmi160.h	1591;"	d
BMI160_USER_STAT_FOC_RDY__LEN	bosch/bmi160.h	1573;"	d
BMI160_USER_STAT_FOC_RDY__MSK	bosch/bmi160.h	1574;"	d
BMI160_USER_STAT_FOC_RDY__POS	bosch/bmi160.h	1572;"	d
BMI160_USER_STAT_FOC_RDY__REG	bosch/bmi160.h	1575;"	d
BMI160_USER_STAT_GYRO_SELFTEST_OK__LEN	bosch/bmi160.h	1555;"	d
BMI160_USER_STAT_GYRO_SELFTEST_OK__MSK	bosch/bmi160.h	1556;"	d
BMI160_USER_STAT_GYRO_SELFTEST_OK__POS	bosch/bmi160.h	1554;"	d
BMI160_USER_STAT_GYRO_SELFTEST_OK__REG	bosch/bmi160.h	1557;"	d
BMI160_USER_STAT_MAG_MANUAL_OPERATION__LEN	bosch/bmi160.h	1564;"	d
BMI160_USER_STAT_MAG_MANUAL_OPERATION__MSK	bosch/bmi160.h	1565;"	d
BMI160_USER_STAT_MAG_MANUAL_OPERATION__POS	bosch/bmi160.h	1563;"	d
BMI160_USER_STAT_MAG_MANUAL_OPERATION__REG	bosch/bmi160.h	1566;"	d
BMI160_USER_STAT_NVM_RDY__LEN	bosch/bmi160.h	1581;"	d
BMI160_USER_STAT_NVM_RDY__MSK	bosch/bmi160.h	1582;"	d
BMI160_USER_STAT_NVM_RDY__POS	bosch/bmi160.h	1580;"	d
BMI160_USER_STAT_NVM_RDY__REG	bosch/bmi160.h	1583;"	d
BMI160_USER_STEP_CONFIG_0_ADDR	bosch/bmi160.h	918;"	d
BMI160_USER_STEP_CONFIG_1_ADDR	bosch/bmi160.h	919;"	d
BMI160_USER_STEP_CONFIG_1_STEP_COUNT_ENABLE__LEN	bosch/bmi160.h	3095;"	d
BMI160_USER_STEP_CONFIG_1_STEP_COUNT_ENABLE__MSK	bosch/bmi160.h	3096;"	d
BMI160_USER_STEP_CONFIG_1_STEP_COUNT_ENABLE__POS	bosch/bmi160.h	3094;"	d
BMI160_USER_STEP_CONFIG_1_STEP_COUNT_ENABLE__REG	bosch/bmi160.h	3097;"	d
BMI160_USER_STEP_CONFIG_ONE_CNF1__LEN	bosch/bmi160.h	3080;"	d
BMI160_USER_STEP_CONFIG_ONE_CNF1__MSK	bosch/bmi160.h	3081;"	d
BMI160_USER_STEP_CONFIG_ONE_CNF1__POS	bosch/bmi160.h	3079;"	d
BMI160_USER_STEP_CONFIG_ONE_CNF1__REG	bosch/bmi160.h	3082;"	d
BMI160_USER_STEP_CONFIG_ONE_CNF2__LEN	bosch/bmi160.h	3086;"	d
BMI160_USER_STEP_CONFIG_ONE_CNF2__MSK	bosch/bmi160.h	3087;"	d
BMI160_USER_STEP_CONFIG_ONE_CNF2__POS	bosch/bmi160.h	3085;"	d
BMI160_USER_STEP_CONFIG_ONE_CNF2__REG	bosch/bmi160.h	3088;"	d
BMI160_USER_STEP_CONFIG_ZERO__LEN	bosch/bmi160.h	3071;"	d
BMI160_USER_STEP_CONFIG_ZERO__MSK	bosch/bmi160.h	3072;"	d
BMI160_USER_STEP_CONFIG_ZERO__POS	bosch/bmi160.h	3070;"	d
BMI160_USER_STEP_CONFIG_ZERO__REG	bosch/bmi160.h	3073;"	d
BMI160_USER_STEP_COUNT_0_ADDR	bosch/bmi160.h	913;"	d
BMI160_USER_STEP_COUNT_1_ADDR	bosch/bmi160.h	914;"	d
BMI160_USER_STEP_COUNT_LSB__LEN	bosch/bmi160.h	3057;"	d
BMI160_USER_STEP_COUNT_LSB__MSK	bosch/bmi160.h	3058;"	d
BMI160_USER_STEP_COUNT_LSB__POS	bosch/bmi160.h	3056;"	d
BMI160_USER_STEP_COUNT_LSB__REG	bosch/bmi160.h	3059;"	d
BMI160_USER_STEP_COUNT_MSB__LEN	bosch/bmi160.h	3063;"	d
BMI160_USER_STEP_COUNT_MSB__MSK	bosch/bmi160.h	3064;"	d
BMI160_USER_STEP_COUNT_MSB__POS	bosch/bmi160.h	3062;"	d
BMI160_USER_STEP_COUNT_MSB__REG	bosch/bmi160.h	3065;"	d
BMI160_USER_TEMPERATURE_0_ADDR	bosch/bmi160.h	790;"	d
BMI160_USER_TEMPERATURE_1_ADDR	bosch/bmi160.h	791;"	d
BMI160_USER_TEMP_LSB_VALUE__LEN	bosch/bmi160.h	1870;"	d
BMI160_USER_TEMP_LSB_VALUE__MSK	bosch/bmi160.h	1871;"	d
BMI160_USER_TEMP_LSB_VALUE__POS	bosch/bmi160.h	1869;"	d
BMI160_USER_TEMP_LSB_VALUE__REG	bosch/bmi160.h	1872;"	d
BMI160_USER_TEMP_MSB_VALUE__LEN	bosch/bmi160.h	1877;"	d
BMI160_USER_TEMP_MSB_VALUE__MSK	bosch/bmi160.h	1878;"	d
BMI160_USER_TEMP_MSB_VALUE__POS	bosch/bmi160.h	1876;"	d
BMI160_USER_TEMP_MSB_VALUE__REG	bosch/bmi160.h	1879;"	d
BMI160_USER_WRITE_ADDR__LEN	bosch/bmi160.h	2102;"	d
BMI160_USER_WRITE_ADDR__MSK	bosch/bmi160.h	2103;"	d
BMI160_USER_WRITE_ADDR__POS	bosch/bmi160.h	2101;"	d
BMI160_USER_WRITE_ADDR__REG	bosch/bmi160.h	2104;"	d
BMI160_USER_WRITE_DATA__LEN	bosch/bmi160.h	2108;"	d
BMI160_USER_WRITE_DATA__MSK	bosch/bmi160.h	2109;"	d
BMI160_USER_WRITE_DATA__POS	bosch/bmi160.h	2107;"	d
BMI160_USER_WRITE_DATA__REG	bosch/bmi160.h	2110;"	d
BMI160_VDD_MAX_UV	bosch/bmi160_driver.c	31;"	d	file:
BMI160_VDD_MIN_UV	bosch/bmi160_driver.c	30;"	d	file:
BMI160_VIO_MAX_UV	bosch/bmi160_driver.c	33;"	d	file:
BMI160_VIO_MIN_UV	bosch/bmi160_driver.c	32;"	d	file:
BMI160_WRITE_ENABLE_PAGE1	bosch/bmi160.h	3544;"	d
BMI160_WRITE_TARGET_PAGE0	bosch/bmi160.h	3542;"	d
BMI160_WRITE_TARGET_PAGE1	bosch/bmi160.h	3543;"	d
BMI160_WR_FUNC_PTR	bosch/bmi160.h	/^BMI160_WR_FUNC_PTR;\/**< bus write function pointer *\/$/;"	m	struct:bmi160_t
BMI160_WR_FUNC_PTR	bosch/bmi160.h	324;"	d
BMI160_YAS532_ACQ_START	bosch/bmi160.h	3555;"	d
BMI160_YAS532_CALIB1	bosch/bmi160.h	991;"	d
BMI160_YAS532_CALIB10	bosch/bmi160.h	1000;"	d
BMI160_YAS532_CALIB11	bosch/bmi160.h	1001;"	d
BMI160_YAS532_CALIB2	bosch/bmi160.h	992;"	d
BMI160_YAS532_CALIB3	bosch/bmi160.h	993;"	d
BMI160_YAS532_CALIB4	bosch/bmi160.h	994;"	d
BMI160_YAS532_CALIB5	bosch/bmi160.h	995;"	d
BMI160_YAS532_CALIB7	bosch/bmi160.h	997;"	d
BMI160_YAS532_CALIB8	bosch/bmi160.h	998;"	d
BMI160_YAS532_CALIB_CX	bosch/bmi160.h	988;"	d
BMI160_YAS532_CALIB_CY1	bosch/bmi160.h	989;"	d
BMI160_YAS532_CALIB_CY2	bosch/bmi160.h	990;"	d
BMI160_YAS532_CALIB_DATA_SIZE	bosch/bmi160.h	651;"	d
BMI160_YAS532_CALIIB9	bosch/bmi160.h	999;"	d
BMI160_YAS532_CLAIB6	bosch/bmi160.h	996;"	d
BMI160_YAS532_COMMAND_REGISTER	bosch/bmi160.h	985;"	d
BMI160_YAS532_DATA_REGISTER	bosch/bmi160.h	986;"	d
BMI160_YAS532_I2C_ADDRESS	bosch/bmi160.h	428;"	d
BMI160_YAS532_MEASUREMENT_DELAY	bosch/bmi160.h	610;"	d
BMI160_YAS532_OFFSET_DELAY	bosch/bmi160.h	608;"	d
BMI160_YAS532_OFFSET_X	bosch/bmi160.h	1003;"	d
BMI160_YAS532_OFFSET_Y	bosch/bmi160.h	1004;"	d
BMI160_YAS532_OFFSET_Z	bosch/bmi160.h	1005;"	d
BMI160_YAS532_RCOIL	bosch/bmi160.h	984;"	d
BMI160_YAS532_SET_INITIAL_VALUE_DELAY	bosch/bmi160.h	612;"	d
BMI160_YAS532_TESTR1	bosch/bmi160.h	982;"	d
BMI160_YAS532_TESTR2	bosch/bmi160.h	983;"	d
BMI160_YAS532_WRITE_RCOIL	bosch/bmi160.h	1009;"	d
BMI160_YAS532_WRITE_TESTR1	bosch/bmi160.h	1007;"	d
BMI160_YAS532_WRITE_TESTR2	bosch/bmi160.h	1008;"	d
BMI160_YAS537_CALIB_DATA_SIZE	bosch/bmi160.h	650;"	d
BMI160_YAS537_I2C_ADDRESS	bosch/bmi160.h	3146;"	d
BMI160_YAS_ACQ_COMMAND_DELAY	bosch/bmi160.h	611;"	d
BMI160_YAS_CORRECT_DATA_SIZE	bosch/bmi160.h	648;"	d
BMI160_YAS_DEVICE_ID_REG	bosch/bmi160.h	3556;"	d
BMI160_YAS_DISABLE_RCOIL	bosch/bmi160.h	3547;"	d
BMI160_YAS_FLAG_DATA_SIZE	bosch/bmi160.h	644;"	d
BMI160_YAS_H_DATA_SIZE	bosch/bmi160.h	646;"	d
BMI160_YAS_S_DATA_SIZE	bosch/bmi160.h	647;"	d
BMI160_YAS_TEMP_DATA_SIZE	bosch/bmi160.h	645;"	d
BMI160_YAS_XY1Y2T_DATA_SIZE	bosch/bmi160.h	649;"	d
BMI160_YAS_XY1Y2_DATA_SIZE	bosch/bmi160.h	643;"	d
BMI_ACC_PM_LP1	bosch/bmi160_driver.c	/^	BMI_ACC_PM_LP1,$/;"	e	enum:BMI_ACC_PM_TYPE	file:
BMI_ACC_PM_LP2	bosch/bmi160_driver.c	/^	BMI_ACC_PM_LP2,$/;"	e	enum:BMI_ACC_PM_TYPE	file:
BMI_ACC_PM_MAX	bosch/bmi160_driver.c	/^	BMI_ACC_PM_MAX$/;"	e	enum:BMI_ACC_PM_TYPE	file:
BMI_ACC_PM_NORMAL	bosch/bmi160_driver.c	/^	BMI_ACC_PM_NORMAL = 0,$/;"	e	enum:BMI_ACC_PM_TYPE	file:
BMI_ACC_PM_SUSPEND	bosch/bmi160_driver.c	/^	BMI_ACC_PM_SUSPEND,$/;"	e	enum:BMI_ACC_PM_TYPE	file:
BMI_ACC_PM_TYPE	bosch/bmi160_driver.c	/^enum BMI_ACC_PM_TYPE {$/;"	g	file:
BMI_ACC_SENSOR	bosch/bmi160_driver.c	/^	BMI_ACC_SENSOR,$/;"	e	enum:BMI_SENSOR_TYPE	file:
BMI_ACC_X_FAST_CALI_RDY	bosch/bmi160_driver.c	/^	BMI_ACC_X_FAST_CALI_RDY = 0,$/;"	e	enum:BMI_CALIBRATION_STATUS_TYPE	file:
BMI_ACC_Y_FAST_CALI_RDY	bosch/bmi160_driver.c	/^	BMI_ACC_Y_FAST_CALI_RDY,$/;"	e	enum:BMI_CALIBRATION_STATUS_TYPE	file:
BMI_ACC_Z_FAST_CALI_RDY	bosch/bmi160_driver.c	/^	BMI_ACC_Z_FAST_CALI_RDY$/;"	e	enum:BMI_CALIBRATION_STATUS_TYPE	file:
BMI_ANYMO_X_INT	bosch/bmi160_driver.c	/^	BMI_ANYMO_X_INT = 0,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_ANYMO_Y_INT	bosch/bmi160_driver.c	/^	BMI_ANYMO_Y_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_ANYMO_Z_INT	bosch/bmi160_driver.c	/^	BMI_ANYMO_Z_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_AXIS_TYPE	bosch/bmi160_driver.c	/^enum BMI_AXIS_TYPE {$/;"	g	file:
BMI_CALIBRATION_STATUS_TYPE	bosch/bmi160_driver.c	/^enum BMI_CALIBRATION_STATUS_TYPE {$/;"	g	file:
BMI_CALL_API	bosch/bmi160_driver.h	65;"	d
BMI_DELAY_DEFAULT	bosch/bmi160_driver.h	75;"	d
BMI_DELAY_MIN	bosch/bmi160_driver.h	74;"	d
BMI_DEV_OP_MODE	bosch/bmi160_driver.c	/^enum BMI_DEV_OP_MODE {$/;"	g	file:
BMI_DRDY_INT	bosch/bmi160_driver.c	/^	BMI_DRDY_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_D_TAP_INT	bosch/bmi160_driver.c	/^	BMI_D_TAP_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_FAST_CALI_ALL_RDY	bosch/bmi160_driver.h	85;"	d
BMI_FAST_CALI_TRUE	bosch/bmi160_driver.h	84;"	d
BMI_FFULL_INT	bosch/bmi160_driver.c	/^	BMI_FFULL_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_FIFO_A	bosch/bmi160_driver.c	/^	BMI_FIFO_A = 0,$/;"	e	enum:BMI_SENSOR_FIFO_COMBINATION	file:
BMI_FIFO_ANALYSE_RETURN_T	bosch/bmi160_driver.c	/^enum BMI_FIFO_ANALYSE_RETURN_T {$/;"	g	file:
BMI_FIFO_A_SEL	bosch/bmi160_driver.h	/^	BMI_FIFO_A_SEL = 1,$/;"	e	enum:BMI_FIFO_DATA_SELECT_T
BMI_FIFO_COM_MAX	bosch/bmi160_driver.c	/^	BMI_FIFO_COM_MAX$/;"	e	enum:BMI_SENSOR_FIFO_COMBINATION	file:
BMI_FIFO_DATA_SELECT_T	bosch/bmi160_driver.h	/^enum BMI_FIFO_DATA_SELECT_T {$/;"	g
BMI_FIFO_DATA_SEL_MAX	bosch/bmi160_driver.h	/^	BMI_FIFO_DATA_SEL_MAX$/;"	e	enum:BMI_FIFO_DATA_SELECT_T
BMI_FIFO_G	bosch/bmi160_driver.c	/^	BMI_FIFO_G,$/;"	e	enum:BMI_SENSOR_FIFO_COMBINATION	file:
BMI_FIFO_G_A	bosch/bmi160_driver.c	/^	BMI_FIFO_G_A,$/;"	e	enum:BMI_SENSOR_FIFO_COMBINATION	file:
BMI_FIFO_G_A_SEL	bosch/bmi160_driver.h	/^	BMI_FIFO_G_A_SEL,$/;"	e	enum:BMI_FIFO_DATA_SELECT_T
BMI_FIFO_G_SEL	bosch/bmi160_driver.h	/^	BMI_FIFO_G_SEL,$/;"	e	enum:BMI_FIFO_DATA_SELECT_T
BMI_FIFO_M	bosch/bmi160_driver.c	/^	BMI_FIFO_M,$/;"	e	enum:BMI_SENSOR_FIFO_COMBINATION	file:
BMI_FIFO_M_A	bosch/bmi160_driver.c	/^	BMI_FIFO_M_A,$/;"	e	enum:BMI_SENSOR_FIFO_COMBINATION	file:
BMI_FIFO_M_A_SEL	bosch/bmi160_driver.h	/^	BMI_FIFO_M_A_SEL,$/;"	e	enum:BMI_FIFO_DATA_SELECT_T
BMI_FIFO_M_G	bosch/bmi160_driver.c	/^	BMI_FIFO_M_G,$/;"	e	enum:BMI_SENSOR_FIFO_COMBINATION	file:
BMI_FIFO_M_G_A	bosch/bmi160_driver.c	/^	BMI_FIFO_M_G_A,$/;"	e	enum:BMI_SENSOR_FIFO_COMBINATION	file:
BMI_FIFO_M_G_A_SEL	bosch/bmi160_driver.h	/^	BMI_FIFO_M_G_A_SEL,$/;"	e	enum:BMI_FIFO_DATA_SELECT_T
BMI_FIFO_M_G_SEL	bosch/bmi160_driver.h	/^	BMI_FIFO_M_G_SEL,$/;"	e	enum:BMI_FIFO_DATA_SELECT_T
BMI_FIFO_M_SEL	bosch/bmi160_driver.h	/^	BMI_FIFO_M_SEL,$/;"	e	enum:BMI_FIFO_DATA_SELECT_T
BMI_FLAT_INT	bosch/bmi160_driver.c	/^	BMI_FLAT_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_FWM_INT	bosch/bmi160_driver.c	/^	BMI_FWM_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_GYRO_PM_FAST_START	bosch/bmi160_driver.c	/^	BMI_GYRO_PM_FAST_START,$/;"	e	enum:BMI_GYRO_PM_TYPE	file:
BMI_GYRO_PM_MAX	bosch/bmi160_driver.c	/^	BMI_GYRO_PM_MAX$/;"	e	enum:BMI_GYRO_PM_TYPE	file:
BMI_GYRO_PM_NORMAL	bosch/bmi160_driver.c	/^	BMI_GYRO_PM_NORMAL = 0,$/;"	e	enum:BMI_GYRO_PM_TYPE	file:
BMI_GYRO_PM_SUSPEND	bosch/bmi160_driver.c	/^	BMI_GYRO_PM_SUSPEND,$/;"	e	enum:BMI_GYRO_PM_TYPE	file:
BMI_GYRO_PM_TYPE	bosch/bmi160_driver.c	/^enum BMI_GYRO_PM_TYPE {$/;"	g	file:
BMI_GYRO_SENSOR	bosch/bmi160_driver.c	/^	BMI_GYRO_SENSOR,$/;"	e	enum:BMI_SENSOR_TYPE	file:
BMI_HIGH_X_INT	bosch/bmi160_driver.c	/^	BMI_HIGH_X_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_HIGH_Y_INT	bosch/bmi160_driver.c	/^	BMI_HIGH_Y_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_HIGH_Z_INT	bosch/bmi160_driver.c	/^	BMI_HIGH_Z_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_I2C_WRITE_DELAY_TIME	bosch/bmi160_driver.h	67;"	d
BMI_INT0	bosch/bmi160_driver.h	156;"	d
BMI_INT1	bosch/bmi160_driver.h	157;"	d
BMI_INT_EDGE	bosch/bmi160_driver.h	160;"	d
BMI_INT_LEVEL	bosch/bmi160_driver.h	159;"	d
BMI_INT_TYPE	bosch/bmi160_driver.c	/^enum BMI_INT_TYPE {$/;"	g	file:
BMI_LOW_INT	bosch/bmi160_driver.c	/^	BMI_LOW_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_MAG_PM_LP1	bosch/bmi160_driver.c	/^	BMI_MAG_PM_LP1,$/;"	e	enum:BMI_MAG_PM_TYPE	file:
BMI_MAG_PM_LP2	bosch/bmi160_driver.c	/^	BMI_MAG_PM_LP2,$/;"	e	enum:BMI_MAG_PM_TYPE	file:
BMI_MAG_PM_MAX	bosch/bmi160_driver.c	/^	BMI_MAG_PM_MAX$/;"	e	enum:BMI_MAG_PM_TYPE	file:
BMI_MAG_PM_NORMAL	bosch/bmi160_driver.c	/^	BMI_MAG_PM_NORMAL = 0,$/;"	e	enum:BMI_MAG_PM_TYPE	file:
BMI_MAG_PM_SUSPEND	bosch/bmi160_driver.c	/^	BMI_MAG_PM_SUSPEND,$/;"	e	enum:BMI_MAG_PM_TYPE	file:
BMI_MAG_PM_TYPE	bosch/bmi160_driver.c	/^enum BMI_MAG_PM_TYPE {$/;"	g	file:
BMI_MAG_SENSOR	bosch/bmi160_driver.c	/^	BMI_MAG_SENSOR,$/;"	e	enum:BMI_SENSOR_TYPE	file:
BMI_MAX_BUFFER_SIZE	bosch/bmi160_spi.c	28;"	d	file:
BMI_MAX_RETRY_I2C_XFER	bosch/bmi160_driver.h	70;"	d
BMI_MAX_RETRY_WAIT_DRDY	bosch/bmi160_driver.h	72;"	d
BMI_MAX_RETRY_WAKEUP	bosch/bmi160_driver.h	71;"	d
BMI_NOMOTION_X_INT	bosch/bmi160_driver.c	/^	BMI_NOMOTION_X_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_NOMOTION_Y_INT	bosch/bmi160_driver.c	/^	BMI_NOMOTION_Y_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_NOMOTION_Z_INT	bosch/bmi160_driver.c	/^	BMI_NOMOTION_Z_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_ORIENT_INT	bosch/bmi160_driver.c	/^	BMI_ORIENT_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_REG_NAME	bosch/bmi160_driver.h	63;"	d
BMI_SELFTEST_AMP_HIGH	bosch/bmi160_driver.h	97;"	d
BMI_SENSOR_FIFO_COMBINATION	bosch/bmi160_driver.c	/^enum BMI_SENSOR_FIFO_COMBINATION {$/;"	g	file:
BMI_SENSOR_IF_MODE_TYPE	bosch/bmi160_driver.c	/^enum BMI_SENSOR_IF_MODE_TYPE {$/;"	g	file:
BMI_SENSOR_INT_T	bosch/bmi160_driver.c	/^enum BMI_SENSOR_INT_T {$/;"	g	file:
BMI_SENSOR_TIME_RS_TYPE	bosch/bmi160_driver.c	/^enum BMI_SENSOR_TIME_RS_TYPE {$/;"	g	file:
BMI_SENSOR_TYPE	bosch/bmi160_driver.c	/^enum BMI_SENSOR_TYPE {$/;"	g	file:
BMI_SENSOR_TYPE_MAX	bosch/bmi160_driver.c	/^	BMI_SENSOR_TYPE_MAX$/;"	e	enum:BMI_SENSOR_TYPE	file:
BMI_STEP_DETECTOR_INT	bosch/bmi160_driver.c	/^	BMI_STEP_DETECTOR_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_S_TAP_INT	bosch/bmi160_driver.c	/^	BMI_S_TAP_INT,$/;"	e	enum:BMI_SENSOR_INT_T	file:
BMI_VALUE_MAX	bosch/bmi160_driver.h	77;"	d
BMI_VALUE_MIN	bosch/bmi160_driver.h	78;"	d
BMI_VAL_NAME	bosch/bmi160_driver.h	64;"	d
BMI_i2c_exit	bosch/bmi160_i2c.c	/^module_exit(BMI_i2c_exit);$/;"	v
BMI_i2c_exit	bosch/bmi160_i2c.c	/^static void __exit BMI_i2c_exit(void)$/;"	f	file:
BMI_i2c_init	bosch/bmi160_i2c.c	/^module_init(BMI_i2c_init);$/;"	v
BMI_i2c_init	bosch/bmi160_i2c.c	/^static int __init BMI_i2c_init(void)$/;"	f	file:
BMM050_DIG_X1	bosch/bmi160_driver.h	170;"	d
BMM050_DIG_X2	bosch/bmi160_driver.h	174;"	d
BMM050_DIG_XY1	bosch/bmi160_driver.h	185;"	d
BMM050_DIG_XY2	bosch/bmi160_driver.h	184;"	d
BMM050_DIG_XYZ1_LSB	bosch/bmi160_driver.h	180;"	d
BMM050_DIG_XYZ1_MSB	bosch/bmi160_driver.h	181;"	d
BMM050_DIG_Y1	bosch/bmi160_driver.h	171;"	d
BMM050_DIG_Y2	bosch/bmi160_driver.h	175;"	d
BMM050_DIG_Z1_LSB	bosch/bmi160_driver.h	178;"	d
BMM050_DIG_Z1_MSB	bosch/bmi160_driver.h	179;"	d
BMM050_DIG_Z2_LSB	bosch/bmi160_driver.h	176;"	d
BMM050_DIG_Z2_MSB	bosch/bmi160_driver.h	177;"	d
BMM050_DIG_Z3_LSB	bosch/bmi160_driver.h	182;"	d
BMM050_DIG_Z3_MSB	bosch/bmi160_driver.h	183;"	d
BMM050_DIG_Z4_LSB	bosch/bmi160_driver.h	172;"	d
BMM050_DIG_Z4_MSB	bosch/bmi160_driver.h	173;"	d
BMM050_OVERFLOW_OUTPUT	bosch/bmi160_driver.h	166;"	d
BMM050_OVERFLOW_OUTPUT_S32	bosch/bmi160_driver.h	167;"	d
BMM_DELAY_MIN	akm09911.c	54;"	d	file:
BOSCH_SENSOR_PLACE_UNKNOWN	akm09911.c	166;"	d	file:
BOSCH_SENSOR_PLACE_UNKNOWN	bosch/bmi160_driver.h	148;"	d
BST_AKM	bosch/bmi160.h	3145;"	d
BST_BMM	bosch/bmi160.h	3144;"	d
BUF_SIZE_PRINT	bosch/bmi160_driver.h	82;"	d
BYTES_PER_LINE	akm09911.c	45;"	d	file:
BYTES_PER_LINE	bosch/bmi160_driver.h	80;"	d
B_DATA_HIGHT_BYTE	nxu8010.c	34;"	d	file:
B_DATA_LOW_BYTE	nxu8010.c	33;"	d	file:
CAL_BUF_LEN	ltr553.c	106;"	d	file:
CHECK_CHIP_ID_TIME_MAX	bosch/bmi160_driver.h	61;"	d
CHIP_ID	nxu8010.c	28;"	d	file:
CLASS_NAME	ga1auv100.c	53;"	d	file:
CMD_CLR_FIFO_DATA	bosch/bmi160_driver.h	112;"	d
CMD_FOC_START	bosch/bmi160_driver.h	100;"	d
CMD_PMU_ACC_LP1	bosch/bmi160_driver.h	103;"	d
CMD_PMU_ACC_LP2	bosch/bmi160_driver.h	104;"	d
CMD_PMU_ACC_NORMAL	bosch/bmi160_driver.h	102;"	d
CMD_PMU_ACC_SUSPEND	bosch/bmi160_driver.h	101;"	d
CMD_PMU_GYRO_FASTSTART	bosch/bmi160_driver.h	107;"	d
CMD_PMU_GYRO_NORMAL	bosch/bmi160_driver.h	106;"	d
CMD_PMU_GYRO_SUSPEND	bosch/bmi160_driver.h	105;"	d
CMD_PMU_MAG_LP1	bosch/bmi160_driver.h	110;"	d
CMD_PMU_MAG_LP2	bosch/bmi160_driver.h	111;"	d
CMD_PMU_MAG_NORMAL	bosch/bmi160_driver.h	109;"	d
CMD_PMU_MAG_SUSPEND	bosch/bmi160_driver.h	108;"	d
CMD_READ	ltr553.c	/^	CMD_READ = 1,$/;"	e	enum:__anon5	file:
CMD_RESET_INT_ENGINE	bosch/bmi160_driver.h	113;"	d
CMD_RESET_USER_REG	bosch/bmi160_driver.h	114;"	d
CMD_WRITE	ltr553.c	/^	CMD_WRITE = 0,$/;"	e	enum:__anon5	file:
COMMAND1_ALS	ga1auv100.h	19;"	d
COMMAND1_NOCLR	ga1auv100.h	20;"	d
COMMAND1_SD	ga1auv100.h	17;"	d
COMMAND1_WAKEUP	ga1auv100.h	18;"	d
COMMAND2_FREQ	ga1auv100.h	26;"	d
COMMAND2_INTTYPE	ga1auv100.h	28;"	d
COMMAND2_NOWAIT	ga1auv100.h	27;"	d
COMMAND2_PD0	ga1auv100.h	24;"	d
COMMAND2_PD1	ga1auv100.h	23;"	d
COMMAND2_PIN	ga1auv100.h	25;"	d
COMMAND2_RST	ga1auv100.h	29;"	d
COMMAND3_HALF	ga1auv100.h	41;"	d
COMMAND3_RANGEX1	ga1auv100.h	32;"	d
COMMAND3_RANGEX128	ga1auv100.h	39;"	d
COMMAND3_RANGEX16	ga1auv100.h	36;"	d
COMMAND3_RANGEX2	ga1auv100.h	33;"	d
COMMAND3_RANGEX256	ga1auv100.h	40;"	d
COMMAND3_RANGEX32	ga1auv100.h	37;"	d
COMMAND3_RANGEX4	ga1auv100.h	34;"	d
COMMAND3_RANGEX64	ga1auv100.h	38;"	d
COMMAND3_RANGEX8	ga1auv100.h	35;"	d
COMMAND3_RES_14	ga1auv100.h	49;"	d
COMMAND3_RES_15	ga1auv100.h	48;"	d
COMMAND3_RES_16	ga1auv100.h	47;"	d
COMMAND3_RES_17	ga1auv100.h	46;"	d
COMMAND3_RES_18	ga1auv100.h	45;"	d
COMMAND3_RES_19	ga1auv100.h	44;"	d
COMMAND3_RES_20	ga1auv100.h	43;"	d
COMMAND3_RES_21	ga1auv100.h	42;"	d
CONFIG_Helix_PS_ALS_USE_CHANGE_THRESHOLD	helix.c	61;"	d	file:
CROSSTALK_FILE_PATCH	helix.c	194;"	d	file:
DEFAULT_BLACK_HAIR	helix.c	193;"	d	file:
DEFAULT_BLACK_HAIR_STANDBY	helix.c	197;"	d	file:
DEFAULT_CROSS_TALK	helix.c	198;"	d	file:
DEFAULT_CROSS_TALK_MAX	helix.c	192;"	d	file:
DEFAULT_CROSS_TALK_MIN	helix.c	191;"	d	file:
DEVICE_NAME	ga1auv100.c	52;"	d	file:
DEVICE_NAME	helix.c	173;"	d	file:
DEVICE_NAME	it7236_touchkey.h	5;"	d
DEVICE_PRODUCT	it7236_touchkey.h	7;"	d
DEVICE_VENDOR	it7236_touchkey.h	6;"	d
DEVICE_VERSION	it7236_touchkey.h	8;"	d
DISABLE	bosch/bmi160_driver.h	153;"	d
DRIVER_VERSION	helix.c	/^MODULE_VERSION(DRIVER_VERSION);$/;"	v
DRIVER_VERSION	helix.c	58;"	d	file:
ECS_IOCTL_GET_ACCEL	akm09911.h	100;"	d
ECS_IOCTL_GET_CLOSE_STATUS	akm09911.h	97;"	d
ECS_IOCTL_GET_CONF	akm09911.h	94;"	d
ECS_IOCTL_GET_DATA	akm09911.h	95;"	d
ECS_IOCTL_GET_DELAY	akm09911.h	98;"	d
ECS_IOCTL_GET_INFO	akm09911.h	93;"	d
ECS_IOCTL_GET_LAYOUT	akm09911.h	99;"	d
ECS_IOCTL_GET_OPEN_STATUS	akm09911.h	96;"	d
ECS_IOCTL_READ	akm09911.h	88;"	d
ECS_IOCTL_RESET	akm09911.h	90;"	d
ECS_IOCTL_SET_MODE	akm09911.h	91;"	d
ECS_IOCTL_SET_YPR	akm09911.h	92;"	d
ECS_IOCTL_WRITE	akm09911.h	89;"	d
ENABLE	bosch/bmi160_driver.h	152;"	d
ERROR	bosch/bmi160.h	719;"	d
E_BMI160_BUSY	bosch/bmi160.h	717;"	d
E_BMI160_COMM_RES	bosch/bmi160.h	715;"	d
E_BMI160_NULL_PTR	bosch/bmi160.h	714;"	d
E_BMI160_OUT_OF_RANGE	bosch/bmi160.h	716;"	d
FAR_OFFSET	helix.c	200;"	d	file:
FAR_TO_NEAR	helix.c	203;"	d	file:
FIFO_ACCEL_ENABLE	bosch/bmi160.h	3443;"	d
FIFO_A_OVER_LEN	bosch/bmi160_driver.c	/^	FIFO_A_OVER_LEN = -1$/;"	e	enum:BMI_FIFO_ANALYSE_RETURN_T	file:
FIFO_CONFIG_CHECK1	bosch/bmi160.h	3139;"	d
FIFO_CONFIG_CHECK2	bosch/bmi160.h	3140;"	d
FIFO_DATA_BUFSIZE	bosch/bmi160_driver.h	89;"	d
FIFO_FRAME	bosch/bmi160.h	3138;"	d
FIFO_FRAME_CNT	bosch/bmi160_driver.h	88;"	d
FIFO_GYRO_ENABLE	bosch/bmi160.h	3444;"	d
FIFO_G_A_OVER_LEN	bosch/bmi160_driver.c	/^	FIFO_G_A_OVER_LEN = -4,$/;"	e	enum:BMI_FIFO_ANALYSE_RETURN_T	file:
FIFO_G_OVER_LEN	bosch/bmi160_driver.c	/^	FIFO_G_OVER_LEN = -2,$/;"	e	enum:BMI_FIFO_ANALYSE_RETURN_T	file:
FIFO_HEADER_ENABLE	bosch/bmi160.h	3441;"	d
FIFO_HEAD_A	bosch/bmi160_driver.h	119;"	d
FIFO_HEAD_G	bosch/bmi160_driver.h	120;"	d
FIFO_HEAD_G_A	bosch/bmi160_driver.h	123;"	d
FIFO_HEAD_M	bosch/bmi160_driver.h	121;"	d
FIFO_HEAD_M_A	bosch/bmi160_driver.h	124;"	d
FIFO_HEAD_M_G	bosch/bmi160_driver.h	125;"	d
FIFO_HEAD_M_G_A	bosch/bmi160_driver.h	127;"	d
FIFO_HEAD_OVER_READ_LSB	bosch/bmi160_driver.h	131;"	d
FIFO_HEAD_OVER_READ_MSB	bosch/bmi160_driver.h	132;"	d
FIFO_HEAD_SENSOR_TIME	bosch/bmi160_driver.h	129;"	d
FIFO_HEAD_SKIP_FRAME	bosch/bmi160_driver.h	130;"	d
FIFO_MAG_ENABLE	bosch/bmi160.h	3442;"	d
FIFO_M_A_OVER_LEN	bosch/bmi160_driver.c	/^	FIFO_M_A_OVER_LEN = -5,$/;"	e	enum:BMI_FIFO_ANALYSE_RETURN_T	file:
FIFO_M_G_A_OVER_LEN	bosch/bmi160_driver.c	/^	FIFO_M_G_A_OVER_LEN = -7,$/;"	e	enum:BMI_FIFO_ANALYSE_RETURN_T	file:
FIFO_M_G_OVER_LEN	bosch/bmi160_driver.c	/^	FIFO_M_G_OVER_LEN = -6,$/;"	e	enum:BMI_FIFO_ANALYSE_RETURN_T	file:
FIFO_M_OVER_LEN	bosch/bmi160_driver.c	/^	FIFO_M_OVER_LEN = -3,$/;"	e	enum:BMI_FIFO_ANALYSE_RETURN_T	file:
FIFO_OVER_READ_RETURN	bosch/bmi160_driver.c	/^	FIFO_OVER_READ_RETURN = -10,$/;"	e	enum:BMI_FIFO_ANALYSE_RETURN_T	file:
FIFO_SENSORTIME_RETURN	bosch/bmi160_driver.c	/^	FIFO_SENSORTIME_RETURN = -9,$/;"	e	enum:BMI_FIFO_ANALYSE_RETURN_T	file:
FIFO_SKIP_OVER_LEN	bosch/bmi160_driver.c	/^	FIFO_SKIP_OVER_LEN = -8,$/;"	e	enum:BMI_FIFO_ANALYSE_RETURN_T	file:
FIFO_STOPONFULL_ENABLE	bosch/bmi160.h	3446;"	d
FIFO_TIME_ENABLE	bosch/bmi160.h	3445;"	d
FIFO_WM_INTERRUPT_ENABLE	bosch/bmi160.h	3447;"	d
FILTER_DATA	bosch/bmi160.h	3497;"	d
FOC_X_AXIS	bosch/bmi160.h	3267;"	d
FOC_Y_AXIS	bosch/bmi160.h	3268;"	d
FOC_Z_AXIS	bosch/bmi160.h	3269;"	d
FORCE_MODE	bosch/bmi160.h	3434;"	d
FRAME_LEN_ACC	bosch/bmi160_driver.h	92;"	d
FRAME_LEN_GYRO	bosch/bmi160_driver.h	93;"	d
FRAME_LEN_MAG	bosch/bmi160_driver.h	94;"	d
FUSE_ROM_MODE	bosch/bmi160.h	3425;"	d
FUSION_DATA_FLAG	akm09911.h	78;"	d
FUSION_DATA_READY	akm09911.h	83;"	d
GA1A_MAX_UV	ga1auv100.c	57;"	d	file:
GA1A_MIN_UV	ga1auv100.c	56;"	d	file:
GA_BYTES_FRM	bosch/bmi160_driver.h	138;"	d
GYRO_FIFO_HEAD	bosch/bmi160_driver.h	144;"	d
GYRO_MODE_FASTSTARTUP	bosch/bmi160.h	3462;"	d
GYRO_MODE_NORMAL	bosch/bmi160.h	3461;"	d
GYRO_MODE_SUSPEND	bosch/bmi160.h	3460;"	d
GYRO_OFFSET_ENABLE	bosch/bmi160.h	3237;"	d
G_BYTES_FRM	bosch/bmi160_driver.h	136;"	d
G_DATA_HIGHT_BYTE	nxu8010.c	32;"	d	file:
G_DATA_LOW_BYTE	nxu8010.c	31;"	d	file:
HALL_INPUT	hall_sensor.c	30;"	d	file:
HELIX_USE_PS_CALIBRATION	helix.c	189;"	d	file:
HIGH_LUX_MODE	ga1auv100.c	79;"	d	file:
HIGH_LUX_RANGE	ga1auv100.c	81;"	d	file:
HIGH_UV_MODE	ga1auv100.c	70;"	d	file:
HIGH_UV_RANGE	ga1auv100.c	72;"	d	file:
Helix3X1X_VDD_MAX_UV	helix.c	179;"	d	file:
Helix3X1X_VDD_MIN_UV	helix.c	178;"	d	file:
Helix3X1X_VIO_MAX_UV	helix.c	181;"	d	file:
Helix3X1X_VIO_MIN_UV	helix.c	180;"	d	file:
Helix_ALSCTRL_REG	helix.c	72;"	d	file:
Helix_ALS_CHANGE_THD	helix.c	63;"	d	file:
Helix_ALS_GAIN_MASK	helix.c	130;"	d	file:
Helix_ALS_GAIN_SHIFT	helix.c	126;"	d	file:
Helix_ALS_IT_MASK	helix.c	131;"	d	file:
Helix_ALS_IT_SHIFT	helix.c	127;"	d	file:
Helix_ALS_PRS_MASK	helix.c	129;"	d	file:
Helix_ALS_PRS_SHIFT	helix.c	125;"	d	file:
Helix_DATA1_ALS_REG	helix.c	87;"	d	file:
Helix_DATA1_IR_REG	helix.c	91;"	d	file:
Helix_DATA1_OFFSET_REG	helix.c	89;"	d	file:
Helix_DATA1_PS_REG	helix.c	85;"	d	file:
Helix_DATA2_ALS_REG	helix.c	88;"	d	file:
Helix_DATA2_IR_REG	helix.c	92;"	d	file:
Helix_DATA2_OFFSET_REG	helix.c	90;"	d	file:
Helix_DATA2_PS_REG	helix.c	86;"	d	file:
Helix_FIR_LEN	helix.c	183;"	d	file:
Helix_FLAG_REG	helix.c	84;"	d	file:
Helix_FLG_ALSDR_MASK	helix.c	162;"	d	file:
Helix_FLG_ALSDR_SHIFT	helix.c	154;"	d	file:
Helix_FLG_ALSINT_MASK	helix.c	164;"	d	file:
Helix_FLG_ALSINT_SHIFT	helix.c	156;"	d	file:
Helix_FLG_IR_RDY_MASK	helix.c	167;"	d	file:
Helix_FLG_IR_RDY_SHIFT	helix.c	159;"	d	file:
Helix_FLG_NF_MASK	helix.c	168;"	d	file:
Helix_FLG_NF_SHIFT	helix.c	160;"	d	file:
Helix_FLG_OUI_MASK	helix.c	166;"	d	file:
Helix_FLG_OUI_SHIFT	helix.c	158;"	d	file:
Helix_FLG_PSDR_MASK	helix.c	163;"	d	file:
Helix_FLG_PSDR_SHIFT	helix.c	155;"	d	file:
Helix_FLG_PSINT_MASK	helix.c	165;"	d	file:
Helix_FLG_PSINT_SHIFT	helix.c	157;"	d	file:
Helix_INT_ALS	helix.c	151;"	d	file:
Helix_INT_ALS_MASK	helix.c	148;"	d	file:
Helix_INT_ALS_SHIFT	helix.c	143;"	d	file:
Helix_INT_CTRL_MASK	helix.c	146;"	d	file:
Helix_INT_CTRL_SHIFT	helix.c	141;"	d	file:
Helix_INT_OUI_MASK	helix.c	147;"	d	file:
Helix_INT_OUI_SHIFT	helix.c	142;"	d	file:
Helix_INT_PS_MASK	helix.c	149;"	d	file:
Helix_INT_PS_MODE	helix.c	65;"	d	file:
Helix_INT_PS_SHIFT	helix.c	144;"	d	file:
Helix_INT_REG	helix.c	74;"	d	file:
Helix_LEDCTRL_REG	helix.c	73;"	d	file:
Helix_LED_DT_MASK	helix.c	138;"	d	file:
Helix_LED_DT_SHIFT	helix.c	135;"	d	file:
Helix_LED_IRDR_MASK	helix.c	137;"	d	file:
Helix_LED_IRDR_SHIFT	helix.c	134;"	d	file:
Helix_PDT_ID_REG	helix.c	93;"	d	file:
Helix_POLL_ALS	helix.c	67;"	d	file:
Helix_PSCTRL_REG	helix.c	71;"	d	file:
Helix_PS_GAIN_MASK	helix.c	121;"	d	file:
Helix_PS_GAIN_SHIFT	helix.c	117;"	d	file:
Helix_PS_IT_MASK	helix.c	122;"	d	file:
Helix_PS_IT_SHIFT	helix.c	118;"	d	file:
Helix_PS_PRS_MASK	helix.c	120;"	d	file:
Helix_PS_PRS_SHIFT	helix.c	116;"	d	file:
Helix_RSRVD_REG	helix.c	94;"	d	file:
Helix_STATE_EN_AK_MASK	helix.c	108;"	d	file:
Helix_STATE_EN_AK_SHIFT	helix.c	100;"	d	file:
Helix_STATE_EN_ALS_MASK	helix.c	112;"	d	file:
Helix_STATE_EN_ALS_SHIFT	helix.c	104;"	d	file:
Helix_STATE_EN_ASO_MASK	helix.c	109;"	d	file:
Helix_STATE_EN_ASO_SHIFT	helix.c	101;"	d	file:
Helix_STATE_EN_IRO_MASK	helix.c	110;"	d	file:
Helix_STATE_EN_IRO_SHIFT	helix.c	102;"	d	file:
Helix_STATE_EN_IRS_MASK	helix.c	107;"	d	file:
Helix_STATE_EN_IRS_SHIFT	helix.c	99;"	d	file:
Helix_STATE_EN_PS_MASK	helix.c	113;"	d	file:
Helix_STATE_EN_PS_SHIFT	helix.c	105;"	d	file:
Helix_STATE_EN_WAIT_MASK	helix.c	111;"	d	file:
Helix_STATE_EN_WAIT_SHIFT	helix.c	103;"	d	file:
Helix_STATE_REG	helix.c	70;"	d	file:
Helix_SW_RESET_REG	helix.c	95;"	d	file:
Helix_THDH1_ALS_REG	helix.c	80;"	d	file:
Helix_THDH1_PS_REG	helix.c	76;"	d	file:
Helix_THDH2_ALS_REG	helix.c	81;"	d	file:
Helix_THDH2_PS_REG	helix.c	77;"	d	file:
Helix_THDL1_ALS_REG	helix.c	82;"	d	file:
Helix_THDL1_PS_REG	helix.c	78;"	d	file:
Helix_THDL2_ALS_REG	helix.c	83;"	d	file:
Helix_THDL2_PS_REG	helix.c	79;"	d	file:
Helix_WAIT_REG	helix.c	75;"	d	file:
Helix_all_reg_show	helix.c	/^static ssize_t Helix_all_reg_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
Helix_als_attribute_group	helix.c	/^static struct attribute_group Helix_als_attribute_group = {$/;"	v	typeref:struct:attribute_group	file:
Helix_als_attrs	helix.c	/^static struct attribute *Helix_als_attrs [] =$/;"	v	typeref:struct:attribute	file:
Helix_als_code_show	helix.c	/^static ssize_t Helix_als_code_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
Helix_als_delay_show	helix.c	/^static ssize_t Helix_als_delay_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
Helix_als_delay_store	helix.c	/^static ssize_t Helix_als_delay_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t size)$/;"	f	file:
Helix_als_delay_store_fir	helix.c	/^static inline void Helix_als_delay_store_fir(struct helix_data *client)$/;"	f	file:
Helix_als_enable_set	helix.c	/^static int Helix_als_enable_set(struct sensors_classdev *sensors_cdev,$/;"	f	file:
Helix_als_enable_show	helix.c	/^static ssize_t Helix_als_enable_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
Helix_als_enable_store	helix.c	/^static ssize_t Helix_als_enable_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t size)$/;"	f	file:
Helix_als_fir_enable_show	helix.c	/^static ssize_t Helix_als_fir_enable_show(struct device *dev,$/;"	f	file:
Helix_als_fir_enable_store	helix.c	/^static ssize_t Helix_als_fir_enable_store(struct device *dev,$/;"	f	file:
Helix_als_firlen_show	helix.c	/^static ssize_t Helix_als_firlen_show(struct device *dev,$/;"	f	file:
Helix_als_firlen_store	helix.c	/^static ssize_t Helix_als_firlen_store(struct device *dev,$/;"	f	file:
Helix_als_lux_show	helix.c	/^static ssize_t Helix_als_lux_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
Helix_als_lux_store	helix.c	/^static ssize_t Helix_als_lux_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t size)$/;"	f	file:
Helix_als_poll_delay_set	helix.c	/^static int Helix_als_poll_delay_set(struct sensors_classdev *sensors_cdev,$/;"	f	file:
Helix_als_timer_func	helix.c	/^static enum hrtimer_restart Helix_als_timer_func(struct hrtimer *timer)$/;"	f	file:
Helix_als_transmittance_show	helix.c	/^static ssize_t Helix_als_transmittance_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
Helix_als_transmittance_store	helix.c	/^static ssize_t Helix_als_transmittance_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t size)$/;"	f	file:
Helix_als_work	helix.c	/^    struct work_struct Helix_als_work;$/;"	m	struct:helix_data	typeref:struct:helix_data::work_struct	file:
Helix_als_work_func	helix.c	/^static void Helix_als_work_func(struct work_struct *work)$/;"	f	file:
Helix_als_wq	helix.c	/^	struct workqueue_struct *Helix_als_wq;$/;"	m	struct:helix_data	typeref:struct:helix_data::workqueue_struct	file:
Helix_early_suspend	helix.c	/^	struct early_suspend Helix_early_suspend;$/;"	m	struct:helix_data	typeref:struct:helix_data::early_suspend	file:
Helix_match_table	helix.c	/^static struct of_device_id Helix_match_table[] = {$/;"	v	typeref:struct:of_device_id	file:
Helix_oss_irq_handler	helix.c	/^static irqreturn_t Helix_oss_irq_handler(int irq, void *data)$/;"	f	file:
Helix_ps_attribute_group	helix.c	/^static struct attribute_group Helix_ps_attribute_group = {$/;"	v	typeref:struct:attribute_group	file:
Helix_ps_attrs	helix.c	/^static struct attribute *Helix_ps_attrs [] =$/;"	v	typeref:struct:attribute	file:
Helix_ps_calculation_def_show	helix.c	/^static ssize_t Helix_ps_calculation_def_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
Helix_ps_code_show	helix.c	/^static ssize_t Helix_ps_code_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
Helix_ps_code_thd_h_show	helix.c	/^static ssize_t Helix_ps_code_thd_h_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
Helix_ps_code_thd_h_store	helix.c	/^static ssize_t Helix_ps_code_thd_h_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t size)$/;"	f	file:
Helix_ps_code_thd_l_show	helix.c	/^static ssize_t Helix_ps_code_thd_l_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
Helix_ps_code_thd_l_store	helix.c	/^static ssize_t Helix_ps_code_thd_l_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t size)$/;"	f	file:
Helix_ps_distance_show	helix.c	/^static ssize_t Helix_ps_distance_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
Helix_ps_distance_store	helix.c	/^static ssize_t Helix_ps_distance_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t size)$/;"	f	file:
Helix_ps_driver	helix.c	/^static struct i2c_driver Helix_ps_driver =$/;"	v	typeref:struct:i2c_driver	file:
Helix_ps_enable_set	helix.c	/^static int Helix_ps_enable_set(struct sensors_classdev *sensors_cdev,$/;"	f	file:
Helix_ps_enable_show	helix.c	/^static ssize_t Helix_ps_enable_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
Helix_ps_enable_store	helix.c	/^static ssize_t Helix_ps_enable_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t size)$/;"	f	file:
Helix_ps_id	helix.c	/^static const struct i2c_device_id Helix_ps_id[] =$/;"	v	typeref:struct:i2c_device_id	file:
Helix_ps_work	helix.c	/^	struct work_struct Helix_ps_work;$/;"	m	struct:helix_data	typeref:struct:helix_data::work_struct	file:
Helix_ps_wq	helix.c	/^	struct workqueue_struct *Helix_ps_wq;$/;"	m	struct:helix_data	typeref:struct:helix_data::workqueue_struct	file:
Helix_recv_show	helix.c	/^static ssize_t Helix_recv_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
Helix_recv_store	helix.c	/^static ssize_t Helix_recv_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t size)$/;"	f	file:
Helix_send_show	helix.c	/^static ssize_t Helix_send_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
Helix_send_store	helix.c	/^static ssize_t Helix_send_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t size)$/;"	f	file:
Helix_work	helix.c	/^    struct work_struct Helix_work;$/;"	m	struct:helix_data	typeref:struct:helix_data::work_struct	file:
Helix_work_func	helix.c	/^static void Helix_work_func(struct work_struct *work)$/;"	f	file:
Helix_wq	helix.c	/^	struct workqueue_struct *Helix_wq;$/;"	m	struct:helix_data	typeref:struct:helix_data::workqueue_struct	file:
I2C_BURST_READ_MAX_LEN	bosch/bmi160_driver.c	35;"	d	file:
IF_MODE_RESEVED	bosch/bmi160_driver.c	/^	IF_MODE_RESEVED$/;"	e	enum:BMI_SENSOR_IF_MODE_TYPE	file:
INPUT_EVENT_FAST_ACC_CALIB_DONE	bosch/bmi160_driver.h	220;"	d
INPUT_EVENT_FAST_GYRO_CALIB_DONE	bosch/bmi160_driver.h	221;"	d
INPUT_EVENT_SGM	bosch/bmi160_driver.h	219;"	d
INPUT_EVENT_STEP_DETECTOR	bosch/bmi160_driver.h	218;"	d
INTERVAL_0	ga1auv100.h	52;"	d
INTERVAL_100	ga1auv100.h	56;"	d
INTERVAL_12	ga1auv100.h	53;"	d
INTERVAL_200	ga1auv100.h	57;"	d
INTERVAL_25	ga1auv100.h	54;"	d
INTERVAL_400	ga1auv100.h	58;"	d
INTERVAL_50	ga1auv100.h	55;"	d
INTErVAL_800	ga1auv100.h	59;"	d
INT_TYPE_MAX	bosch/bmi160_driver.c	/^	INT_TYPE_MAX$/;"	e	enum:BMI_SENSOR_INT_T	file:
INVALID_OFFSET	bosch/bmi160.h	/^static const s8 INVALID_OFFSET[] = {0x7f, 0x7f, 0x7f};$/;"	v
IOCTL_GET	it7236_touchkey.h	12;"	d
IOCTL_SET	it7236_touchkey.h	11;"	d
IOC_MAGIC	it7236_touchkey.h	10;"	d
IRQ	bosch/bmi160_driver.h	/^	int IRQ;$/;"	m	struct:bmi_client_data
IT7236_FW_AUTO_UPGRADE_BIN	it7236_touchkey.c	27;"	d	file:
IT7236_TOUCHKEY_H	it7236_touchkey.h	2;"	d
IT7236_ts_data	it7236_touchkey.h	/^struct IT7236_ts_data {$/;"	s
IT7236_upgrade_bin	it7236_touchkey.c	/^static ssize_t IT7236_upgrade_bin(struct device *dev)$/;"	f	file:
IT7280_FW_AUTO_UPGRADE_H	it7236_touchkey.c	26;"	d	file:
IT7280_I2C_NAME	it7236_touchkey.c	36;"	d	file:
IT7280_appfwupgrade_show	it7236_touchkey.c	/^static ssize_t IT7280_appfwupgrade_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
IT7280_appfwupgrade_store	it7236_touchkey.c	/^static ssize_t IT7280_appfwupgrade_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)$/;"	f	file:
IT7280_gpiocontrol_show	it7236_touchkey.c	/^static ssize_t IT7280_gpiocontrol_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
IT7280_gpiocontrol_store	it7236_touchkey.c	/^static ssize_t IT7280_gpiocontrol_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)$/;"	f	file:
IT7280_ledcontrol_show	it7236_touchkey.c	/^static ssize_t IT7280_ledcontrol_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
IT7280_ledcontrol_store	it7236_touchkey.c	/^static ssize_t IT7280_ledcontrol_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)$/;"	f	file:
IT7280_touchcontrol_show	it7236_touchkey.c	/^static ssize_t IT7280_touchcontrol_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
IT7280_ts_driver	it7236_touchkey.c	/^static struct i2c_driver IT7280_ts_driver = {$/;"	v	typeref:struct:i2c_driver	file:
IT7280_ts_exit	it7236_touchkey.c	/^module_exit( IT7280_ts_exit);$/;"	v
IT7280_ts_exit	it7236_touchkey.c	/^static void __exit IT7280_ts_exit(void)$/;"	f	file:
IT7280_ts_id	it7236_touchkey.c	/^static const struct i2c_device_id IT7280_ts_id[] = {$/;"	v	typeref:struct:i2c_device_id	file:
IT7280_ts_init	it7236_touchkey.c	/^module_init( IT7280_ts_init);$/;"	v
IT7280_ts_init	it7236_touchkey.c	/^static int __init IT7280_ts_init(void)$/;"	f	file:
IT7280_ts_probe	it7236_touchkey.c	/^static int IT7280_ts_probe(struct i2c_client *client, const struct i2c_device_id *id)$/;"	f	file:
IT7280_ts_remove	it7236_touchkey.c	/^static int IT7280_ts_remove(struct i2c_client *client)$/;"	f	file:
IT7280_ts_resume	it7236_touchkey.c	/^static int IT7280_ts_resume(struct device *dev)$/;"	f	file:
IT7280_ts_suspend	it7236_touchkey.c	/^static int IT7280_ts_suspend(struct device *dev)$/;"	f	file:
IT7280_ts_work_func	it7236_touchkey.c	/^static irqreturn_t IT7280_ts_work_func(int irq, void *dev_id)$/;"	f	file:
IT7280_upgrade_auto	it7236_touchkey.c	/^static ssize_t IT7280_upgrade_auto(void)$/;"	f	file:
IT7280_upgrade_show	it7236_touchkey.c	/^static ssize_t IT7280_upgrade_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
IT7280_upgrade_store	it7236_touchkey.c	/^static ssize_t IT7280_upgrade_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)$/;"	f	file:
IT7280_wakeup_func	it7236_touchkey.c	/^static irqreturn_t IT7280_wakeup_func(int irq, void *dev_id)$/;"	f	file:
ITE_I2C_VTG_MAX_UV	it7236_touchkey.c	41;"	d	file:
ITE_I2C_VTG_MIN_UV	it7236_touchkey.c	40;"	d	file:
ITE_VTG_MAX_UV	it7236_touchkey.c	39;"	d	file:
ITE_VTG_MIN_UV	it7236_touchkey.c	38;"	d	file:
LID_DEV_NAME	hall_sensor.c	29;"	d	file:
LIGHT_SENSOR_NAME	ga1auv100.c	55;"	d	file:
LMADA	bosch/bmi160_driver.c	37;"	d	file:
LOW_LUX_MODE	ga1auv100.c	78;"	d	file:
LOW_LUX_RANGE	ga1auv100.c	80;"	d	file:
LOW_UV_MODE	ga1auv100.c	69;"	d	file:
LOW_UV_RANGE	ga1auv100.c	71;"	d	file:
LTR553_ALS_DEFAULT_MEASURE_RATE	ltr553.c	78;"	d	file:
LTR553_ALS_GAIN_MASK	ltr553.c	75;"	d	file:
LTR553_ALS_INT_MASK	ltr553.c	71;"	d	file:
LTR553_ALS_INVALID	ltr553.c	85;"	d	file:
LTR553_ALS_MEASURE_MASK	ltr553.c	74;"	d	file:
LTR553_ALS_SENSITIVITY	ltr553.c	65;"	d	file:
LTR553_BOOT_TIME_MS	ltr553.c	67;"	d	file:
LTR553_CALIBRATE_SAMPLES	ltr553.c	81;"	d	file:
LTR553_I2C_NAME	ltr553.c	38;"	d	file:
LTR553_INTERRUPT_SETTING	ltr553.c	101;"	d	file:
LTR553_LIGHT_INPUT_NAME	ltr553.c	39;"	d	file:
LTR553_MAX_LUX	ltr553.c	98;"	d	file:
LTR553_PART_ID	ltr553.c	63;"	d	file:
LTR553_PROXIMITY_INPUT_NAME	ltr553.c	40;"	d	file:
LTR553_PS_INT_MASK	ltr553.c	72;"	d	file:
LTR553_PS_MEASUREMENT_RATE_10MS	ltr553.c	79;"	d	file:
LTR553_PS_SATURATE_MASK	ltr553.c	70;"	d	file:
LTR553_REG_ALS_CTL	ltr553.c	42;"	d	file:
LTR553_REG_ALS_DATA_CH0_0	ltr553.c	51;"	d	file:
LTR553_REG_ALS_DATA_CH0_1	ltr553.c	52;"	d	file:
LTR553_REG_ALS_DATA_CH1_0	ltr553.c	49;"	d	file:
LTR553_REG_ALS_DATA_CH1_1	ltr553.c	50;"	d	file:
LTR553_REG_ALS_MEAS_RATE	ltr553.c	47;"	d	file:
LTR553_REG_ALS_PS_STATUS	ltr553.c	53;"	d	file:
LTR553_REG_ALS_THRES_UP_0	ltr553.c	59;"	d	file:
LTR553_REG_INTERRUPT	ltr553.c	55;"	d	file:
LTR553_REG_INTERRUPT_PERSIST	ltr553.c	60;"	d	file:
LTR553_REG_MAGIC	ltr553.c	61;"	d	file:
LTR553_REG_PART_ID	ltr553.c	48;"	d	file:
LTR553_REG_PS_CTL	ltr553.c	43;"	d	file:
LTR553_REG_PS_DATA_0	ltr553.c	54;"	d	file:
LTR553_REG_PS_LED	ltr553.c	44;"	d	file:
LTR553_REG_PS_MEAS_RATE	ltr553.c	46;"	d	file:
LTR553_REG_PS_N_PULSES	ltr553.c	45;"	d	file:
LTR553_REG_PS_OFFSET_0	ltr553.c	58;"	d	file:
LTR553_REG_PS_OFFSET_1	ltr553.c	57;"	d	file:
LTR553_REG_PS_THRES_UP_0	ltr553.c	56;"	d	file:
LTR553_WAKEUP_ANY_CHANGE	ltr553.c	104;"	d	file:
LTR553_WAKE_TIME_MS	ltr553.c	68;"	d	file:
LUX_THD_TABLE_SIZE	helix.c	338;"	d	file:
LuxCalculation	helix.c	/^static int LuxCalculation(struct helix_data *client)$/;"	f	file:
MACHINE_32_BIT	bosch/bmi160.h	163;"	d
MACHINE_32_BIT	bosch/bmi160.h	236;"	d
MAG_DATA_FLAG	akm09911.h	77;"	d
MAG_DATA_READY	akm09911.h	82;"	d
MAG_FIFO_HEAD	bosch/bmi160_driver.h	145;"	d
MAG_FORCED_MODE	akm09911.c	/^	MAG_FORCED_MODE,$/;"	e	enum:mag_sensor_op_mode_t	file:
MAG_INTERFACE_PMU_DISABLE	bosch/bmi160.h	3395;"	d
MAG_INTERFACE_PMU_ENABLE	bosch/bmi160.h	3394;"	d
MAG_MODE_LOWPOWER	bosch/bmi160.h	3468;"	d
MAG_MODE_NORMAL	bosch/bmi160.h	3467;"	d
MAG_MODE_SUSPEND	bosch/bmi160.h	3466;"	d
MAG_NORMAL_MODE	akm09911.c	/^	MAG_NORMAL_MODE = 0,$/;"	e	enum:mag_sensor_op_mode_t	file:
MAG_OP_MODE_MAX	akm09911.c	/^	MAG_OP_MODE_MAX$/;"	e	enum:mag_sensor_op_mode_t	file:
MAG_SLEEP_MODE	akm09911.c	/^	MAG_SLEEP_MODE,$/;"	e	enum:mag_sensor_op_mode_t	file:
MAG_SUSPEND_MODE	akm09911.c	/^	MAG_SUSPEND_MODE,$/;"	e	enum:mag_sensor_op_mode_t	file:
MAG_SUSPEND_MODE	bosch/bmi160.h	3437;"	d
MAX_AXIS_REMAP_TAB_SZ	akm09911.c	168;"	d	file:
MAX_AXIS_REMAP_TAB_SZ	bosch/bmi160_driver.h	150;"	d
MAX_BUFFER_SIZE	it7236_touchkey.h	4;"	d
MAX_FALL_TIME_MS	aw2013_led.c	49;"	d	file:
MAX_FIR_LEN	helix.c	184;"	d	file:
MAX_HOLD_TIME_MS	aw2013_led.c	48;"	d	file:
MAX_LUX	helix.c	186;"	d	file:
MAX_OFF_TIME_MS	aw2013_led.c	50;"	d	file:
MAX_PERIOD_DELAY_TIME_MS	aw2013_led.c	51;"	d	file:
MAX_RISE_TIME_MS	aw2013_led.c	47;"	d	file:
MA_BYTES_FRM	bosch/bmi160_driver.h	140;"	d
MGA_BYTES_FRM	bosch/bmi160_driver.h	141;"	d
MG_BYTES_FRM	bosch/bmi160_driver.h	139;"	d
MIN_ALS_POLL_DELAY_NS	helix.c	171;"	d	file:
M_BYTES_FRM	bosch/bmi160_driver.h	137;"	d
NAME	nxu8010.c	24;"	d	file:
NEAR_OFFSET	helix.c	199;"	d	file:
NEAR_TO_FAR	helix.c	202;"	d	file:
NORMAL_MODE	bosch/bmi160.h	3436;"	d
NO_MOTION	bosch/bmi160.h	3503;"	d
NXU8010_IOCTL_READ_NUM	nxu8010.c	18;"	d	file:
NXU8010_IOCTL_SIZE	nxu8010.c	17;"	d	file:
NXU8010_IOCTL_TYPE	nxu8010.c	16;"	d	file:
NXU8010_IOCTL_WRITE_NUM	nxu8010.c	19;"	d	file:
NXU8010_READ	nxu8010.c	21;"	d	file:
NXU8010_VDD_MAX_UV	nxu8010.c	26;"	d	file:
NXU8010_VDD_MIN_UV	nxu8010.c	25;"	d	file:
NXU8010_WRITE	nxu8010.c	22;"	d	file:
OPERATION_ALS	ga1auv100.c	63;"	d	file:
OPERATION_UV	ga1auv100.c	62;"	d	file:
OVER_FLOW_COUNT	ga1auv100.c	66;"	d	file:
PS_DATA_MASK	ltr553.c	93;"	d	file:
PS_HIGH_BYTE	ltr553.c	95;"	d	file:
PS_LOW_BYTE	ltr553.c	94;"	d	file:
PS_NAME	helix.c	175;"	d	file:
P_AUTO_S_MAG	bosch/bmi160_driver.c	/^	P_AUTO_S_MAG,$/;"	e	enum:BMI_SENSOR_IF_MODE_TYPE	file:
P_AUTO_S_OFF	bosch/bmi160_driver.c	/^	P_AUTO_S_OFF = 0,$/;"	e	enum:BMI_SENSOR_IF_MODE_TYPE	file:
P_I2C_S_OIS	bosch/bmi160_driver.c	/^	P_I2C_S_OIS,$/;"	e	enum:BMI_SENSOR_IF_MODE_TYPE	file:
REG_COMMAND1	ga1auv100.h	5;"	d
REG_COMMAND2	ga1auv100.h	6;"	d
REG_COMMAND3	ga1auv100.h	7;"	d
REG_D0_LSB	ga1auv100.h	9;"	d
REG_D0_MSB	ga1auv100.h	10;"	d
REG_D1_LSB	ga1auv100.h	11;"	d
REG_D1_MSB	ga1auv100.h	12;"	d
REG_DEVICE_ID	ga1auv100.h	13;"	d
REG_INTERVAL	ga1auv100.h	8;"	d
REG_MAX0	bosch/bmi160_driver.c	317;"	d	file:
REG_MAX1	bosch/bmi160_driver.c	318;"	d	file:
REG_TEST	ga1auv100.h	14;"	d
RESET_STEP_COUNTER	bosch/bmi160.h	3574;"	d
R_DATA_HIGHT_BYTE	nxu8010.c	30;"	d	file:
R_DATA_LOW_BYTE	nxu8010.c	29;"	d	file:
Read_Point	it7236_touchkey.c	/^static void Read_Point(struct IT7236_ts_data *ts)$/;"	f	file:
SENSOR_CHIP_ID_BMI	bosch/bmi160_driver.h	55;"	d
SENSOR_CHIP_ID_BMI_C2	bosch/bmi160_driver.h	56;"	d
SENSOR_CHIP_ID_BMI_C3	bosch/bmi160_driver.h	57;"	d
SENSOR_CHIP_REV_ID_BMI	bosch/bmi160_driver.h	59;"	d
SENSOR_DEFAULT_DELAY	ga1auv100.c	59;"	d	file:
SENSOR_MAX_DELAY	ga1auv100.c	60;"	d	file:
SENSOR_NAME	bosch/bmi160_driver.h	53;"	d
SENSOR_PM_LP1	bosch/bmi160_driver.c	/^	SENSOR_PM_LP1,$/;"	e	enum:BMI_DEV_OP_MODE	file:
SENSOR_PM_LP2	bosch/bmi160_driver.c	/^	SENSOR_PM_LP2$/;"	e	enum:BMI_DEV_OP_MODE	file:
SENSOR_PM_NORMAL	bosch/bmi160_driver.c	/^	SENSOR_PM_NORMAL = 0,$/;"	e	enum:BMI_DEV_OP_MODE	file:
SENSOR_PM_SUSPEND	bosch/bmi160_driver.c	/^	SENSOR_PM_SUSPEND,$/;"	e	enum:BMI_DEV_OP_MODE	file:
SIGNIFICANT_MOTION	bosch/bmi160.h	3508;"	d
SLOW_MOTION	bosch/bmi160.h	3502;"	d
START_FOC_ACCEL_GYRO	bosch/bmi160.h	3240;"	d
STATUS_ERROR	akm09911.c	52;"	d	file:
STEP_CONFIG_NORMAL	bosch/bmi160.h	3343;"	d
STEP_CONFIG_ROBUST	bosch/bmi160.h	3345;"	d
STEP_CONFIG_SENSITIVE	bosch/bmi160.h	3344;"	d
SUCCESS	bosch/bmi160.h	718;"	d
SUSPEND_MODE	bosch/bmi160.h	3435;"	d
TOUCHKEY_LEFT	it7236_touchkey.c	43;"	d	file:
TOUCHKEY_RIGHT	it7236_touchkey.c	44;"	d	file:
TS_0_78_HZ	bosch/bmi160_driver.c	/^	TS_0_78_HZ = 1,\/*0.78HZ*\/$/;"	e	enum:BMI_SENSOR_TIME_RS_TYPE	file:
TS_100_HZ	bosch/bmi160_driver.c	/^	TS_100_HZ,\/*100HZ*\/$/;"	e	enum:BMI_SENSOR_TIME_RS_TYPE	file:
TS_12_5_HZ	bosch/bmi160_driver.c	/^	TS_12_5_HZ,\/*12.5HZ*\/$/;"	e	enum:BMI_SENSOR_TIME_RS_TYPE	file:
TS_1600_HZ	bosch/bmi160_driver.c	/^	TS_1600_HZ,\/*1600HZ*\/$/;"	e	enum:BMI_SENSOR_TIME_RS_TYPE	file:
TS_1_56_HZ	bosch/bmi160_driver.c	/^	TS_1_56_HZ,\/*1.56HZ*\/$/;"	e	enum:BMI_SENSOR_TIME_RS_TYPE	file:
TS_200_HZ	bosch/bmi160_driver.c	/^	TS_200_HZ,\/*200HZ*\/$/;"	e	enum:BMI_SENSOR_TIME_RS_TYPE	file:
TS_25_HZ	bosch/bmi160_driver.c	/^	TS_25_HZ,\/*25HZ, odr=6*\/$/;"	e	enum:BMI_SENSOR_TIME_RS_TYPE	file:
TS_3_125_HZ	bosch/bmi160_driver.c	/^	TS_3_125_HZ,\/*3.125HZ*\/$/;"	e	enum:BMI_SENSOR_TIME_RS_TYPE	file:
TS_400_HZ	bosch/bmi160_driver.c	/^	TS_400_HZ,\/*400HZ*\/$/;"	e	enum:BMI_SENSOR_TIME_RS_TYPE	file:
TS_50_HZ	bosch/bmi160_driver.c	/^	TS_50_HZ,\/*50HZ*\/$/;"	e	enum:BMI_SENSOR_TIME_RS_TYPE	file:
TS_6_25_HZ	bosch/bmi160_driver.c	/^	TS_6_25_HZ,\/*6.25HZ*\/$/;"	e	enum:BMI_SENSOR_TIME_RS_TYPE	file:
TS_800_HZ	bosch/bmi160_driver.c	/^	TS_800_HZ,\/*800HZ*\/$/;"	e	enum:BMI_SENSOR_TIME_RS_TYPE	file:
TS_MAX_HZ	bosch/bmi160_driver.c	/^	TS_MAX_HZ$/;"	e	enum:BMI_SENSOR_TIME_RS_TYPE	file:
UNFILTER_DATA	bosch/bmi160.h	3498;"	d
USER_DAT_CFG_PAGE	bosch/bmi160_driver.h	116;"	d
UV_H_to_L_counts	ga1auv100.c	75;"	d	file:
UV_L_to_H_counts	ga1auv100.c	74;"	d	file:
UV_SENSOR_NAME	ga1auv100.c	54;"	d	file:
VERSION_ABOVE_ANDROID_20	it7236_touchkey.h	9;"	d
V_bmm150_maual_auto_condition_u8	bosch/bmi160.c	/^u8 V_bmm150_maual_auto_condition_u8 = BMI160_INIT_VALUE;$/;"	v
V_fifo_time_U32	bosch/bmi160.c	/^u32 V_fifo_time_U32 = BMI160_INIT_VALUE;$/;"	v
W_DATA_HIGHT_BYTE	nxu8010.c	36;"	d	file:
W_DATA_LOW_BYTE	nxu8010.c	35;"	d	file:
X_AXIS	bosch/bmi160_driver.c	/^	X_AXIS = 0,$/;"	e	enum:BMI_AXIS_TYPE	file:
YAS532_DATA_CENTER	bosch/bmi160.h	965;"	d
YAS532_DATA_OVERFLOW	bosch/bmi160.h	957;"	d
YAS532_DATA_UNDERFLOW	bosch/bmi160.h	958;"	d
YAS532_DEFAULT_SENSOR_DELAY	bosch/bmi160.h	956;"	d
YAS532_MAG_INITCOIL_TIMEOUT	bosch/bmi160.h	954;"	d
YAS532_MAG_LOG	bosch/bmi160.h	959;"	d
YAS532_MAG_NOTRANS_POSITION	bosch/bmi160.h	955;"	d
YAS532_MAG_STATE_INIT_COIL	bosch/bmi160.h	952;"	d
YAS532_MAG_STATE_MEASURE_OFFSET	bosch/bmi160.h	953;"	d
YAS532_MAG_STATE_NORMAL	bosch/bmi160.h	951;"	d
YAS532_MAG_TEMPERATURE_LOG	bosch/bmi160.h	960;"	d
YAS532_TEMP20DEGREE_TYPICAL	bosch/bmi160.h	961;"	d
YAS532_VERSION_AC_COEF_X	bosch/bmi160.h	962;"	d
YAS532_VERSION_AC_COEF_Y1	bosch/bmi160.h	963;"	d
YAS532_VERSION_AC_COEF_Y2	bosch/bmi160.h	964;"	d
YAS537_DATA_OVERFLOW	bosch/bmi160.h	1066;"	d
YAS537_DATA_UNDERFLOW	bosch/bmi160.h	1065;"	d
YAS537_MAG_STATE_INIT_COIL	bosch/bmi160.h	1063;"	d
YAS537_MAG_STATE_NORMAL	bosch/bmi160.h	1062;"	d
YAS537_MAG_STATE_RECORD_DATA	bosch/bmi160.h	1064;"	d
YAS537_REG_ADCCALR	bosch/bmi160.h	1050;"	d
YAS537_REG_ADCCALR_ONE	bosch/bmi160.h	1051;"	d
YAS537_REG_AVRR	bosch/bmi160.h	1047;"	d
YAS537_REG_CALR_C0	bosch/bmi160.h	1026;"	d
YAS537_REG_CALR_C1	bosch/bmi160.h	1027;"	d
YAS537_REG_CALR_C2	bosch/bmi160.h	1028;"	d
YAS537_REG_CALR_C3	bosch/bmi160.h	1029;"	d
YAS537_REG_CALR_C4	bosch/bmi160.h	1030;"	d
YAS537_REG_CALR_C5	bosch/bmi160.h	1031;"	d
YAS537_REG_CALR_C6	bosch/bmi160.h	1032;"	d
YAS537_REG_CALR_C7	bosch/bmi160.h	1033;"	d
YAS537_REG_CALR_C8	bosch/bmi160.h	1034;"	d
YAS537_REG_CALR_C9	bosch/bmi160.h	1035;"	d
YAS537_REG_CALR_CA	bosch/bmi160.h	1036;"	d
YAS537_REG_CALR_CB	bosch/bmi160.h	1037;"	d
YAS537_REG_CALR_CC	bosch/bmi160.h	1038;"	d
YAS537_REG_CALR_CD	bosch/bmi160.h	1039;"	d
YAS537_REG_CALR_CE	bosch/bmi160.h	1040;"	d
YAS537_REG_CALR_CF	bosch/bmi160.h	1041;"	d
YAS537_REG_CALR_DO	bosch/bmi160.h	1042;"	d
YAS537_REG_CONFR	bosch/bmi160.h	1044;"	d
YAS537_REG_DATA_X_0	bosch/bmi160.h	1056;"	d
YAS537_REG_DATA_X_1	bosch/bmi160.h	1057;"	d
YAS537_REG_DATA_Y1_0	bosch/bmi160.h	1058;"	d
YAS537_REG_DATA_Y1_1	bosch/bmi160.h	1059;"	d
YAS537_REG_DATA_Y2_0	bosch/bmi160.h	1060;"	d
YAS537_REG_DATA_Y2_1	bosch/bmi160.h	1061;"	d
YAS537_REG_HCKR	bosch/bmi160.h	1048;"	d
YAS537_REG_LCKR	bosch/bmi160.h	1049;"	d
YAS537_REG_MTCR	bosch/bmi160.h	1043;"	d
YAS537_REG_OCR	bosch/bmi160.h	1052;"	d
YAS537_REG_OXR	bosch/bmi160.h	1046;"	d
YAS537_REG_SRSTR	bosch/bmi160.h	1025;"	d
YAS537_REG_TEMPERATURE_0	bosch/bmi160.h	1054;"	d
YAS537_REG_TEMPERATURE_1	bosch/bmi160.h	1055;"	d
YAS537_REG_TRMR	bosch/bmi160.h	1053;"	d
YAS537_SET_COMMAND_REGISTER	bosch/bmi160.h	1020;"	d
YAS537_SRSTR_DATA	bosch/bmi160.h	1014;"	d
YAS537_WRITE_A_D_CONVERTER	bosch/bmi160.h	1015;"	d
YAS537_WRITE_A_D_CONVERTER2	bosch/bmi160.h	1016;"	d
YAS537_WRITE_CONFR	bosch/bmi160.h	1018;"	d
YAS537_WRITE_FILTER	bosch/bmi160.h	1017;"	d
YAS537_WRITE_TEMP_CALIB	bosch/bmi160.h	1019;"	d
Y_AXIS	bosch/bmi160_driver.c	/^	Y_AXIS,$/;"	e	enum:BMI_AXIS_TYPE	file:
Z_AXIS	bosch/bmi160_driver.c	/^	Z_AXIS,$/;"	e	enum:BMI_AXIS_TYPE	file:
_BMI160_DRIVER_H	bosch/bmi160_driver.h	18;"	d
__BIN_ATTR	akm09911.c	1733;"	d	file:
__BIN_ATTR_NULL	akm09911.c	1742;"	d	file:
__BMI160_H__	bosch/bmi160.h	87;"	d
__GA1AUV100WP_H__	ga1auv100.h	2;"	d
__HELIX_H__	helix.h	13;"	d
_sinfo	ga1auv100.c	/^static struct ga1a_data *_sinfo = NULL;$/;"	v	typeref:struct:ga1a_data	file:
_sinfo	nxu8010.c	/^struct nxu8010_info *_sinfo;$/;"	v	typeref:struct:nxu8010_info
a2	bosch/bmi160.h	/^s32 a2;\/**<YAS532 calib a2 data *\/$/;"	m	struct:bst_yas532_calib_data_t
a2	bosch/bmi160.h	/^s8 a2;\/**<YAS532 calib a2 data *\/$/;"	m	struct:bst_yas537_calib_data_t
a3	bosch/bmi160.h	/^s32 a3;\/**<YAS532 calib a3 data *\/$/;"	m	struct:bst_yas532_calib_data_t
a3	bosch/bmi160.h	/^s8 a3;\/**<YAS532 calib a3 data *\/$/;"	m	struct:bst_yas537_calib_data_t
a4	bosch/bmi160.h	/^s32 a4;\/**<YAS532 calib a4 data *\/$/;"	m	struct:bst_yas532_calib_data_t
a4	bosch/bmi160.h	/^s8 a4;\/**<YAS532 calib a4 data *\/$/;"	m	struct:bst_yas537_calib_data_t
a5	bosch/bmi160.h	/^s16 a5;\/**<YAS532 calib a5 data *\/$/;"	m	struct:bst_yas537_calib_data_t
a5	bosch/bmi160.h	/^s32 a5;\/**<YAS532 calib a5 data *\/$/;"	m	struct:bst_yas532_calib_data_t
a6	bosch/bmi160.h	/^s32 a6;\/**<YAS532 calib a6 data *\/$/;"	m	struct:bst_yas532_calib_data_t
a6	bosch/bmi160.h	/^s8 a6;\/**<YAS532 calib a6 data *\/$/;"	m	struct:bst_yas537_calib_data_t
a7	bosch/bmi160.h	/^s32 a7;\/**<YAS532 calib a7 data *\/$/;"	m	struct:bst_yas532_calib_data_t
a7	bosch/bmi160.h	/^s8 a7;\/**<YAS532 calib a7 data *\/$/;"	m	struct:bst_yas537_calib_data_t
a8	bosch/bmi160.h	/^s32 a8;\/**<YAS532 calib a8 data *\/$/;"	m	struct:bst_yas532_calib_data_t
a8	bosch/bmi160.h	/^s8 a8;\/**<YAS532 calib a8 data *\/$/;"	m	struct:bst_yas537_calib_data_t
a9	bosch/bmi160.h	/^s16 a9;\/**<YAS532 calib a9 data *\/$/;"	m	struct:bst_yas537_calib_data_t
a9	bosch/bmi160.h	/^s32 a9;\/**<YAS532 calib a9 data *\/$/;"	m	struct:bst_yas532_calib_data_t
acc_farr	bosch/bmi160_driver.h	/^	struct bmi160_accel_t *acc_farr;$/;"	m	struct:fifo_frame_t	typeref:struct:fifo_frame_t::bmi160_accel_t
acc_frame_cnt	bosch/bmi160_driver.h	/^	unsigned char acc_frame_cnt;$/;"	m	struct:fifo_frame_t
acc_lastf_ts	bosch/bmi160_driver.h	/^	u32 acc_lastf_ts;$/;"	m	struct:fifo_frame_t
acc_odr	bosch/bmi160_driver.h	/^	u8 acc_odr;$/;"	m	struct:odr_t
acc_pm	bosch/bmi160_driver.h	/^	u8 acc_pm;$/;"	m	struct:pw_mode
acc_range	bosch/bmi160_driver.h	/^	u8 acc_range;$/;"	m	struct:range_t
acc_ts	bosch/bmi160_driver.h	/^	u32 acc_ts;$/;"	m	struct:fifo_sensor_time_t
accel_data	akm09911.c	/^	int16_t accel_data[3];$/;"	m	struct:akm_compass_data	file:
accel_mutex	akm09911.c	/^	struct mutex accel_mutex;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::mutex	file:
active	akm09911.c	/^	atomic_t	active;$/;"	m	struct:akm_compass_data	file:
active_low	hall_sensor.c	/^	int active_low;	\/* gpio active high or low for valid value *\/$/;"	m	struct:hall_data	file:
addr	nxu8010.c	/^	uint8_t addr;$/;"	m	struct:init_array	file:
akm0911_mdata_s16	akm09911.c	/^struct akm0911_mdata_s16 {$/;"	s	file:
akm09911_i2c_check_device	akm09911.c	/^static int akm09911_i2c_check_device($/;"	f	file:
akm09911_match_table	akm09911.c	/^static struct of_device_id akm09911_match_table[] = {$/;"	v	typeref:struct:of_device_id	file:
akm09911_platform_data	akm09911.h	/^struct akm09911_platform_data {$/;"	s
akm_asa_data	bosch/bmi160.c	/^struct bst_akm_sensitivity_data_t akm_asa_data;$/;"	v	typeref:struct:bst_akm_sensitivity_data_t
akm_bin_accel_write	akm09911.c	/^static ssize_t akm_bin_accel_write($/;"	f	file:
akm_buf_print	akm09911.c	/^static ssize_t akm_buf_print($/;"	f	file:
akm_compass_attributes	akm09911.c	/^static struct device_attribute akm_compass_attributes[] = {$/;"	v	typeref:struct:device_attribute	file:
akm_compass_bin_attributes	akm09911.c	/^static struct bin_attribute akm_compass_bin_attributes[] = {$/;"	v	typeref:struct:bin_attribute	file:
akm_compass_data	akm09911.c	/^struct akm_compass_data {$/;"	s	file:
akm_compass_dev	akm09911.c	/^static struct miscdevice akm_compass_dev = {$/;"	v	typeref:struct:miscdevice	file:
akm_compass_device_dev_t	akm09911.c	/^static dev_t const akm_compass_device_dev_t = MKDEV(MISC_MAJOR, 240);$/;"	v	file:
akm_compass_driver	akm09911.c	/^static struct i2c_driver akm_compass_driver = {$/;"	v	typeref:struct:i2c_driver	file:
akm_compass_exit	akm09911.c	/^module_exit(akm_compass_exit);$/;"	v
akm_compass_exit	akm09911.c	/^static void __exit akm_compass_exit(void)$/;"	f	file:
akm_compass_id	akm09911.c	/^static const struct i2c_device_id akm_compass_id[] = {$/;"	v	typeref:struct:i2c_device_id	file:
akm_compass_init	akm09911.c	/^module_init(akm_compass_init);$/;"	v
akm_compass_init	akm09911.c	/^static int __init akm_compass_init(void)$/;"	f	file:
akm_compass_input_init	akm09911.c	/^static int akm_compass_input_init($/;"	f	file:
akm_compass_irq	akm09911.c	/^static irqreturn_t akm_compass_irq(int irq, void *handle)$/;"	f	file:
akm_compass_parse_dt	akm09911.c	/^static int akm_compass_parse_dt(struct device *dev,$/;"	f	file:
akm_compass_pm_ops	akm09911.c	/^static const struct dev_pm_ops akm_compass_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
akm_compass_power_init	akm09911.c	/^static int akm_compass_power_init(struct akm_compass_data *data, bool on)$/;"	f	file:
akm_compass_power_set	akm09911.c	/^static int akm_compass_power_set(struct akm_compass_data *data, bool on)$/;"	f	file:
akm_compass_probe	akm09911.c	/^int akm_compass_probe(struct i2c_client *client, const struct i2c_device_id *id)$/;"	f
akm_compass_remove	akm09911.c	/^static int akm_compass_remove(struct i2c_client *client)$/;"	f	file:
akm_compass_resume	akm09911.c	/^static int akm_compass_resume(struct device *dev)$/;"	f	file:
akm_compass_suspend	akm09911.c	/^static int akm_compass_suspend(struct device *dev)$/;"	f	file:
akm_compass_sysfs_delay_show	akm09911.c	/^static ssize_t akm_compass_sysfs_delay_show($/;"	f	file:
akm_compass_sysfs_delay_store	akm09911.c	/^static ssize_t akm_compass_sysfs_delay_store($/;"	f	file:
akm_compass_sysfs_enable_show	akm09911.c	/^static ssize_t akm_compass_sysfs_enable_show($/;"	f	file:
akm_compass_sysfs_enable_store	akm09911.c	/^static ssize_t akm_compass_sysfs_enable_store($/;"	f	file:
akm_compass_sysfs_update_status	akm09911.c	/^static void akm_compass_sysfs_update_status($/;"	f	file:
akm_delay_acc_show	akm09911.c	/^static ssize_t akm_delay_acc_show($/;"	f	file:
akm_delay_acc_store	akm09911.c	/^static ssize_t akm_delay_acc_store($/;"	f	file:
akm_delay_fusion_show	akm09911.c	/^static ssize_t akm_delay_fusion_show($/;"	f	file:
akm_delay_fusion_store	akm09911.c	/^static ssize_t akm_delay_fusion_store($/;"	f	file:
akm_delay_mag_show	akm09911.c	/^static ssize_t akm_delay_mag_show($/;"	f	file:
akm_delay_mag_store	akm09911.c	/^static ssize_t akm_delay_mag_store($/;"	f	file:
akm_delay_show	akm09911.c	/^static ssize_t akm_delay_show($/;"	f	file:
akm_delay_store	akm09911.c	/^static ssize_t akm_delay_store($/;"	f	file:
akm_dev_poll	akm09911.c	/^static void akm_dev_poll(struct work_struct *work)$/;"	f	file:
akm_enable_acc_show	akm09911.c	/^static ssize_t akm_enable_acc_show($/;"	f	file:
akm_enable_acc_store	akm09911.c	/^static ssize_t akm_enable_acc_store($/;"	f	file:
akm_enable_fusion_show	akm09911.c	/^static ssize_t akm_enable_fusion_show($/;"	f	file:
akm_enable_fusion_store	akm09911.c	/^static ssize_t akm_enable_fusion_store($/;"	f	file:
akm_enable_mag_show	akm09911.c	/^static ssize_t akm_enable_mag_show($/;"	f	file:
akm_enable_mag_store	akm09911.c	/^static ssize_t akm_enable_mag_store($/;"	f	file:
akm_enable_set	akm09911.c	/^static int akm_enable_set(struct sensors_classdev *sensors_cdev,$/;"	f	file:
akm_enable_show	akm09911.c	/^static ssize_t akm_enable_show($/;"	f	file:
akm_enable_store	akm09911.c	/^static ssize_t akm_enable_store($/;"	f	file:
akm_get_op_mode	akm09911.c	/^static int akm_get_op_mode($/;"	f	file:
akm_i2c_rxdata	akm09911.c	/^static int akm_i2c_rxdata($/;"	f	file:
akm_i2c_txdata	akm09911.c	/^static int akm_i2c_txdata($/;"	f	file:
akm_op_mode_show	akm09911.c	/^static ssize_t akm_op_mode_show($/;"	f	file:
akm_op_mode_store	akm09911.c	/^static ssize_t akm_op_mode_store($/;"	f	file:
akm_place_show	akm09911.c	/^static ssize_t akm_place_show(struct device *dev,$/;"	f	file:
akm_place_store	akm09911.c	/^static ssize_t akm_place_store($/;"	f	file:
akm_poll_delay_set	akm09911.c	/^static int akm_poll_delay_set(struct sensors_classdev *sensors_cdev,$/;"	f	file:
akm_read_mdataxyz_s16	akm09911.c	/^static int akm_read_mdataxyz_s16(struct akm_compass_data *akm,$/;"	f	file:
akm_reg_show	akm09911.c	/^static ssize_t akm_reg_show(struct device *dev,$/;"	f	file:
akm_report_data	akm09911.c	/^static int akm_report_data(struct akm_compass_data *akm)$/;"	f	file:
akm_rept_xy_show	akm09911.c	/^static ssize_t akm_rept_xy_show(struct device *dev,$/;"	f	file:
akm_rept_xy_store	akm09911.c	/^static ssize_t akm_rept_xy_store(struct device *dev,$/;"	f	file:
akm_rept_z_show	akm09911.c	/^static ssize_t akm_rept_z_show(struct device *dev,$/;"	f	file:
akm_rept_z_store	akm09911.c	/^static ssize_t akm_rept_z_store(struct device *dev,$/;"	f	file:
akm_sensor_state	akm09911.c	/^struct akm_sensor_state {$/;"	s	file:
akm_sysfs_asa_show	akm09911.c	/^static ssize_t akm_sysfs_asa_show($/;"	f	file:
akm_sysfs_bdata_show	akm09911.c	/^static ssize_t akm_sysfs_bdata_show($/;"	f	file:
akm_sysfs_mode_store	akm09911.c	/^static ssize_t akm_sysfs_mode_store($/;"	f	file:
akm_sysfs_regs_show	akm09911.c	/^static ssize_t akm_sysfs_regs_show($/;"	f	file:
akm_timer_func	akm09911.c	/^static enum hrtimer_restart akm_timer_func(struct hrtimer *timer)$/;"	f	file:
akm_value_show	akm09911.c	/^static ssize_t akm_value_show($/;"	f	file:
all_reg_attribute	helix.c	/^static struct device_attribute all_reg_attribute = __ATTR(allreg, 0444, Helix_all_reg_show, NULL);$/;"	v	typeref:struct:device_attribute	file:
als_attribute_group	ga1auv100.c	/^static struct attribute_group als_attribute_group =$/;"	v	typeref:struct:attribute_group	file:
als_attributes	ga1auv100.c	/^static struct attribute *als_attributes[] =$/;"	v	typeref:struct:attribute	file:
als_cal	ltr553.c	/^	int			als_cal;$/;"	m	struct:ltr553_data	file:
als_cdev	helix.c	/^	struct sensors_classdev als_cdev;$/;"	m	struct:helix_data	typeref:struct:helix_data::sensors_classdev	file:
als_cdev	ltr553.c	/^	struct sensors_classdev	als_cdev;$/;"	m	struct:ltr553_data	typeref:struct:ltr553_data::sensors_classdev	file:
als_cdev	ltr553.c	/^static struct sensors_classdev als_cdev = {$/;"	v	typeref:struct:sensors_classdev	file:
als_code_attribute	helix.c	/^static struct device_attribute als_code_attribute = __ATTR(code, 0444, Helix_als_code_show, NULL);$/;"	v	typeref:struct:device_attribute	file:
als_coeff	ltr553.c	/^struct als_coeff {$/;"	s	file:
als_data_polling	ga1auv100.c	/^static void als_data_polling( struct work_struct *work )$/;"	f	file:
als_delay	ga1auv100.c	/^  int                   als_delay ;$/;"	m	struct:ga1a_data	file:
als_delay	ltr553.c	/^	int			als_delay;$/;"	m	struct:ltr553_data	file:
als_delay_show	ga1auv100.c	/^als_delay_show( struct device *dev,$/;"	f	file:
als_delay_store	ga1auv100.c	/^als_delay_store( struct device *dev,$/;"	f	file:
als_disable_work	ltr553.c	/^	struct work_struct	als_disable_work;$/;"	m	struct:ltr553_data	typeref:struct:ltr553_data::work_struct	file:
als_enable_attribute	helix.c	/^static struct device_attribute als_enable_attribute = __ATTR(enable,0664,Helix_als_enable_show,Helix_als_enable_store);$/;"	v	typeref:struct:device_attribute	file:
als_enable_show	ga1auv100.c	/^als_enable_show( struct device *dev,$/;"	f	file:
als_enable_store	ga1auv100.c	/^als_enable_store( struct device *dev,$/;"	f	file:
als_enable_work	ltr553.c	/^	struct work_struct	als_enable_work;$/;"	m	struct:ltr553_data	typeref:struct:ltr553_data::work_struct	file:
als_enabled	ga1auv100.c	/^  int                   als_enabled ;$/;"	m	struct:ga1a_data	file:
als_enabled	helix.c	/^	bool als_enabled;$/;"	m	struct:helix_data	file:
als_enabled	ltr553.c	/^	bool			als_enabled;$/;"	m	struct:ltr553_data	file:
als_fir_enable_attribute	helix.c	/^static struct device_attribute als_fir_enable_attribute =__ATTR(fir_enable, 0664, Helix_als_fir_enable_show,Helix_als_fir_enable_store);$/;"	v	typeref:struct:device_attribute	file:
als_firlen_attribute	helix.c	/^static struct device_attribute als_firlen_attribute =__ATTR(firlen, 0664, Helix_als_firlen_show, Helix_als_firlen_store);$/;"	v	typeref:struct:device_attribute	file:
als_gain	ltr553.c	/^	int			als_gain;$/;"	m	struct:ltr553_data	file:
als_gain_table	ltr553.c	/^static int als_gain_table[] = {1, 2, 4, 8, 1, 1, 48, 96};$/;"	v	file:
als_input_dev	ga1auv100.c	/^  struct input_dev      *als_input_dev ;$/;"	m	struct:ga1a_data	typeref:struct:ga1a_data::input_dev	file:
als_input_dev	helix.c	/^	struct input_dev *als_input_dev;$/;"	m	struct:helix_data	typeref:struct:helix_data::input_dev	file:
als_input_init	ga1auv100.c	/^static int als_input_init( struct ga1a_data *data )$/;"	f	file:
als_int_fac_table	ltr553.c	/^static int als_int_fac_table[] = { 10, 5, 20, 40, 15, 25, 30, 35 };$/;"	v	file:
als_integration_time	ltr553.c	/^	int			als_integration_time;$/;"	m	struct:ltr553_data	file:
als_lux_attribute	helix.c	/^static struct device_attribute als_lux_attribute = __ATTR(lux,0664,Helix_als_lux_show,Helix_als_lux_store);$/;"	v	typeref:struct:device_attribute	file:
als_lux_last	helix.c	/^	int32_t als_lux_last;$/;"	m	struct:helix_data	file:
als_lux_prev	ga1auv100.c	/^  int                   als_lux_prev ;$/;"	m	struct:ga1a_data	file:
als_measure_rate	ltr553.c	/^	int			als_measure_rate;$/;"	m	struct:ltr553_data	file:
als_mode	ga1auv100.c	/^  int                   als_mode ;$/;"	m	struct:ga1a_data	file:
als_mode_change	ga1auv100.c	/^als_mode_change(  u32 *data_als, struct ga1a_data *data )$/;"	f	file:
als_mrr_table	ltr553.c	/^static int als_mrr_table[] = {50, 100, 200, 500, 1000, 2000, 2000, 2000};$/;"	v	file:
als_onoff	ga1auv100.c	/^static int als_onoff( u8 onoff, struct ga1a_data *data )$/;"	f	file:
als_persist	ltr553.c	/^	int			als_persist;$/;"	m	struct:ltr553_data	file:
als_poll_delay	helix.c	/^	ktime_t als_poll_delay;$/;"	m	struct:helix_data	file:
als_poll_delay_attribute	helix.c	/^static struct device_attribute als_poll_delay_attribute =__ATTR(poll_delay, 0664, Helix_als_delay_show, Helix_als_delay_store);$/;"	v	typeref:struct:device_attribute	file:
als_ps_persist	ltr553.c	/^	int			als_ps_persist;$/;"	m	struct:ltr553_data	file:
als_raw_data_show	ga1auv100.c	/^als_raw_data_show( struct device *dev,$/;"	f	file:
als_setting_show	ga1auv100.c	/^als_setting_show( struct device *dev,$/;"	f	file:
als_setting_store	ga1auv100.c	/^als_setting_store( struct device *dev,$/;"	f	file:
als_suspend_enabled	helix.c	/^	bool als_suspend_enabled;$/;"	m	struct:helix_data	file:
als_timer	helix.c	/^	struct hrtimer als_timer;$/;"	m	struct:helix_data	typeref:struct:helix_data::hrtimer	file:
als_transmittance	helix.c	/^	uint32_t als_transmittance;$/;"	m	struct:helix_data	file:
als_transmittance_attribute	helix.c	/^static struct device_attribute als_transmittance_attribute = __ATTR(transmittance,0664,Helix_als_transmittance_show,Helix_als_transmittance_store);$/;"	v	typeref:struct:device_attribute	file:
als_work	ga1auv100.c	/^  struct delayed_work   als_work ; $/;"	m	struct:ga1a_data	typeref:struct:ga1a_data::delayed_work	file:
alsctrl_reg	helix.h	/^	uint8_t alsctrl_reg;$/;"	m	struct:helix_platform_data
asax	bosch/bmi160.h	/^u8 asax;\/**<AKM09911 and AKM09912 X sensitivity data*\/$/;"	m	struct:bst_akm_sensitivity_data_t
asay	bosch/bmi160.h	/^u8 asay;\/**<AKM09911 and AKM09912 Y sensitivity data*\/$/;"	m	struct:bst_akm_sensitivity_data_t
asaz	bosch/bmi160.h	/^u8 asaz;\/**<AKM09911 and AKM09912 Z sensitivity data*\/$/;"	m	struct:bst_akm_sensitivity_data_t
auto_report	akm09911.c	/^	int	auto_report;$/;"	m	struct:akm_compass_data	file:
average	bosch/bmi160.h	/^u8 average;\/**<average selection for offset configuration*\/$/;"	m	struct:yas537_t
avg_crosstalk	helix.c	/^	unsigned int avg_crosstalk;$/;"	m	struct:helix_data	file:
aw2013_blink_time	aw2013_led.c	/^	struct delayed_work aw2013_blink_time;$/;"	m	struct:aw2013_led_data	typeref:struct:aw2013_led_data::delayed_work	file:
aw2013_blink_time_work	aw2013_led.c	/^static void aw2013_blink_time_work(struct work_struct *work)$/;"	f	file:
aw2013_led_attr_group	aw2013_led.c	/^static const struct attribute_group aw2013_led_attr_group = {$/;"	v	typeref:struct:attribute_group	file:
aw2013_led_attributes	aw2013_led.c	/^static struct attribute *aw2013_led_attributes[] = {$/;"	v	typeref:struct:attribute	file:
aw2013_led_blink_time	aw2013_led.c	/^static unsigned int aw2013_led_blink_time(void)$/;"	f	file:
aw2013_led_breath_blink	aw2013_led.c	/^EXPORT_SYMBOL_GPL(aw2013_led_breath_blink);$/;"	v
aw2013_led_breath_blink	aw2013_led.c	/^int  aw2013_led_breath_blink(int num,int brightness)$/;"	f
aw2013_led_breath_blink_store	aw2013_led.c	/^static ssize_t aw2013_led_breath_blink_store(struct device *dev, struct device_attribute *attr,const char *buf,size_t len)$/;"	f	file:
aw2013_led_brightness_work	aw2013_led.c	/^static void aw2013_led_brightness_work(struct work_struct *work)$/;"	f	file:
aw2013_led_data	aw2013_led.c	/^struct aw2013_led_data {$/;"	s	file:
aw2013_led_driver	aw2013_led.c	/^static struct i2c_driver aw2013_led_driver = {$/;"	v	typeref:struct:i2c_driver	file:
aw2013_led_exit	aw2013_led.c	/^module_exit(aw2013_led_exit);$/;"	v
aw2013_led_exit	aw2013_led.c	/^static void __exit aw2013_led_exit(void)$/;"	f	file:
aw2013_led_i2c_read	aw2013_led.c	/^int aw2013_led_i2c_read(struct i2c_client *client, char *writebuf, int writelen, char *readbuf, int readlen)$/;"	f
aw2013_led_i2c_write	aw2013_led.c	/^int aw2013_led_i2c_write(struct i2c_client *client,char *writebuf,int writelen)$/;"	f
aw2013_led_id	aw2013_led.c	/^static const struct i2c_device_id aw2013_led_id[] = {$/;"	v	typeref:struct:i2c_device_id	file:
aw2013_led_init	aw2013_led.c	/^module_init(aw2013_led_init);$/;"	v
aw2013_led_init	aw2013_led.c	/^static int __init aw2013_led_init(void)$/;"	f	file:
aw2013_led_match_table	aw2013_led.c	/^static struct of_device_id aw2013_led_match_table[] = {$/;"	v	typeref:struct:of_device_id	file:
aw2013_led_parse_dt	aw2013_led.c	/^static int aw2013_led_parse_dt(struct device *dev,struct aw2013_led_data *data)$/;"	f	file:
aw2013_led_pm_ops	aw2013_led.c	/^static struct dev_pm_ops aw2013_led_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
aw2013_led_power_init	aw2013_led.c	/^static int aw2013_led_power_init(struct aw2013_led_data *data,bool on)$/;"	f	file:
aw2013_led_power_on	aw2013_led.c	/^static int aw2013_led_power_on(struct aw2013_led_data *data, bool on)$/;"	f	file:
aw2013_led_probe	aw2013_led.c	/^static int aw2013_led_probe(struct i2c_client *client, const struct i2c_device_id *id)$/;"	f	file:
aw2013_led_read_id	aw2013_led.c	/^static int aw2013_led_read_id(struct aw2013_led_data *data)$/;"	f	file:
aw2013_led_read_reg	aw2013_led.c	/^int aw2013_led_read_reg(struct i2c_client *client,u8 addr ,u8 *val)$/;"	f
aw2013_led_remove	aw2013_led.c	/^static int aw2013_led_remove(struct i2c_client *client)$/;"	f	file:
aw2013_led_reset	aw2013_led.c	/^static int aw2013_led_reset(struct aw2013_led_data *data)$/;"	f	file:
aw2013_led_resume	aw2013_led.c	/^static int aw2013_led_resume(struct device *dev)$/;"	f	file:
aw2013_led_set_brightness	aw2013_led.c	/^static void aw2013_led_set_brightness(struct led_classdev *cdev, enum led_brightness brightness)$/;"	f	file:
aw2013_led_status_show	aw2013_led.c	/^static ssize_t aw2013_led_status_show(struct device *dev, struct device_attribute *attr, char * buf)$/;"	f	file:
aw2013_led_suspend	aw2013_led.c	/^static int aw2013_led_suspend(struct device *dev)$/;"	f	file:
aw2013_led_time_show	aw2013_led.c	/^static ssize_t aw2013_led_time_show(struct device *dev, struct device_attribute *attr, char * buf)$/;"	f	file:
aw2013_led_time_store	aw2013_led.c	/^static ssize_t aw2013_led_time_store(struct device *dev,struct device_attribute *attr, const char *buf, size_t len)$/;"	f	file:
aw2013_led_write_reg	aw2013_led.c	/^int aw2013_led_write_reg(struct i2c_client *client,u8 addr,const u8 val)$/;"	f
aw2013_platform_data	aw2013_led.c	/^struct aw2013_platform_data {$/;"	s	file:
bias	ltr553.c	/^	unsigned int		bias;$/;"	m	struct:ltr553_data	file:
black_hair	helix.c	/^	unsigned int black_hair;$/;"	m	struct:helix_data	file:
bmi160_acc_fast_calibration_x_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_fast_calibration_x_show(struct device *dev,$/;"	f	file:
bmi160_acc_fast_calibration_x_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_fast_calibration_x_store(struct device *dev,$/;"	f	file:
bmi160_acc_fast_calibration_y_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_fast_calibration_y_show(struct device *dev,$/;"	f	file:
bmi160_acc_fast_calibration_y_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_fast_calibration_y_store(struct device *dev,$/;"	f	file:
bmi160_acc_fast_calibration_z_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_fast_calibration_z_show(struct device *dev,$/;"	f	file:
bmi160_acc_fast_calibration_z_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_fast_calibration_z_store(struct device *dev,$/;"	f	file:
bmi160_acc_odr_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_odr_show(struct device *dev,$/;"	f	file:
bmi160_acc_odr_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_odr_store(struct device *dev,$/;"	f	file:
bmi160_acc_offset_x_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_offset_x_show(struct device *dev,$/;"	f	file:
bmi160_acc_offset_x_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_offset_x_store(struct device *dev,$/;"	f	file:
bmi160_acc_offset_y_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_offset_y_show(struct device *dev,$/;"	f	file:
bmi160_acc_offset_y_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_offset_y_store(struct device *dev,$/;"	f	file:
bmi160_acc_offset_z_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_offset_z_show(struct device *dev,$/;"	f	file:
bmi160_acc_offset_z_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_offset_z_store(struct device *dev,$/;"	f	file:
bmi160_acc_op_mode_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_op_mode_show(struct device *dev,$/;"	f	file:
bmi160_acc_op_mode_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_op_mode_store(struct device *dev,$/;"	f	file:
bmi160_acc_range_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_range_show(struct device *dev,$/;"	f	file:
bmi160_acc_range_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_range_store(struct device *dev,$/;"	f	file:
bmi160_acc_value_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_acc_value_show(struct device *dev,$/;"	f	file:
bmi160_accel_foc_trigger_xyz	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_accel_foc_trigger_xyz(u8 v_foc_accel_x_u8,$/;"	f
bmi160_accel_t	bosch/bmi160.h	/^struct bmi160_accel_t {$/;"	s
bmi160_anymot_duration_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_anymot_duration_show(struct device *dev,$/;"	f	file:
bmi160_anymot_duration_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_anymot_duration_store(struct device *dev,$/;"	f	file:
bmi160_anymot_threshold_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_anymot_threshold_show(struct device *dev,$/;"	f	file:
bmi160_anymot_threshold_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_anymot_threshold_store(struct device *dev,$/;"	f	file:
bmi160_attribute_group	bosch/bmi160_driver.c	/^static struct attribute_group bmi160_attribute_group = {$/;"	v	typeref:struct:attribute_group	file:
bmi160_attributes	bosch/bmi160_driver.c	/^static struct attribute *bmi160_attributes[] = {$/;"	v	typeref:struct:attribute	file:
bmi160_axis_data_t	bosch/bmi160_driver.c	/^struct bmi160_axis_data_t {$/;"	s	file:
bmi160_bmi_value_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_bmi_value_show(struct device *dev,$/;"	f	file:
bmi160_bmm150_mag_compensate_X	bosch/bmi160.c	/^s32 bmi160_bmm150_mag_compensate_X(s16 v_mag_data_x_s16, u16 v_data_r_u16)$/;"	f
bmi160_bmm150_mag_compensate_Y	bosch/bmi160.c	/^s32 bmi160_bmm150_mag_compensate_Y(s16 v_mag_data_y_s16, u16 v_data_r_u16)$/;"	f
bmi160_bmm150_mag_compensate_Z	bosch/bmi160.c	/^s32 bmi160_bmm150_mag_compensate_Z(s16 v_mag_data_z_s16, u16 v_data_r_u16)$/;"	f
bmi160_bmm150_mag_compensate_xyz	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bmm150_mag_compensate_xyz($/;"	f
bmi160_bmm150_mag_compensate_xyz_raw	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bmm150_mag_compensate_xyz_raw($/;"	f
bmi160_bmm150_mag_interface_init	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bmm150_mag_interface_init(void)$/;"	f
bmi160_bmm150_mag_set_power_mode	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bmm150_mag_set_power_mode($/;"	f
bmi160_bmm150_mag_wakeup	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bmm150_mag_wakeup(void)$/;"	f
bmi160_bst_akm09911_compensate_X	bosch/bmi160.c	/^s32 bmi160_bst_akm09911_compensate_X(s16 v_bst_akm_x_s16)$/;"	f
bmi160_bst_akm09911_compensate_Y	bosch/bmi160.c	/^s32 bmi160_bst_akm09911_compensate_Y(s16 v_bst_akm_y_s16)$/;"	f
bmi160_bst_akm09911_compensate_Z	bosch/bmi160.c	/^s32 bmi160_bst_akm09911_compensate_Z(s16 v_bst_akm_z_s16)$/;"	f
bmi160_bst_akm09911_compensate_xyz	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_akm09911_compensate_xyz($/;"	f
bmi160_bst_akm09912_compensate_X	bosch/bmi160.c	/^s32 bmi160_bst_akm09912_compensate_X(s16 v_bst_akm_x_s16)$/;"	f
bmi160_bst_akm09912_compensate_Y	bosch/bmi160.c	/^s32 bmi160_bst_akm09912_compensate_Y(s16 v_bst_akm_y_s16)$/;"	f
bmi160_bst_akm09912_compensate_Z	bosch/bmi160.c	/^s32 bmi160_bst_akm09912_compensate_Z(s16 v_bst_akm_z_s16)$/;"	f
bmi160_bst_akm09912_compensate_xyz	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_akm09912_compensate_xyz($/;"	f
bmi160_bst_akm09912_compensate_xyz_raw	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_akm09912_compensate_xyz_raw($/;"	f
bmi160_bst_akm_mag_interface_init	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_akm_mag_interface_init($/;"	f
bmi160_bst_akm_set_powermode	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_akm_set_powermode($/;"	f
bmi160_bst_yamaha_yas532_calib_values	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_yamaha_yas532_calib_values(void)$/;"	f
bmi160_bst_yamaha_yas532_mag_interface_init	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_yamaha_yas532_mag_interface_init($/;"	f
bmi160_bst_yamaha_yas537_calib_values	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_yamaha_yas537_calib_values($/;"	f
bmi160_bst_yamaha_yas537_mag_interface_init	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_yamaha_yas537_mag_interface_init($/;"	f
bmi160_bst_yamaha_yas537_measure_xyz_data	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_yamaha_yas537_measure_xyz_data($/;"	f
bmi160_bst_yamaha_yas537_read_xy1y2_data	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_yamaha_yas537_read_xy1y2_data($/;"	f
bmi160_bst_yas532_acquisition_command_register	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_yas532_acquisition_command_register($/;"	f
bmi160_bst_yas532_magnetic_measure_set_offset	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_yas532_magnetic_measure_set_offset($/;"	f
bmi160_bst_yas532_measurement_xyz_data	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_yas532_measurement_xyz_data($/;"	f
bmi160_bst_yas532_normal_measurement_data	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_yas532_normal_measurement_data($/;"	f
bmi160_bst_yas532_set_initial_values	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_yas532_set_initial_values(void)$/;"	f
bmi160_bst_yas532_set_offset	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_yas532_set_offset($/;"	f
bmi160_bst_yas532_xy1y2_to_linear	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_yas532_xy1y2_to_linear($/;"	f
bmi160_bst_yas537_acquisition_command_register	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_bst_yas537_acquisition_command_register($/;"	f
bmi160_chip_id_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_chip_id_show(struct device *dev,$/;"	f	file:
bmi160_clear_step_counter	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_clear_step_counter(void)$/;"	f
bmi160_delay_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_delay_show(struct device *dev,$/;"	f	file:
bmi160_delay_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_delay_store(struct device *dev,$/;"	f	file:
bmi160_enable_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_enable_show(struct device *dev,$/;"	f	file:
bmi160_enable_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_enable_store(struct device *dev,$/;"	f	file:
bmi160_err_st_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_err_st_show(struct device *dev,$/;"	f	file:
bmi160_fifo_bytecount_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_fifo_bytecount_show(struct device *dev,$/;"	f	file:
bmi160_fifo_bytecount_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_fifo_bytecount_store(struct device *dev,$/;"	f	file:
bmi160_fifo_data	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_fifo_data($/;"	f
bmi160_fifo_data_out_frame_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_fifo_data_out_frame_show(struct device *dev,$/;"	f	file:
bmi160_fifo_data_sel_get	bosch/bmi160_driver.c	/^int bmi160_fifo_data_sel_get(struct bmi_client_data *client_data)$/;"	f
bmi160_fifo_data_sel_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_fifo_data_sel_show(struct device *dev,$/;"	f	file:
bmi160_fifo_data_sel_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_fifo_data_sel_store(struct device *dev,$/;"	f	file:
bmi160_fifo_flush_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_fifo_flush_store(struct device *dev,$/;"	f	file:
bmi160_fifo_header_en_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_fifo_header_en_show(struct device *dev,$/;"	f	file:
bmi160_fifo_header_en_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_fifo_header_en_store(struct device *dev,$/;"	f	file:
bmi160_fifo_int_tag_en_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_fifo_int_tag_en_show(struct device *dev,$/;"	f	file:
bmi160_fifo_int_tag_en_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_fifo_int_tag_en_store(struct device *dev,$/;"	f	file:
bmi160_fifo_length	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_fifo_length(u32 *v_fifo_length_u32)$/;"	f
bmi160_fifo_time_en_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_fifo_time_en_show(struct device *dev,$/;"	f	file:
bmi160_fifo_time_en_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_fifo_time_en_store(struct device *dev,$/;"	f	file:
bmi160_fifo_watermark_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_fifo_watermark_show(struct device *dev,$/;"	f	file:
bmi160_fifo_watermark_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_fifo_watermark_store(struct device *dev,$/;"	f	file:
bmi160_get_accel_bw	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_accel_bw(u8 *v_bw_u8)$/;"	f
bmi160_get_accel_data_rdy	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_accel_data_rdy(u8$/;"	f
bmi160_get_accel_fifo_filter_data	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_accel_fifo_filter_data($/;"	f
bmi160_get_accel_offset_compensation_xaxis	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_accel_offset_compensation_xaxis($/;"	f
bmi160_get_accel_offset_compensation_yaxis	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_accel_offset_compensation_yaxis($/;"	f
bmi160_get_accel_offset_compensation_zaxis	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_accel_offset_compensation_zaxis($/;"	f
bmi160_get_accel_offset_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_accel_offset_enable($/;"	f
bmi160_get_accel_output_data_rate	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_accel_output_data_rate($/;"	f
bmi160_get_accel_power_mode_stat	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_accel_power_mode_stat(u8$/;"	f
bmi160_get_accel_range	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_accel_range($/;"	f
bmi160_get_accel_selftest_amp	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_accel_selftest_amp($/;"	f
bmi160_get_accel_selftest_axis	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_accel_selftest_axis($/;"	f
bmi160_get_accel_selftest_sign	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_accel_selftest_sign($/;"	f
bmi160_get_accel_under_sampling_parameter	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_accel_under_sampling_parameter($/;"	f
bmi160_get_data_rdy_mag	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_data_rdy_mag(u8$/;"	f
bmi160_get_drop_cmd_err	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_drop_cmd_err(u8$/;"	f
bmi160_get_err_code	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_err_code(u8$/;"	f
bmi160_get_error_status	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_error_status(u8 *v_fatal_er_u8r,$/;"	f
bmi160_get_fatal_err	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_fatal_err(u8$/;"	f
bmi160_get_fifo_accel_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_fifo_accel_enable($/;"	f
bmi160_get_fifo_down_accel	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_fifo_down_accel($/;"	f
bmi160_get_fifo_down_gyro	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_fifo_down_gyro($/;"	f
bmi160_get_fifo_gyro_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_fifo_gyro_enable($/;"	f
bmi160_get_fifo_header_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_fifo_header_enable($/;"	f
bmi160_get_fifo_mag_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_fifo_mag_enable($/;"	f
bmi160_get_fifo_tag_intr1_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_fifo_tag_intr1_enable($/;"	f
bmi160_get_fifo_tag_intr2_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_fifo_tag_intr2_enable($/;"	f
bmi160_get_fifo_time_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_fifo_time_enable($/;"	f
bmi160_get_fifo_wm	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_fifo_wm($/;"	f
bmi160_get_foc_accel_x	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_foc_accel_x(u8 *v_foc_accel_x_u8)$/;"	f
bmi160_get_foc_accel_y	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_foc_accel_y(u8 *v_foc_accel_y_u8)$/;"	f
bmi160_get_foc_accel_z	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_foc_accel_z(u8 *v_foc_accel_z_u8)$/;"	f
bmi160_get_foc_gyro_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_foc_gyro_enable($/;"	f
bmi160_get_foc_rdy	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_foc_rdy(u8$/;"	f
bmi160_get_gyro_bw	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_gyro_bw(u8 *v_bw_u8)$/;"	f
bmi160_get_gyro_data_rdy	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_gyro_data_rdy(u8$/;"	f
bmi160_get_gyro_fifo_filter_data	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_gyro_fifo_filter_data($/;"	f
bmi160_get_gyro_offset_compensation_xaxis	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_gyro_offset_compensation_xaxis($/;"	f
bmi160_get_gyro_offset_compensation_yaxis	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_gyro_offset_compensation_yaxis($/;"	f
bmi160_get_gyro_offset_compensation_zaxis	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_gyro_offset_compensation_zaxis($/;"	f
bmi160_get_gyro_offset_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_gyro_offset_enable($/;"	f
bmi160_get_gyro_output_data_rate	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_gyro_output_data_rate($/;"	f
bmi160_get_gyro_power_mode_stat	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_gyro_power_mode_stat(u8$/;"	f
bmi160_get_gyro_range	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_gyro_range(u8 *v_range_u8)$/;"	f
bmi160_get_gyro_selftest	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_gyro_selftest(u8$/;"	f
bmi160_get_gyro_selftest_start	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_gyro_selftest_start($/;"	f
bmi160_get_gyro_sleep_state	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_gyro_sleep_state($/;"	f
bmi160_get_gyro_sleep_trigger	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_gyro_sleep_trigger($/;"	f
bmi160_get_gyro_wakeup_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_gyro_wakeup_intr($/;"	f
bmi160_get_gyro_wakeup_trigger	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_gyro_wakeup_trigger($/;"	f
bmi160_get_i2c_device_addr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_i2c_device_addr($/;"	f
bmi160_get_i2c_fail_err	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_i2c_fail_err(u8$/;"	f
bmi160_get_i2c_wdt_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_i2c_wdt_enable($/;"	f
bmi160_get_i2c_wdt_select	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_i2c_wdt_select($/;"	f
bmi160_get_if_mode	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_if_mode($/;"	f
bmi160_get_input_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_input_enable($/;"	f
bmi160_get_intr_any_motion	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_any_motion($/;"	f
bmi160_get_intr_any_motion_durn	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_any_motion_durn($/;"	f
bmi160_get_intr_any_motion_thres	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_any_motion_thres($/;"	f
bmi160_get_intr_data_rdy	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_data_rdy($/;"	f
bmi160_get_intr_double_tap	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_double_tap($/;"	f
bmi160_get_intr_edge_ctrl	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_edge_ctrl($/;"	f
bmi160_get_intr_enable_0	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_enable_0($/;"	f
bmi160_get_intr_enable_1	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_enable_1($/;"	f
bmi160_get_intr_enable_2	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_enable_2($/;"	f
bmi160_get_intr_fifo_full	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_fifo_full($/;"	f
bmi160_get_intr_fifo_wm	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_fifo_wm($/;"	f
bmi160_get_intr_flat	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_flat($/;"	f
bmi160_get_intr_flat_hold	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_flat_hold($/;"	f
bmi160_get_intr_flat_hyst	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_flat_hyst($/;"	f
bmi160_get_intr_flat_theta	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_flat_theta($/;"	f
bmi160_get_intr_high_g	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_high_g($/;"	f
bmi160_get_intr_high_g_durn	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_high_g_durn($/;"	f
bmi160_get_intr_high_g_hyst	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_high_g_hyst($/;"	f
bmi160_get_intr_high_g_thres	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_high_g_thres($/;"	f
bmi160_get_intr_level	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_level($/;"	f
bmi160_get_intr_low_g	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_low_g($/;"	f
bmi160_get_intr_low_g_durn	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_low_g_durn($/;"	f
bmi160_get_intr_low_g_hyst	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_low_g_hyst($/;"	f
bmi160_get_intr_low_g_mode	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_low_g_mode(u8 *v_low_g_mode_u8)$/;"	f
bmi160_get_intr_low_g_thres	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_low_g_thres($/;"	f
bmi160_get_intr_low_high_source	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_low_high_source($/;"	f
bmi160_get_intr_motion_source	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_motion_source($/;"	f
bmi160_get_intr_nomotion	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_nomotion($/;"	f
bmi160_get_intr_orient	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_orient($/;"	f
bmi160_get_intr_orient_axes_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_orient_axes_enable($/;"	f
bmi160_get_intr_orient_blocking	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_orient_blocking($/;"	f
bmi160_get_intr_orient_hyst	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_orient_hyst($/;"	f
bmi160_get_intr_orient_mode	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_orient_mode($/;"	f
bmi160_get_intr_orient_theta	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_orient_theta($/;"	f
bmi160_get_intr_orient_ud_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_orient_ud_enable($/;"	f
bmi160_get_intr_output_type	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_output_type($/;"	f
bmi160_get_intr_pmu_trig	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_pmu_trig($/;"	f
bmi160_get_intr_significant_motion_proof	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_significant_motion_proof($/;"	f
bmi160_get_intr_significant_motion_select	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_significant_motion_select($/;"	f
bmi160_get_intr_significant_motion_skip	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_significant_motion_skip($/;"	f
bmi160_get_intr_single_tap	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_single_tap($/;"	f
bmi160_get_intr_slow_no_motion_durn	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_slow_no_motion_durn($/;"	f
bmi160_get_intr_slow_no_motion_select	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_slow_no_motion_select($/;"	f
bmi160_get_intr_slow_no_motion_thres	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_slow_no_motion_thres($/;"	f
bmi160_get_intr_tap_durn	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_tap_durn($/;"	f
bmi160_get_intr_tap_quiet	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_tap_quiet($/;"	f
bmi160_get_intr_tap_shock	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_tap_shock($/;"	f
bmi160_get_intr_tap_source	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_tap_source(u8 *v_tap_source_u8)$/;"	f
bmi160_get_intr_tap_thres	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_intr_tap_thres($/;"	f
bmi160_get_latch_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_latch_intr($/;"	f
bmi160_get_mag_burst	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_mag_burst($/;"	f
bmi160_get_mag_dada_rdy_err	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_mag_dada_rdy_err($/;"	f
bmi160_get_mag_manual_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_mag_manual_enable($/;"	f
bmi160_get_mag_manual_operation_stat	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_mag_manual_operation_stat(u8$/;"	f
bmi160_get_mag_offset	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_mag_offset($/;"	f
bmi160_get_mag_output_data_rate	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_mag_output_data_rate($/;"	f
bmi160_get_mag_power_mode_stat	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_mag_power_mode_stat(u8$/;"	f
bmi160_get_mag_read_addr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_mag_read_addr($/;"	f
bmi160_get_mag_write_addr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_mag_write_addr($/;"	f
bmi160_get_mag_write_data	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_mag_write_data($/;"	f
bmi160_get_nvm_counter	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_nvm_counter(u8 *v_nvm_counter_u8)$/;"	f
bmi160_get_nvm_prog_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_nvm_prog_enable($/;"	f
bmi160_get_nvm_rdy	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_nvm_rdy(u8$/;"	f
bmi160_get_output_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_output_enable($/;"	f
bmi160_get_paging_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_paging_enable(u8 *v_page_enable_u8)$/;"	f
bmi160_get_ptr	bosch/bmi160.c	/^struct bmi160_t *bmi160_get_ptr(void)$/;"	f
bmi160_get_pullup_configuration	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_pullup_configuration($/;"	f
bmi160_get_sensor_time	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_sensor_time(u32 *v_sensor_time_u32)$/;"	f
bmi160_get_spare0_trim	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_spare0_trim(u8 *v_spare0_trim_u8)$/;"	f
bmi160_get_spi3	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_spi3($/;"	f
bmi160_get_spi_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_spi_enable(u8 *v_spi_enable_u8)$/;"	f
bmi160_get_stat0_any_motion_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat0_any_motion_intr(u8$/;"	f
bmi160_get_stat0_double_tap_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat0_double_tap_intr(u8$/;"	f
bmi160_get_stat0_flat_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat0_flat_intr(u8$/;"	f
bmi160_get_stat0_orient_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat0_orient_intr(u8$/;"	f
bmi160_get_stat0_pmu_trigger_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat0_pmu_trigger_intr(u8$/;"	f
bmi160_get_stat0_significant_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat0_significant_intr(u8$/;"	f
bmi160_get_stat0_single_tap_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat0_single_tap_intr(u8$/;"	f
bmi160_get_stat0_step_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat0_step_intr(u8$/;"	f
bmi160_get_stat1_data_rdy_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat1_data_rdy_intr(u8$/;"	f
bmi160_get_stat1_fifo_full_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat1_fifo_full_intr(u8$/;"	f
bmi160_get_stat1_fifo_wm_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat1_fifo_wm_intr(u8$/;"	f
bmi160_get_stat1_high_g_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat1_high_g_intr(u8$/;"	f
bmi160_get_stat1_low_g_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat1_low_g_intr(u8$/;"	f
bmi160_get_stat1_nomotion_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat1_nomotion_intr(u8$/;"	f
bmi160_get_stat2_any_motion_first_x	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat2_any_motion_first_x(u8$/;"	f
bmi160_get_stat2_any_motion_first_y	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat2_any_motion_first_y(u8$/;"	f
bmi160_get_stat2_any_motion_first_z	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat2_any_motion_first_z(u8$/;"	f
bmi160_get_stat2_any_motion_sign	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat2_any_motion_sign(u8$/;"	f
bmi160_get_stat2_tap_first_x	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat2_tap_first_x(u8$/;"	f
bmi160_get_stat2_tap_first_y	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat2_tap_first_y(u8$/;"	f
bmi160_get_stat2_tap_first_z	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat2_tap_first_z(u8$/;"	f
bmi160_get_stat2_tap_sign	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat2_tap_sign(u8$/;"	f
bmi160_get_stat3_flat	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat3_flat(u8$/;"	f
bmi160_get_stat3_high_g_first_x	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat3_high_g_first_x(u8$/;"	f
bmi160_get_stat3_high_g_first_y	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat3_high_g_first_y(u8$/;"	f
bmi160_get_stat3_high_g_first_z	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat3_high_g_first_z(u8$/;"	f
bmi160_get_stat3_high_g_sign	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat3_high_g_sign(u8$/;"	f
bmi160_get_stat3_orient_xy	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat3_orient_xy(u8$/;"	f
bmi160_get_stat3_orient_z	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_stat3_orient_z(u8$/;"	f
bmi160_get_step_config	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_step_config($/;"	f
bmi160_get_step_counter_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_step_counter_enable($/;"	f
bmi160_get_step_detector_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_step_detector_enable($/;"	f
bmi160_get_target_page	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_target_page(u8 *v_target_page_u8)$/;"	f
bmi160_get_temp	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_get_temp(s16$/;"	f
bmi160_gyro_fast_calibration_en_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_gyro_fast_calibration_en_show(struct device *dev,$/;"	f	file:
bmi160_gyro_fast_calibration_en_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_gyro_fast_calibration_en_store(struct device *dev,$/;"	f	file:
bmi160_gyro_odr_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_gyro_odr_show(struct device *dev,$/;"	f	file:
bmi160_gyro_odr_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_gyro_odr_store(struct device *dev,$/;"	f	file:
bmi160_gyro_offset_x_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_gyro_offset_x_show(struct device *dev,$/;"	f	file:
bmi160_gyro_offset_x_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_gyro_offset_x_store(struct device *dev,$/;"	f	file:
bmi160_gyro_offset_y_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_gyro_offset_y_show(struct device *dev,$/;"	f	file:
bmi160_gyro_offset_y_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_gyro_offset_y_store(struct device *dev,$/;"	f	file:
bmi160_gyro_offset_z_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_gyro_offset_z_show(struct device *dev,$/;"	f	file:
bmi160_gyro_offset_z_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_gyro_offset_z_store(struct device *dev,$/;"	f	file:
bmi160_gyro_op_mode_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_gyro_op_mode_show(struct device *dev,$/;"	f	file:
bmi160_gyro_op_mode_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_gyro_op_mode_store(struct device *dev,$/;"	f	file:
bmi160_gyro_range_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_gyro_range_show(struct device *dev,$/;"	f	file:
bmi160_gyro_range_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_gyro_range_store(struct device *dev,$/;"	f	file:
bmi160_gyro_t	bosch/bmi160.h	/^struct bmi160_gyro_t {$/;"	s
bmi160_gyro_value_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_gyro_value_show(struct device *dev,$/;"	f	file:
bmi160_init	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_init(struct bmi160_t *bmi160)$/;"	f
bmi160_mag_chip_id_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_mag_chip_id_show(struct device *dev,$/;"	f	file:
bmi160_mag_i2c_address_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_mag_i2c_address_show(struct device *dev,$/;"	f	file:
bmi160_mag_i2c_address_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_mag_i2c_address_store(struct device *dev,$/;"	f	file:
bmi160_mag_odr_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_mag_odr_show(struct device *dev,$/;"	f	file:
bmi160_mag_odr_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_mag_odr_store(struct device *dev,$/;"	f	file:
bmi160_mag_offset_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_mag_offset_show(struct device *dev,$/;"	f	file:
bmi160_mag_offset_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_mag_offset_store(struct device *dev,$/;"	f	file:
bmi160_mag_op_mode_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_mag_op_mode_show(struct device *dev,$/;"	f	file:
bmi160_mag_op_mode_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_mag_op_mode_store(struct device *dev,$/;"	f	file:
bmi160_mag_t	bosch/bmi160.h	/^struct bmi160_mag_t {$/;"	s
bmi160_mag_value_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_mag_value_show(struct device *dev,$/;"	f	file:
bmi160_mag_xyz_s32_t	bosch/bmi160.h	/^struct bmi160_mag_xyz_s32_t {$/;"	s
bmi160_mag_xyzr_t	bosch/bmi160.h	/^struct bmi160_mag_xyzr_t {$/;"	s
bmi160_map_significant_motion_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_map_significant_motion_intr($/;"	f
bmi160_map_step_detector_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_map_step_detector_intr($/;"	f
bmi160_of_match	bosch/bmi160_i2c.c	/^static const struct of_device_id bmi160_of_match[] = {$/;"	v	typeref:struct:of_device_id	file:
bmi160_place_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_place_show(struct device *dev,$/;"	f	file:
bmi160_read_accel_x	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_accel_x(s16 *v_accel_x_s16)$/;"	f
bmi160_read_accel_xyz	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_accel_xyz($/;"	f
bmi160_read_accel_y	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_accel_y(s16 *v_accel_y_s16)$/;"	f
bmi160_read_accel_z	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_accel_z(s16 *v_accel_z_s16)$/;"	f
bmi160_read_bmm150_mag_trim	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_bmm150_mag_trim(void)$/;"	f
bmi160_read_bst_akm_sensitivity_data	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_bst_akm_sensitivity_data(void)$/;"	f
bmi160_read_gyro_x	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_gyro_x(s16 *v_gyro_x_s16)$/;"	f
bmi160_read_gyro_xyz	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_gyro_xyz(struct bmi160_gyro_t *gyro)$/;"	f
bmi160_read_gyro_y	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_gyro_y(s16 *v_gyro_y_s16)$/;"	f
bmi160_read_gyro_z	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_gyro_z(s16 *v_gyro_z_s16)$/;"	f
bmi160_read_mag_r	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_mag_r(s16 *v_mag_r_s16)$/;"	f
bmi160_read_mag_x	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_mag_x(s16 *v_mag_x_s16,$/;"	f
bmi160_read_mag_xyz	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_mag_xyz($/;"	f
bmi160_read_mag_xyzr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_mag_xyzr($/;"	f
bmi160_read_mag_y	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_mag_y(s16 *v_mag_y_s16,$/;"	f
bmi160_read_mag_z	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_mag_z(s16 *v_mag_z_s16,$/;"	f
bmi160_read_reg	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_reg(u8 v_addr_u8,$/;"	f
bmi160_read_step_count	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_read_step_count(s16 *v_step_cnt_s16)$/;"	f
bmi160_selftest_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_selftest_show(struct device *dev,$/;"	f	file:
bmi160_selftest_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_selftest_store(struct device *dev,$/;"	f	file:
bmi160_sensor_time_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_sensor_time_show(struct device *dev,$/;"	f	file:
bmi160_set_acc_op_mode	bosch/bmi160_driver.c	/^static int bmi160_set_acc_op_mode(struct bmi_client_data *client_data,$/;"	f	file:
bmi160_set_accel_bw	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_accel_bw(u8 v_bw_u8)$/;"	f
bmi160_set_accel_fifo_filter_data	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_accel_fifo_filter_data($/;"	f
bmi160_set_accel_foc_trigger	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_accel_foc_trigger(u8 v_axis_u8,$/;"	f
bmi160_set_accel_offset_compensation_xaxis	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_accel_offset_compensation_xaxis($/;"	f
bmi160_set_accel_offset_compensation_yaxis	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_accel_offset_compensation_yaxis($/;"	f
bmi160_set_accel_offset_compensation_zaxis	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_accel_offset_compensation_zaxis($/;"	f
bmi160_set_accel_offset_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_accel_offset_enable($/;"	f
bmi160_set_accel_output_data_rate	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_accel_output_data_rate($/;"	f
bmi160_set_accel_range	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_accel_range(u8 v_range_u8)$/;"	f
bmi160_set_accel_selftest_amp	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_accel_selftest_amp($/;"	f
bmi160_set_accel_selftest_axis	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_accel_selftest_axis($/;"	f
bmi160_set_accel_selftest_sign	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_accel_selftest_sign($/;"	f
bmi160_set_accel_under_sampling_parameter	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_accel_under_sampling_parameter($/;"	f
bmi160_set_bmm150_mag_and_secondary_if_power_mode	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_bmm150_mag_and_secondary_if_power_mode($/;"	f
bmi160_set_bmm150_mag_presetmode	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_bmm150_mag_presetmode(u8 v_mode_u8)$/;"	f
bmi160_set_bst_akm_and_secondary_if_powermode	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_bst_akm_and_secondary_if_powermode($/;"	f
bmi160_set_command_register	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_command_register(u8 v_command_reg_u8)$/;"	f
bmi160_set_fifo_accel_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_fifo_accel_enable($/;"	f
bmi160_set_fifo_down_accel	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_fifo_down_accel($/;"	f
bmi160_set_fifo_down_gyro	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_fifo_down_gyro($/;"	f
bmi160_set_fifo_gyro_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_fifo_gyro_enable($/;"	f
bmi160_set_fifo_header_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_fifo_header_enable($/;"	f
bmi160_set_fifo_mag_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_fifo_mag_enable($/;"	f
bmi160_set_fifo_tag_intr1_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_fifo_tag_intr1_enable($/;"	f
bmi160_set_fifo_tag_intr2_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_fifo_tag_intr2_enable($/;"	f
bmi160_set_fifo_time_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_fifo_time_enable($/;"	f
bmi160_set_fifo_wm	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_fifo_wm($/;"	f
bmi160_set_foc_accel_x	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_foc_accel_x(u8 v_foc_accel_x_u8)$/;"	f
bmi160_set_foc_accel_y	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_foc_accel_y(u8 v_foc_accel_y_u8)$/;"	f
bmi160_set_foc_accel_z	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_foc_accel_z($/;"	f
bmi160_set_foc_gyro_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_foc_gyro_enable($/;"	f
bmi160_set_gyro_bw	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_gyro_bw(u8 v_bw_u8)$/;"	f
bmi160_set_gyro_fifo_filter_data	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_gyro_fifo_filter_data($/;"	f
bmi160_set_gyro_offset_compensation_xaxis	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_gyro_offset_compensation_xaxis($/;"	f
bmi160_set_gyro_offset_compensation_yaxis	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_gyro_offset_compensation_yaxis($/;"	f
bmi160_set_gyro_offset_compensation_zaxis	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_gyro_offset_compensation_zaxis($/;"	f
bmi160_set_gyro_offset_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_gyro_offset_enable($/;"	f
bmi160_set_gyro_output_data_rate	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_gyro_output_data_rate($/;"	f
bmi160_set_gyro_range	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_gyro_range(u8 v_range_u8)$/;"	f
bmi160_set_gyro_selftest_start	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_gyro_selftest_start($/;"	f
bmi160_set_gyro_sleep_state	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_gyro_sleep_state($/;"	f
bmi160_set_gyro_sleep_trigger	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_gyro_sleep_trigger($/;"	f
bmi160_set_gyro_wakeup_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_gyro_wakeup_intr($/;"	f
bmi160_set_gyro_wakeup_trigger	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_gyro_wakeup_trigger($/;"	f
bmi160_set_i2c_device_addr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_i2c_device_addr($/;"	f
bmi160_set_i2c_wdt_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_i2c_wdt_enable($/;"	f
bmi160_set_i2c_wdt_select	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_i2c_wdt_select($/;"	f
bmi160_set_if_mode	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_if_mode($/;"	f
bmi160_set_input_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_input_enable($/;"	f
bmi160_set_intr_any_motion	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_any_motion($/;"	f
bmi160_set_intr_any_motion_durn	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_any_motion_durn($/;"	f
bmi160_set_intr_any_motion_thres	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_any_motion_thres($/;"	f
bmi160_set_intr_data_rdy	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_data_rdy($/;"	f
bmi160_set_intr_double_tap	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_double_tap($/;"	f
bmi160_set_intr_edge_ctrl	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_edge_ctrl($/;"	f
bmi160_set_intr_enable_0	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_enable_0($/;"	f
bmi160_set_intr_enable_1	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_enable_1($/;"	f
bmi160_set_intr_enable_2	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_enable_2($/;"	f
bmi160_set_intr_fifo_full	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_fifo_full($/;"	f
bmi160_set_intr_fifo_wm	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_fifo_wm($/;"	f
bmi160_set_intr_flat	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_flat($/;"	f
bmi160_set_intr_flat_hold	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_flat_hold($/;"	f
bmi160_set_intr_flat_hyst	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_flat_hyst($/;"	f
bmi160_set_intr_flat_theta	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_flat_theta($/;"	f
bmi160_set_intr_high_g	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_high_g($/;"	f
bmi160_set_intr_high_g_durn	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_high_g_durn($/;"	f
bmi160_set_intr_high_g_hyst	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_high_g_hyst($/;"	f
bmi160_set_intr_high_g_thres	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_high_g_thres($/;"	f
bmi160_set_intr_level	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_level($/;"	f
bmi160_set_intr_low_g	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_low_g($/;"	f
bmi160_set_intr_low_g_durn	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_low_g_durn(u8 v_low_g_durn_u8)$/;"	f
bmi160_set_intr_low_g_hyst	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_low_g_hyst($/;"	f
bmi160_set_intr_low_g_mode	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_low_g_mode($/;"	f
bmi160_set_intr_low_g_thres	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_low_g_thres($/;"	f
bmi160_set_intr_low_high_source	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_low_high_source($/;"	f
bmi160_set_intr_motion_source	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_motion_source($/;"	f
bmi160_set_intr_nomotion	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_nomotion($/;"	f
bmi160_set_intr_orient	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_orient($/;"	f
bmi160_set_intr_orient_axes_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_orient_axes_enable($/;"	f
bmi160_set_intr_orient_blocking	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_orient_blocking($/;"	f
bmi160_set_intr_orient_hyst	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_orient_hyst($/;"	f
bmi160_set_intr_orient_mode	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_orient_mode($/;"	f
bmi160_set_intr_orient_theta	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_orient_theta($/;"	f
bmi160_set_intr_orient_ud_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_orient_ud_enable($/;"	f
bmi160_set_intr_output_type	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_output_type($/;"	f
bmi160_set_intr_pmu_trig	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_pmu_trig($/;"	f
bmi160_set_intr_significant_motion_proof	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_significant_motion_proof($/;"	f
bmi160_set_intr_significant_motion_select	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_significant_motion_select($/;"	f
bmi160_set_intr_significant_motion_skip	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_significant_motion_skip($/;"	f
bmi160_set_intr_single_tap	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_single_tap($/;"	f
bmi160_set_intr_slow_no_motion_durn	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_slow_no_motion_durn($/;"	f
bmi160_set_intr_slow_no_motion_select	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_slow_no_motion_select($/;"	f
bmi160_set_intr_slow_no_motion_thres	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_slow_no_motion_thres($/;"	f
bmi160_set_intr_tap_durn	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_tap_durn($/;"	f
bmi160_set_intr_tap_quiet	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_tap_quiet(u8 v_tap_quiet_u8)$/;"	f
bmi160_set_intr_tap_shock	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_tap_shock(u8 v_tap_shock_u8)$/;"	f
bmi160_set_intr_tap_source	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_tap_source($/;"	f
bmi160_set_intr_tap_thres	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_intr_tap_thres($/;"	f
bmi160_set_latch_intr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_latch_intr(u8 v_latch_intr_u8)$/;"	f
bmi160_set_mag_burst	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_mag_burst($/;"	f
bmi160_set_mag_interface_normal	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_mag_interface_normal(void)$/;"	f
bmi160_set_mag_manual_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_mag_manual_enable($/;"	f
bmi160_set_mag_offset	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_mag_offset($/;"	f
bmi160_set_mag_output_data_rate	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_mag_output_data_rate($/;"	f
bmi160_set_mag_read_addr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_mag_read_addr($/;"	f
bmi160_set_mag_write_addr	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_mag_write_addr($/;"	f
bmi160_set_mag_write_data	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_mag_write_data($/;"	f
bmi160_set_nvm_counter	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_nvm_counter($/;"	f
bmi160_set_nvm_prog_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_nvm_prog_enable($/;"	f
bmi160_set_output_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_output_enable($/;"	f
bmi160_set_paging_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_paging_enable($/;"	f
bmi160_set_pullup_configuration	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_pullup_configuration($/;"	f
bmi160_set_spare0_trim	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_spare0_trim(u8 v_spare0_trim_u8)$/;"	f
bmi160_set_spi3	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_spi3($/;"	f
bmi160_set_spi_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_spi_enable(u8 v_spi_enable_u8)$/;"	f
bmi160_set_step_config	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_step_config($/;"	f
bmi160_set_step_counter_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_step_counter_enable(u8 v_step_counter_u8)$/;"	f
bmi160_set_step_detector_enable	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_step_detector_enable($/;"	f
bmi160_set_step_mode	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_step_mode(u8 v_step_mode_u8)$/;"	f
bmi160_set_target_page	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_set_target_page(u8 v_target_page_u8)$/;"	f
bmi160_signification_motion_enable_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_signification_motion_enable_show($/;"	f	file:
bmi160_signification_motion_enable_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_signification_motion_enable_store($/;"	f	file:
bmi160_step_counter_clc_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_step_counter_clc_store(struct device *dev,$/;"	f	file:
bmi160_step_counter_enable_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_step_counter_enable_show(struct device *dev,$/;"	f	file:
bmi160_step_counter_enable_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_step_counter_enable_store(struct device *dev,$/;"	f	file:
bmi160_step_counter_mode_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_step_counter_mode_store(struct device *dev,$/;"	f	file:
bmi160_step_counter_value_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_step_counter_value_show(struct device *dev,$/;"	f	file:
bmi160_step_detector_enable_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_step_detector_enable_show(struct device *dev,$/;"	f	file:
bmi160_step_detector_enable_store	bosch/bmi160_driver.c	/^static ssize_t bmi160_step_detector_enable_store(struct device *dev,$/;"	f	file:
bmi160_step_detector_status_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_step_detector_status_show(struct device *dev,$/;"	f	file:
bmi160_store_info_t	bosch/bmi160_driver.c	/^struct bmi160_store_info_t {$/;"	s	file:
bmi160_t	bosch/bmi160.h	/^struct bmi160_t {$/;"	s
bmi160_temperature_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_temperature_show(struct device *dev,$/;"	f	file:
bmi160_test_show	bosch/bmi160_driver.c	/^static ssize_t bmi160_test_show(struct device *dev,$/;"	f	file:
bmi160_type_mapping_type	bosch/bmi160_driver.c	/^struct bmi160_type_mapping_type {$/;"	s	file:
bmi160_write_reg	bosch/bmi160.c	/^BMI160_RETURN_FUNCTION_TYPE bmi160_write_reg(u8 v_addr_u8,$/;"	f
bmi160mag_compensate_t	bosch/bmi160_driver.h	/^struct bmi160mag_compensate_t {$/;"	s
bmi_axis_name	bosch/bmi160_driver.c	/^static const char *bmi_axis_name[AXIS_MAX] = {"x", "y", "z"};$/;"	v	file:
bmi_burst_read_wrapper	bosch/bmi160_i2c.c	/^EXPORT_SYMBOL(bmi_burst_read_wrapper);$/;"	v
bmi_burst_read_wrapper	bosch/bmi160_i2c.c	/^s8 bmi_burst_read_wrapper(u8 dev_addr, u8 reg_addr, u8 *data, u16 len)$/;"	f
bmi_burst_read_wrapper	bosch/bmi160_spi.c	/^EXPORT_SYMBOL(bmi_burst_read_wrapper);$/;"	v
bmi_burst_read_wrapper	bosch/bmi160_spi.c	/^s8 bmi_burst_read_wrapper(u8 dev_addr, u8 reg_addr, u8 *data, u16 len)$/;"	f
bmi_check_chip_id	bosch/bmi160_driver.c	/^static int bmi_check_chip_id(struct bmi_client_data *client_data)$/;"	f	file:
bmi_client	bosch/bmi160_i2c.c	/^static struct i2c_client *bmi_client;$/;"	v	typeref:struct:i2c_client	file:
bmi_client_data	bosch/bmi160_driver.h	/^struct bmi_client_data {$/;"	s
bmi_delay	bosch/bmi160_driver.c	/^static void bmi_delay(u32 msec)$/;"	f	file:
bmi_dump_reg	bosch/bmi160_driver.c	/^static void bmi_dump_reg(struct bmi_client_data *client_data)$/;"	f	file:
bmi_enable_int_store	bosch/bmi160_driver.c	/^static ssize_t bmi_enable_int_store(struct device *dev,$/;"	f	file:
bmi_fifo_analysis_handle	bosch/bmi160_driver.c	/^static int bmi_fifo_analysis_handle(struct bmi_client_data *client_data,$/;"	f	file:
bmi_fifo_frame_bytes_extend_calc	bosch/bmi160_driver.c	/^static void bmi_fifo_frame_bytes_extend_calc($/;"	f	file:
bmi_fifo_watermark_interrupt_handle	bosch/bmi160_driver.c	/^static void bmi_fifo_watermark_interrupt_handle$/;"	f	file:
bmi_get_err_status	bosch/bmi160_driver.c	/^static int bmi_get_err_status(struct bmi_client_data *client_data)$/;"	f	file:
bmi_i2c_burst_read	bosch/bmi160_i2c.c	/^static s8 bmi_i2c_burst_read(struct i2c_client *client, u8 reg_addr,$/;"	f	file:
bmi_i2c_driver	bosch/bmi160_i2c.c	/^static struct i2c_driver bmi_i2c_driver = {$/;"	v	typeref:struct:i2c_driver	file:
bmi_i2c_probe	bosch/bmi160_i2c.c	/^static int bmi_i2c_probe(struct i2c_client *client,$/;"	f	file:
bmi_i2c_read	bosch/bmi160_i2c.c	/^static s8 bmi_i2c_read(struct i2c_client *client, u8 reg_addr,$/;"	f	file:
bmi_i2c_read_wrapper	bosch/bmi160_i2c.c	/^static s8 bmi_i2c_read_wrapper(u8 dev_addr, u8 reg_addr, u8 *data, u8 len)$/;"	f	file:
bmi_i2c_remove	bosch/bmi160_i2c.c	/^static int bmi_i2c_remove(struct i2c_client *client)$/;"	f	file:
bmi_i2c_resume	bosch/bmi160_i2c.c	/^static int bmi_i2c_resume(struct i2c_client *client)$/;"	f	file:
bmi_i2c_suspend	bosch/bmi160_i2c.c	/^static int bmi_i2c_suspend(struct i2c_client *client, pm_message_t mesg)$/;"	f	file:
bmi_i2c_write	bosch/bmi160_i2c.c	/^static s8 bmi_i2c_write(struct i2c_client *client, u8 reg_addr,$/;"	f	file:
bmi_i2c_write_wrapper	bosch/bmi160_i2c.c	/^static s8 bmi_i2c_write_wrapper(u8 dev_addr, u8 reg_addr, u8 *data, u8 len)$/;"	f	file:
bmi_id	bosch/bmi160_i2c.c	/^static const struct i2c_device_id bmi_id[] = {$/;"	v	typeref:struct:i2c_device_id	file:
bmi_id	bosch/bmi160_spi.c	/^static const struct spi_device_id bmi_id[] = {$/;"	v	typeref:struct:spi_device_id	file:
bmi_input_destroy	bosch/bmi160_driver.c	/^static void bmi_input_destroy(struct bmi_client_data *client_data)$/;"	f	file:
bmi_input_init	bosch/bmi160_driver.c	/^static int bmi_input_init(struct bmi_client_data *client_data)$/;"	f	file:
bmi_interrupt_type	bosch/bmi160_driver.c	/^static const int bmi_interrupt_type[] = {$/;"	v	file:
bmi_irq_handler	bosch/bmi160_driver.c	/^static irqreturn_t bmi_irq_handler(int irq, void *handle)$/;"	f	file:
bmi_irq_work_func	bosch/bmi160_driver.c	/^static void bmi_irq_work_func(struct work_struct *work)$/;"	f	file:
bmi_pmu_cmd_acc_arr	bosch/bmi160_driver.c	/^static const int bmi_pmu_cmd_acc_arr[BMI_ACC_PM_MAX] = {$/;"	v	file:
bmi_pmu_cmd_gyro_arr	bosch/bmi160_driver.c	/^static const int bmi_pmu_cmd_gyro_arr[BMI_GYRO_PM_MAX] = {$/;"	v	file:
bmi_pmu_cmd_mag_arr	bosch/bmi160_driver.c	/^static const int bmi_pmu_cmd_mag_arr[BMI_MAG_PM_MAX] = {$/;"	v	file:
bmi_pmu_set_suspend	bosch/bmi160_driver.c	/^static int bmi_pmu_set_suspend(struct bmi_client_data *client_data)$/;"	f	file:
bmi_post_resume	bosch/bmi160_driver.c	/^static int bmi_post_resume(struct bmi_client_data *client_data)$/;"	f	file:
bmi_probe	bosch/bmi160_driver.c	/^EXPORT_SYMBOL(bmi_probe);$/;"	v
bmi_probe	bosch/bmi160_driver.c	/^int bmi_probe(struct bmi_client_data *client_data, struct device *dev)$/;"	f
bmi_register_show	bosch/bmi160_driver.c	/^static ssize_t bmi_register_show(struct device *dev,$/;"	f	file:
bmi_register_store	bosch/bmi160_driver.c	/^static ssize_t bmi_register_store(struct device *dev,$/;"	f	file:
bmi_remap_data_acc	bosch/bmi160_driver.c	/^static void bmi_remap_data_acc(struct bmi_client_data *client_data,$/;"	f	file:
bmi_remap_data_gyro	bosch/bmi160_driver.c	/^static void bmi_remap_data_gyro(struct bmi_client_data *client_data,$/;"	f	file:
bmi_remap_sensor_data	bosch/bmi160_driver.c	/^static void bmi_remap_sensor_data(struct bmi160_axis_data_t *val,$/;"	f	file:
bmi_remove	bosch/bmi160_driver.c	/^EXPORT_SYMBOL(bmi_remove);$/;"	v
bmi_remove	bosch/bmi160_driver.c	/^int bmi_remove(struct device *dev)$/;"	f
bmi_resume	bosch/bmi160_driver.c	/^EXPORT_SYMBOL(bmi_resume);$/;"	v
bmi_resume	bosch/bmi160_driver.c	/^int bmi_resume(struct device *dev)$/;"	f
bmi_sensor_time_odr_tbl	bosch/bmi160_driver.c	/^struct bmi_sensor_time_odr_tbl {$/;"	s	file:
bmi_signification_motion_interrupt_handle	bosch/bmi160_driver.c	/^static void bmi_signification_motion_interrupt_handle($/;"	f	file:
bmi_slope_interrupt_handle	bosch/bmi160_driver.c	/^static void bmi_slope_interrupt_handle(struct bmi_client_data *client_data)$/;"	f	file:
bmi_spi_client	bosch/bmi160_spi.c	/^static struct spi_device *bmi_spi_client;$/;"	v	typeref:struct:spi_device	file:
bmi_spi_driver	bosch/bmi160_spi.c	/^static struct spi_driver bmi_spi_driver = {$/;"	v	typeref:struct:spi_driver	file:
bmi_spi_exit	bosch/bmi160_spi.c	/^module_exit(bmi_spi_exit);$/;"	v
bmi_spi_exit	bosch/bmi160_spi.c	/^static void __exit bmi_spi_exit(void)$/;"	f	file:
bmi_spi_init	bosch/bmi160_spi.c	/^module_init(bmi_spi_init);$/;"	v
bmi_spi_init	bosch/bmi160_spi.c	/^static int __init bmi_spi_init(void)$/;"	f	file:
bmi_spi_pm_ops	bosch/bmi160_spi.c	/^static const struct dev_pm_ops bmi_spi_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
bmi_spi_probe	bosch/bmi160_spi.c	/^static int bmi_spi_probe(struct spi_device *client)$/;"	f	file:
bmi_spi_read_block	bosch/bmi160_spi.c	/^static char bmi_spi_read_block(u8 dev_addr, u8 reg_addr, u8 *data, u8 len)$/;"	f	file:
bmi_spi_remove	bosch/bmi160_spi.c	/^static int bmi_spi_remove(struct spi_device *client)$/;"	f	file:
bmi_spi_resume	bosch/bmi160_spi.c	/^static int bmi_spi_resume(struct device *dev)$/;"	f	file:
bmi_spi_shutdown	bosch/bmi160_spi.c	/^static void bmi_spi_shutdown(struct spi_device *client)$/;"	f	file:
bmi_spi_suspend	bosch/bmi160_spi.c	/^static int bmi_spi_suspend(struct device *dev)$/;"	f	file:
bmi_spi_write_block	bosch/bmi160_spi.c	/^static char bmi_spi_write_block(u8 dev_addr, u8 reg_addr, u8 *data, u8 len)$/;"	f	file:
bmi_stepdetector_interrupt_handle	bosch/bmi160_driver.c	/^static void bmi_stepdetector_interrupt_handle($/;"	f	file:
bmi_suspend	bosch/bmi160_driver.c	/^EXPORT_SYMBOL(bmi_suspend);$/;"	v
bmi_suspend	bosch/bmi160_driver.c	/^int bmi_suspend(struct device *dev)$/;"	f
bmi_work_func	bosch/bmi160_driver.c	/^static void bmi_work_func(struct work_struct *work)$/;"	f	file:
bmm_attribute_group	akm09911.c	/^static struct attribute_group bmm_attribute_group = {$/;"	v	typeref:struct:attribute_group	file:
bmm_attributes	akm09911.c	/^static struct attribute *bmm_attributes[] = {$/;"	v	typeref:struct:attribute	file:
bmm_remap_sensor_data	akm09911.c	/^static void bmm_remap_sensor_data(struct akm0911_mdata_s16 *val,$/;"	f	file:
bosch_sensor_axis_remap	akm09911.c	/^struct bosch_sensor_axis_remap {$/;"	s	file:
bosch_sensor_axis_remap	bosch/bmi160_driver.h	/^struct bosch_sensor_axis_remap {$/;"	s
bosch_sensor_data	akm09911.c	/^struct bosch_sensor_data {$/;"	s	file:
bosch_sensor_data	bosch/bmi160_driver.h	/^struct bosch_sensor_data {$/;"	s
bosch_sensor_specific	akm09911.c	/^struct bosch_sensor_specific {$/;"	s	file:
bosch_sensor_specific	bosch/bmi160_driver.h	/^struct bosch_sensor_specific {$/;"	s
brightness_work	aw2013_led.c	/^	struct work_struct brightness_work;$/;"	m	struct:aw2013_led_data	typeref:struct:aw2013_led_data::work_struct	file:
bst_akm_sensitivity_data_t	bosch/bmi160.h	/^struct bst_akm_sensitivity_data_t {$/;"	s
bst_axis_remap_tab_dft	akm09911.c	/^bst_axis_remap_tab_dft[MAX_AXIS_REMAP_TAB_SZ] = {$/;"	v	typeref:struct:bosch_sensor_axis_remap	file:
bst_axis_remap_tab_dft	bosch/bmi160_driver.c	/^	bst_axis_remap_tab_dft[MAX_AXIS_REMAP_TAB_SZ] = {$/;"	v	typeref:struct:bosch_sensor_axis_remap	file:
bst_pd	akm09911.c	/^	struct bosch_sensor_specific *bst_pd;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::bosch_sensor_specific	file:
bst_pd	bosch/bmi160_driver.h	/^	struct bosch_sensor_specific *bst_pd;$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::bosch_sensor_specific
bst_remap_sensor_data	akm09911.c	/^static void bst_remap_sensor_data(struct bosch_sensor_data *data,$/;"	f	file:
bst_remap_sensor_data	bosch/bmi160_driver.c	/^static void bst_remap_sensor_data(struct bosch_sensor_data *data,$/;"	f	file:
bst_remap_sensor_data_dft_tab	akm09911.c	/^static void bst_remap_sensor_data_dft_tab(struct bosch_sensor_data *data,$/;"	f	file:
bst_remap_sensor_data_dft_tab	bosch/bmi160_driver.c	/^static void bst_remap_sensor_data_dft_tab(struct bosch_sensor_data *data,$/;"	f	file:
bst_yas532_calib_data_t	bosch/bmi160.h	/^struct bst_yas532_calib_data_t {$/;"	s
bst_yas537_calib_data_t	bosch/bmi160.h	/^struct bst_yas537_calib_data_t {$/;"	s
buffer	it7236_touchkey.c	/^	unsigned short buffer[MAX_BUFFER_SIZE];$/;"	m	struct:ioctl_cmd168	file:
bufferIndex	it7236_touchkey.c	/^	unsigned short bufferIndex;$/;"	m	struct:ioctl_cmd168	file:
calib_status	bosch/bmi160_driver.h	/^	unsigned char calib_status;$/;"	m	struct:bmi_client_data
calib_yas532	bosch/bmi160.h	/^struct bst_yas532_calib_data_t calib_yas532;\/**< calib data *\/$/;"	m	struct:yas532_t	typeref:struct:yas532_t::bst_yas532_calib_data_t
calib_yas537	bosch/bmi160.h	/^struct bst_yas537_calib_data_t calib_yas537;\/**< calib data *\/$/;"	m	struct:yas537_t	typeref:struct:yas537_t::bst_yas537_calib_data_t
calibrate_buf	ltr553.c	/^	char			calibrate_buf[CAL_BUF_LEN];$/;"	m	struct:ltr553_data	file:
cdev	akm09911.c	/^	struct sensors_classdev	cdev;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::sensors_classdev	file:
cdev	aw2013_led.c	/^	struct led_classdev cdev;$/;"	m	struct:aw2013_led_data	typeref:struct:aw2013_led_data::led_classdev	file:
ch0_coeff_f	ltr553.c	/^	int ch0_coeff_f;$/;"	m	struct:als_coeff	file:
ch0_coeff_i	ltr553.c	/^	int ch0_coeff_i;$/;"	m	struct:als_coeff	file:
ch1_coeff_f	ltr553.c	/^	int ch1_coeff_f;$/;"	m	struct:als_coeff	file:
ch1_coeff_i	ltr553.c	/^	int ch1_coeff_i;$/;"	m	struct:als_coeff	file:
chip_id	bosch/bmi160.h	/^u8 chip_id;\/**< chip id of BMI160 *\/$/;"	m	struct:bmi160_t
chip_id	bosch/bmi160_driver.c	/^	uint16_t chip_id;$/;"	m	struct:bmi160_type_mapping_type	file:
chip_id	bosch/bmi160_driver.h	/^	u8 chip_id;$/;"	m	struct:bmi_client_data
class_dev	akm09911.c	/^	struct device		*class_dev;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::device	file:
client	ga1auv100.c	/^  struct i2c_client     *client ;$/;"	m	struct:ga1a_data	typeref:struct:ga1a_data::i2c_client	file:
client	helix.c	/^	struct i2c_client *client;$/;"	m	struct:helix_data	typeref:struct:helix_data::i2c_client	file:
client	it7236_touchkey.h	/^	struct i2c_client *client;$/;"	m	struct:IT7236_ts_data	typeref:struct:IT7236_ts_data::i2c_client
code_threshold_table	helix.c	/^static uint16_t code_threshold_table[LUX_THD_TABLE_SIZE+1];$/;"	v	file:
coef	bosch/bmi160.h	/^s32 coef[3];\/**< co efficient data *\/$/;"	m	struct:yas532_t
coef	bosch/bmi160.h	/^s32 coef[3];\/**< co efficient data *\/$/;"	m	struct:yas537_t
compass	akm09911.c	/^	struct class		*compass;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::class	file:
config	ltr553.c	/^	struct regulator	*config;$/;"	m	struct:ltr553_data	typeref:struct:ltr553_data::regulator	file:
config_id	it7236_touchkey.c	/^static char config_id[10];$/;"	v	file:
create_device_attributes	akm09911.c	/^static int create_device_attributes($/;"	f	file:
create_device_binary_attributes	akm09911.c	/^static int create_device_binary_attributes($/;"	f	file:
create_sysfs_interfaces	akm09911.c	/^static int create_sysfs_interfaces(struct akm_compass_data *akm)$/;"	f	file:
crosstalk	helix.c	/^	unsigned int crosstalk;$/;"	m	struct:helix_data	file:
current_apts_us	bosch/bmi160_driver.c	/^	uint64_t current_apts_us[2];$/;"	m	struct:bmi160_store_info_t	file:
current_frm_cnt	bosch/bmi160_driver.c	/^	uint8_t current_frm_cnt;$/;"	m	struct:bmi160_store_info_t	file:
cx	bosch/bmi160.h	/^s32 cx;\/**<YAS532 calib cx data *\/$/;"	m	struct:bst_yas532_calib_data_t
cy1	bosch/bmi160.h	/^s32 cy1;\/**<YAS532 calib cy1 data *\/$/;"	m	struct:bst_yas532_calib_data_t
cy2	bosch/bmi160.h	/^s32 cy2;\/**<YAS532 calib cy2 data *\/$/;"	m	struct:bst_yas532_calib_data_t
data	nxu8010.c	/^	struct sensor_data data;$/;"	m	struct:nxu8010_info	typeref:struct:nxu8010_info::sensor_data	file:
data_alsclear	ga1auv100.c	/^  u32                   data_alsclear ;$/;"	m	struct:ga1a_data	file:
data_alsir	ga1auv100.c	/^  u32                   data_alsir ;$/;"	m	struct:ga1a_data	file:
data_b	nxu8010.c	/^	uint16_t data_b;$/;"	m	struct:sensor_data	file:
data_filter	helix.c	/^struct data_filter {$/;"	s	file:
data_g	nxu8010.c	/^	uint16_t data_g;$/;"	m	struct:sensor_data	file:
data_r	nxu8010.c	/^	uint16_t data_r;$/;"	m	struct:sensor_data	file:
data_uvclear	ga1auv100.c	/^  u32                   data_uvclear ;$/;"	m	struct:ga1a_data	file:
data_uvcut	ga1auv100.c	/^  u32                   data_uvcut ;$/;"	m	struct:ga1a_data	file:
data_w	nxu8010.c	/^	uint16_t data_w;$/;"	m	struct:sensor_data	file:
datax	akm09911.c	/^	s16 datax;$/;"	m	struct:akm0911_mdata_s16	file:
datay	akm09911.c	/^	s16 datay;$/;"	m	struct:akm0911_mdata_s16	file:
dataz	akm09911.c	/^	s16 dataz;$/;"	m	struct:akm0911_mdata_s16	file:
debug_log_level	it7236_touchkey.h	/^	uint8_t debug_log_level;$/;"	m	struct:IT7236_ts_data
delay	akm09911.c	/^	int64_t			delay[AKM_NUM_SENSORS];$/;"	m	struct:akm_compass_data	file:
delay	bosch/bmi160_driver.h	/^	atomic_t delay;$/;"	m	struct:bmi_client_data
delay_msec	bosch/bmi160.h	/^void (*delay_msec)(BMI160_MDELAY_DATA_TYPE);\/**< delay function pointer *\/$/;"	m	struct:bmi160_t
delay_work_cal	helix.c	/^	struct delayed_work	delay_work_cal;$/;"	m	struct:helix_data	typeref:struct:helix_data::delayed_work	file:
dev	bosch/bmi160_driver.h	/^	struct device *dev;$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::device
dev	ga1auv100.c	/^	struct device dev;$/;"	m	struct:ga1a_data	typeref:struct:ga1a_data::device	file:
dev_addr	bosch/bmi160.h	/^u8 dev_addr;\/**< device address of BMI160 *\/$/;"	m	struct:bmi160_t
dev_class	ga1auv100.c	/^  struct class          *dev_class ;$/;"	m	struct:ga1a_data	typeref:struct:ga1a_data::class	file:
dev_id	bosch/bmi160.h	/^u8 dev_id;\/**< device id information *\/$/;"	m	struct:yas532_t
dev_id	bosch/bmi160.h	/^u8 dev_id;\/**< device id information *\/$/;"	m	struct:yas537_t
device	bosch/bmi160_driver.h	/^	struct bmi160_t device;$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::bmi160_t
device_link_name	akm09911.c	/^static char const *const device_link_name = "i2c";$/;"	v	file:
device_mode_mutex	it7236_touchkey.h	/^	struct mutex device_mode_mutex;$/;"	m	struct:IT7236_ts_data	typeref:struct:IT7236_ts_data::mutex
dig_x1	bosch/bmi160.h	/^s8 dig_x1;\/**<BMM150 trim x1 data*\/$/;"	m	struct:trim_data_t
dig_x1	bosch/bmi160_driver.h	/^	signed char dig_x1;$/;"	m	struct:bmi160mag_compensate_t
dig_x2	bosch/bmi160.h	/^s8 dig_x2;\/**<BMM150 trim x2 data*\/$/;"	m	struct:trim_data_t
dig_x2	bosch/bmi160_driver.h	/^	signed char dig_x2;$/;"	m	struct:bmi160mag_compensate_t
dig_xy1	bosch/bmi160.h	/^u8 dig_xy1;\/**<BMM150 trim xy1 data*\/$/;"	m	struct:trim_data_t
dig_xy1	bosch/bmi160_driver.h	/^	unsigned char dig_xy1;$/;"	m	struct:bmi160mag_compensate_t
dig_xy2	bosch/bmi160.h	/^s8 dig_xy2;\/**<BMM150 trim xy2 data*\/$/;"	m	struct:trim_data_t
dig_xy2	bosch/bmi160_driver.h	/^	signed char dig_xy2;$/;"	m	struct:bmi160mag_compensate_t
dig_xyz1	bosch/bmi160.h	/^u16 dig_xyz1;\/**<BMM150 trim xyz1 data*\/$/;"	m	struct:trim_data_t
dig_xyz1	bosch/bmi160_driver.h	/^	u16 dig_xyz1;$/;"	m	struct:bmi160mag_compensate_t
dig_y1	bosch/bmi160.h	/^s8 dig_y1;\/**<BMM150 trim y1 data*\/$/;"	m	struct:trim_data_t
dig_y1	bosch/bmi160_driver.h	/^	signed char dig_y1;$/;"	m	struct:bmi160mag_compensate_t
dig_y2	bosch/bmi160.h	/^s8 dig_y2;\/**<BMM150 trim y2 data*\/$/;"	m	struct:trim_data_t
dig_y2	bosch/bmi160_driver.h	/^	signed char dig_y2;$/;"	m	struct:bmi160mag_compensate_t
dig_z1	bosch/bmi160.h	/^u16 dig_z1;\/**<BMM150 trim z1 data*\/$/;"	m	struct:trim_data_t
dig_z1	bosch/bmi160_driver.h	/^	u16 dig_z1;$/;"	m	struct:bmi160mag_compensate_t
dig_z2	bosch/bmi160.h	/^s16 dig_z2;\/**<BMM150 trim z2 data*\/$/;"	m	struct:trim_data_t
dig_z2	bosch/bmi160_driver.h	/^	s16 dig_z2;$/;"	m	struct:bmi160mag_compensate_t
dig_z3	bosch/bmi160.h	/^s16 dig_z3;\/**<BMM150 trim z3 data*\/$/;"	m	struct:trim_data_t
dig_z3	bosch/bmi160_driver.h	/^	s16 dig_z3;$/;"	m	struct:bmi160mag_compensate_t
dig_z4	bosch/bmi160.h	/^s16 dig_z4;\/**<BMM150 trim z4 data*\/$/;"	m	struct:trim_data_t
dig_z4	bosch/bmi160_driver.h	/^	s16 dig_z4;$/;"	m	struct:bmi160mag_compensate_t
drdy	akm09911.c	/^	atomic_t	drdy;$/;"	m	struct:akm_compass_data	file:
drdy	akm09911.c	/^	u16 drdy;$/;"	m	struct:akm0911_mdata_s16	file:
drdy_wq	akm09911.c	/^	wait_queue_head_t	drdy_wq;$/;"	m	struct:akm_compass_data	file:
drop_cmd	bosch/bmi160_driver.h	/^	u8 drop_cmd;$/;"	m	struct:err_status
dwork	akm09911.c	/^	struct delayed_work	dwork;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::delayed_work	file:
early_suspend_handler	bosch/bmi160_driver.h	/^	struct early_suspend early_suspend_handler;$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::early_suspend
enable	akm09911.c	/^	u8 enable:1;$/;"	m	struct:akm_compass_data	file:
enable_flag	akm09911.c	/^	uint32_t		enable_flag;$/;"	m	struct:akm_compass_data	file:
enable_gpio	it7236_touchkey.h	/^	u32 enable_gpio;$/;"	m	struct:IT7236_ts_data
enable_gpio_flags	it7236_touchkey.h	/^	u32 enable_gpio_flags;$/;"	m	struct:IT7236_ts_data
eqtn_map	ltr553.c	/^static struct als_coeff eqtn_map[] = {$/;"	v	typeref:struct:als_coeff	file:
err_code	bosch/bmi160_driver.h	/^	u8 err_code;$/;"	m	struct:err_status
err_st	bosch/bmi160_driver.h	/^	struct err_status err_st;$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::err_status
err_st_all	bosch/bmi160_driver.h	/^	u8 err_st_all;$/;"	m	struct:err_status
err_status	bosch/bmi160_driver.h	/^struct err_status {$/;"	s
fall_time_ms	aw2013_led.c	/^	int fall_time_ms;$/;"	m	struct:aw2013_platform_data	file:
fatal_err	bosch/bmi160_driver.h	/^	u8 fatal_err;$/;"	m	struct:err_status
fifo_bytecount	bosch/bmi160_driver.h	/^	u16 fifo_bytecount;$/;"	m	struct:bmi_client_data
fifo_data	bosch/bmi160_driver.h	/^	unsigned char *fifo_data;$/;"	m	struct:bmi_client_data
fifo_data_sel	bosch/bmi160_driver.h	/^	u8  fifo_data_sel;$/;"	m	struct:bmi_client_data
fifo_frame	bosch/bmi160_driver.h	/^	struct fifo_frame_t fifo_frame;$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::fifo_frame_t
fifo_frame_t	bosch/bmi160_driver.h	/^struct fifo_frame_t {$/;"	s
fifo_head_en	bosch/bmi160_driver.h	/^	u8 fifo_head_en;$/;"	m	struct:bmi_client_data
fifo_int_tag_en	bosch/bmi160_driver.h	/^	unsigned char fifo_int_tag_en;$/;"	m	struct:bmi_client_data
fifo_sensor_time_t	bosch/bmi160_driver.h	/^struct fifo_sensor_time_t {$/;"	s
fifo_time	bosch/bmi160_driver.c	/^	uint64_t fifo_time;$/;"	m	struct:bmi160_store_info_t	file:
fifo_time	bosch/bmi160_driver.h	/^	u64 fifo_time;$/;"	m	struct:bmi_client_data
fifo_ts_total_frmcnt	bosch/bmi160_driver.c	/^	uint8_t fifo_ts_total_frmcnt;$/;"	m	struct:bmi160_store_info_t	file:
fih_init	it7236_touchkey.c	/^static int fih_init(void)$/;"	f	file:
fir	helix.c	/^	struct data_filter      fir;$/;"	m	struct:helix_data	typeref:struct:helix_data::data_filter	file:
firlength	helix.c	/^	atomic_t                firlength;$/;"	m	struct:helix_data	file:
firmware_name_show	it7236_touchkey.c	/^static ssize_t firmware_name_show(struct device *dev, struct device_attribute *attr, char *buf)$/;"	f	file:
firmware_name_store	it7236_touchkey.c	/^static ssize_t firmware_name_store(struct device *dev,$/;"	f	file:
flush_count	ltr553.c	/^	int			flush_count;$/;"	m	struct:ltr553_data	file:
fnFirmwareReinitialize	it7236_touchkey.c	/^static bool fnFirmwareReinitialize(void)$/;"	f	file:
ft_init_delay_work_func	it7236_touchkey.c	/^static void ft_init_delay_work_func(struct work_struct *work)$/;"	f	file:
ft_init_delaywork_proc	it7236_touchkey.c	/^u8 ft_init_delaywork_proc(struct IT7236_ts_data *ts)$/;"	f
fw_upgrade_success	it7236_touchkey.c	/^static int fw_upgrade_success = 0;$/;"	v	file:
fxy1y2	bosch/bmi160.h	/^u8 fxy1y2[3];\/**<YAS532 calib fxy1y2 data *\/$/;"	m	struct:bst_yas532_calib_data_t
g_current_apts_us	bosch/bmi160_driver.c	/^uint64_t g_current_apts_us;$/;"	v
g_fifo_data_arr	bosch/bmi160_driver.c	/^static unsigned char g_fifo_data_arr[2048];\/*1024 + 12*4*\/$/;"	v	file:
ga1a_change_operation	ga1auv100.c	/^static void ga1a_change_operation( struct ga1a_data *data )$/;"	f	file:
ga1a_data	ga1auv100.c	/^struct ga1a_data$/;"	s	file:
ga1a_device_id	ga1auv100.c	/^static const struct i2c_device_id ga1a_device_id[] =$/;"	v	typeref:struct:i2c_device_id	file:
ga1a_driver	ga1auv100.c	/^static struct platform_driver ga1a_driver = {$/;"	v	typeref:struct:platform_driver	file:
ga1a_dt_match	ga1auv100.c	/^static const struct of_device_id ga1a_dt_match[] = {$/;"	v	typeref:struct:of_device_id	file:
ga1a_i2c_driver	ga1auv100.c	/^static struct i2c_driver ga1a_i2c_driver =$/;"	v	typeref:struct:i2c_driver	file:
ga1a_i2c_dt_match	ga1auv100.c	/^static const struct of_device_id  ga1a_i2c_dt_match[] = {$/;"	v	typeref:struct:of_device_id	file:
ga1a_i2c_init	ga1auv100.c	/^static int ga1a_i2c_init( void )$/;"	f	file:
ga1a_i2c_probe	ga1auv100.c	/^static int ga1a_i2c_probe( struct i2c_client *client, const struct i2c_device_id *id )$/;"	f	file:
ga1a_i2c_read	ga1auv100.c	/^static int ga1a_i2c_read( u8 reg, unsigned char *rbuf, int len, struct i2c_client *client )$/;"	f	file:
ga1a_i2c_remove	ga1auv100.c	/^static int ga1a_i2c_remove( struct i2c_client *client )$/;"	f	file:
ga1a_i2c_write	ga1auv100.c	/^static int ga1a_i2c_write( u8 reg, u8 *wbuf, struct i2c_client *client )$/;"	f	file:
ga1a_init_reg_als	ga1auv100.c	/^static u8 ga1a_init_reg_als[4] = {$/;"	v	file:
ga1a_init_reg_uv	ga1auv100.c	/^static u8 ga1a_init_reg_uv[4] = {$/;"	v	file:
ga1a_module_exit	ga1auv100.c	/^module_exit( ga1a_module_exit ) ;$/;"	v
ga1a_module_exit	ga1auv100.c	/^static void __exit ga1a_module_exit( void )$/;"	f	file:
ga1a_module_init	ga1auv100.c	/^module_init( ga1a_module_init ) ;$/;"	v
ga1a_module_init	ga1auv100.c	/^static int __init ga1a_module_init( void )$/;"	f	file:
ga1a_probe	ga1auv100.c	/^static int ga1a_probe( struct platform_device *pdev )$/;"	f	file:
ga1a_reg_show	ga1auv100.c	/^ga1a_reg_show( struct class *class,$/;"	f	file:
ga1a_reg_store	ga1auv100.c	/^ga1a_reg_store( struct class *class,$/;"	f	file:
ga1a_remove	ga1auv100.c	/^ga1a_remove( struct platform_device *pdev )$/;"	f	file:
ga1a_resume	ga1auv100.c	/^ga1a_resume( struct platform_device *pdev )$/;"	f	file:
ga1a_shutdown	ga1auv100.c	/^ga1a_shutdown( struct platform_device *pdev )$/;"	f	file:
ga1a_suspend	ga1auv100.c	/^ga1a_suspend( struct platform_device *pdev, pm_message_t state )$/;"	f	file:
ga1auv100_platform_data	ga1auv100.h	/^struct ga1auv100_platform_data$/;"	s
get_config_ver	it7236_touchkey.c	/^static int get_config_ver(void)$/;"	f	file:
get_current_timestamp	bosch/bmi160_driver.c	/^uint64_t get_current_timestamp(void)$/;"	f
get_firmware_ver	it7236_touchkey.c	/^static u32 get_firmware_ver(void)$/;"	f	file:
get_sensor_data	nxu8010.c	/^static int get_sensor_data(struct nxu8010_info *sinfo)$/;"	f	file:
gl_data	aw2013_led.c	/^struct aw2013_led_data *gl_data;$/;"	v	typeref:struct:aw2013_led_data
gl_hall_data	hall_sensor.c	/^struct hall_data *gl_hall_data;$/;"	v	typeref:struct:hall_data
gl_helix_data	helix.c	/^struct helix_data *gl_helix_data;$/;"	v	typeref:struct:helix_data
gl_ts	it7236_touchkey.h	/^static struct IT7236_ts_data *gl_ts;$/;"	v	typeref:struct:IT7236_ts_data
gold_sample	it7236_touchkey.h	/^	const char *gold_sample;$/;"	m	struct:IT7236_ts_data
gold_sample_size	it7236_touchkey.h	/^	int gold_sample_size;$/;"	m	struct:IT7236_ts_data
gpio	hall_sensor.c	/^	int gpio;	\/* device use gpio number *\/$/;"	m	struct:hall_data	file:
gpio_DRDY	akm09911.h	/^	int gpio_DRDY;$/;"	m	struct:akm09911_platform_data
gpio_RSTN	akm09911.h	/^	int gpio_RSTN;$/;"	m	struct:akm09911_platform_data
gpio_pin	bosch/bmi160_driver.h	/^	uint16_t gpio_pin;$/;"	m	struct:bmi_client_data
gpio_rstn	akm09911.c	/^	int	gpio_rstn;$/;"	m	struct:akm_compass_data	file:
gyro_farr	bosch/bmi160_driver.h	/^	struct bmi160_gyro_t *gyro_farr;$/;"	m	struct:fifo_frame_t	typeref:struct:fifo_frame_t::bmi160_gyro_t
gyro_frame_cnt	bosch/bmi160_driver.h	/^	unsigned char gyro_frame_cnt;$/;"	m	struct:fifo_frame_t
gyro_lastf_ts	bosch/bmi160_driver.h	/^	u32 gyro_lastf_ts;$/;"	m	struct:fifo_frame_t
gyro_odr	bosch/bmi160_driver.h	/^	u8 gyro_odr;$/;"	m	struct:odr_t
gyro_pm	bosch/bmi160_driver.h	/^	u8 gyro_pm;$/;"	m	struct:pw_mode
gyro_range	bosch/bmi160_driver.h	/^	u8 gyro_range;$/;"	m	struct:range_t
gyro_ts	bosch/bmi160_driver.h	/^	u32 gyro_ts;$/;"	m	struct:fifo_sensor_time_t
hall_attr_group	hall_sensor.c	/^static const struct attribute_group hall_attr_group = {$/;"	v	typeref:struct:attribute_group	file:
hall_attributes	hall_sensor.c	/^static struct attribute *hall_attributes[] = {$/;"	v	typeref:struct:attribute	file:
hall_config_regulator	hall_sensor.c	/^static int hall_config_regulator(struct platform_device *dev, bool on)$/;"	f	file:
hall_data	hall_sensor.c	/^struct hall_data {$/;"	s	file:
hall_dev	hall_sensor.c	/^	struct input_dev *hall_dev;$/;"	m	struct:hall_data	typeref:struct:hall_data::input_dev	file:
hall_driver	hall_sensor.c	/^static struct platform_driver hall_driver = {$/;"	v	typeref:struct:platform_driver	file:
hall_driver_probe	hall_sensor.c	/^static int hall_driver_probe(struct platform_device *dev)$/;"	f	file:
hall_driver_remove	hall_sensor.c	/^static int hall_driver_remove(struct platform_device *dev)$/;"	f	file:
hall_exit	hall_sensor.c	/^module_exit(hall_exit);$/;"	v
hall_exit	hall_sensor.c	/^static void __exit hall_exit(void)$/;"	f	file:
hall_id	hall_sensor.c	/^static struct platform_device_id hall_id[] = {$/;"	v	typeref:struct:platform_device_id	file:
hall_init	hall_sensor.c	/^module_init(hall_init);$/;"	v
hall_init	hall_sensor.c	/^static int __init hall_init(void)$/;"	f	file:
hall_input_init	hall_sensor.c	/^static int hall_input_init(struct platform_device *pdev,$/;"	f	file:
hall_interrupt_handler	hall_sensor.c	/^static irqreturn_t hall_interrupt_handler(int irq, void *dev)$/;"	f	file:
hall_match_table	hall_sensor.c	/^static struct of_device_id hall_match_table[] = {$/;"	v	typeref:struct:of_device_id	file:
hall_parse_dt	hall_sensor.c	/^static int hall_parse_dt(struct device *dev, struct hall_data *data)$/;"	f	file:
hall_set_regulator	hall_sensor.c	/^static int hall_set_regulator(struct platform_device *dev, bool on)$/;"	f	file:
hall_status	hall_sensor.c	/^	bool hall_status;$/;"	m	struct:hall_data	file:
hall_status_show	hall_sensor.c	/^static ssize_t hall_status_show(struct device *dev, struct device_attribute *attr, char * buf)$/;"	f	file:
hall_status_store	hall_sensor.c	/^static ssize_t hall_status_store(struct device *dev, struct device_attribute *attr,const char *buf,size_t len)$/;"	f	file:
hard_offset	bosch/bmi160.h	/^s8 hard_offset[3];\/**< offset write array*\/$/;"	m	struct:yas537_t
helix_check_clear_interrupt	helix.c	/^static unsigned int helix_check_clear_interrupt(struct helix_data *client)$/;"	f	file:
helix_check_pid	helix.c	/^static int32_t helix_check_pid(struct helix_data *client)$/;"	f	file:
helix_data	helix.c	/^struct helix_data {$/;"	s	file:
helix_delay_work_func	helix.c	/^static void helix_delay_work_func(struct work_struct *work)$/;"	f	file:
helix_device_ctl	helix.c	/^static int helix_device_ctl(struct helix_data *client, bool enable)$/;"	f	file:
helix_early_suspend	helix.c	/^static void helix_early_suspend(struct early_suspend *h)$/;"	f	file:
helix_enable_als	helix.c	/^static int32_t helix_enable_als(struct helix_data *client, uint8_t enable)$/;"	f	file:
helix_enable_ps	helix.c	/^static int32_t helix_enable_ps(struct i2c_client *client, uint8_t enable)$/;"	f	file:
helix_exit	helix.c	/^module_exit(helix_exit);$/;"	v
helix_exit	helix.c	/^static void __exit helix_exit(void)$/;"	f	file:
helix_get_als_reading	helix.c	/^static inline int32_t helix_get_als_reading(struct helix_data *client)$/;"	f	file:
helix_get_ps_reading	helix.c	/^static inline uint32_t helix_get_ps_reading(struct helix_data *client)$/;"	f	file:
helix_init	helix.c	/^module_init(helix_init);$/;"	v
helix_init	helix.c	/^static int __init helix_init(void)$/;"	f	file:
helix_init_all_reg	helix.c	/^static int32_t helix_init_all_reg(struct i2c_client *client, struct helix_platform_data *plat_data)$/;"	f	file:
helix_init_all_setting	helix.c	/^static int32_t helix_init_all_setting(struct i2c_client *client, struct helix_platform_data *plat_data)$/;"	f	file:
helix_init_fir	helix.c	/^static inline void helix_init_fir(struct helix_data *client)$/;"	f	file:
helix_late_resume	helix.c	/^static void helix_late_resume(struct early_suspend *h)$/;"	f	file:
helix_parse_dt	helix.c	/^static int helix_parse_dt(struct device *dev,$/;"	f	file:
helix_platform_data	helix.h	/^struct helix_platform_data {$/;"	s
helix_pm_ops	helix.c	/^static const struct  dev_pm_ops helix_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
helix_power_ctl	helix.c	/^static int helix_power_ctl(struct helix_data *data, bool on)$/;"	f	file:
helix_power_init	helix.c	/^static int helix_power_init(struct helix_data *data, bool on)$/;"	f	file:
helix_probe	helix.c	/^static int helix_probe(struct i2c_client *client,$/;"	f	file:
helix_ps_is_near	helix.c	/^EXPORT_SYMBOL_GPL(helix_ps_is_near);$/;"	v
helix_ps_is_near	helix.c	/^bool helix_ps_is_near(void)$/;"	f
helix_read_alsch0	helix.c	/^static int helix_read_alsch0(struct i2c_client *client)$/;"	f	file:
helix_read_alsch1	helix.c	/^static int helix_read_alsch1(struct i2c_client *client)$/;"	f	file:
helix_read_ps	helix.c	/^static uint32_t helix_read_ps(struct i2c_client *client)$/;"	f	file:
helix_read_ps_val	helix.c	/^unsigned int helix_read_ps_val(struct helix_data *data)$/;"	f
helix_remove	helix.c	/^static int helix_remove(struct i2c_client *client)$/;"	f	file:
helix_resume	helix.c	/^static int helix_resume(struct device *dev)$/;"	f	file:
helix_run_crosstalk_calibration	helix.c	/^static unsigned int helix_run_crosstalk_calibration(struct i2c_client *client)$/;"	f	file:
helix_run_crosstalk_calibration_delay	helix.c	/^static unsigned int helix_run_crosstalk_calibration_delay(struct i2c_client *client)$/;"	f	file:
helix_set_ps_thd_h	helix.c	/^static int32_t helix_set_ps_thd_h(struct i2c_client *client, uint16_t thdHigh)$/;"	f	file:
helix_set_ps_thd_l	helix.c	/^static int32_t helix_set_ps_thd_l(struct i2c_client *client, uint16_t thdLow)$/;"	f	file:
helix_setup_irq	helix.c	/^static int helix_setup_irq(struct i2c_client *client)$/;"	f	file:
helix_software_reset	helix.c	/^static int32_t helix_software_reset(struct i2c_client *client)$/;"	f	file:
helix_suspend	helix.c	/^static int helix_suspend(struct device *dev)$/;"	f	file:
helix_swap	helix.c	/^void helix_swap(int *x, int *y)$/;"	f
hold_time_ms	aw2013_led.c	/^	int hold_time_ms;$/;"	m	struct:aw2013_platform_data	file:
i2c	akm09911.c	/^	struct i2c_client	*i2c;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::i2c_client	file:
i2c	aw2013_led.c	/^	struct i2c_client *i2c;$/;"	m	struct:aw2013_led_data	typeref:struct:aw2013_led_data::i2c_client	file:
i2c	ltr553.c	/^	struct i2c_client	*i2c;$/;"	m	struct:ltr553_data	typeref:struct:ltr553_data::i2c_client	file:
i2c	nxu8010.c	/^	struct i2c_client	*i2c;$/;"	m	struct:nxu8010_info	typeref:struct:nxu8010_info::i2c_client	file:
i2cAdvancedReadFromIt7236	it7236_touchkey.c	/^static int i2cAdvancedReadFromIt7236(struct i2c_client *client, unsigned char bufferIndex, unsigned char dataBuffer[], unsigned short dataLength)$/;"	f	file:
i2cAdvancedWriteToIt7236	it7236_touchkey.c	/^static int i2cAdvancedWriteToIt7236(struct i2c_client *client, unsigned char bufferIndex, unsigned char const dataBuffer[], unsigned short dataLength)$/;"	f	file:
i2cReadFromIt7280	it7236_touchkey.c	/^static int i2cReadFromIt7280(struct i2c_client *client, unsigned char bufferIndex, unsigned char dataBuffer[], unsigned short dataLength)$/;"	f	file:
i2cWriteToIt7280	it7236_touchkey.c	/^static int i2cWriteToIt7280(struct i2c_client *client, unsigned char bufferIndex, unsigned char const dataBuffer[], unsigned short dataLength)$/;"	f	file:
i2c_fail	bosch/bmi160_driver.h	/^	u8 i2c_fail;$/;"	m	struct:err_status
id	aw2013_led.c	/^	int id;$/;"	m	struct:aw2013_led_data	file:
idx	bosch/bmi160.h	/^u8 idx;\/**< used for increment the index *\/$/;"	m	struct:yas_temp_filter_t
idx	helix.c	/^	int idx;$/;"	m	struct:data_filter	file:
init_array	nxu8010.c	/^struct init_array{$/;"	s	file:
input	akm09911.c	/^	struct input_dev	*input;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::input_dev	file:
input	bosch/bmi160_driver.h	/^	struct input_dev *input;$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::input_dev
input_dev	it7236_touchkey.c	/^static struct input_dev *input_dev;$/;"	v	typeref:struct:input_dev	file:
input_dev	it7236_touchkey.h	/^	struct input_dev *input_dev;$/;"	m	struct:IT7236_ts_data	typeref:struct:IT7236_ts_data::input_dev
input_light	ltr553.c	/^	struct input_dev	*input_light;$/;"	m	struct:ltr553_data	typeref:struct:ltr553_data::input_dev	file:
input_proximity	ltr553.c	/^	struct input_dev	*input_proximity;$/;"	m	struct:ltr553_data	typeref:struct:ltr553_data::input_dev	file:
int_flags	helix.h	/^	uint32_t int_flags;$/;"	m	struct:helix_platform_data
int_pin	helix.c	/^	int		int_pin;$/;"	m	struct:helix_data	file:
int_pin	helix.h	/^	int int_pin;$/;"	m	struct:helix_platform_data
invalid_magnetic_field	bosch/bmi160.c	/^static BMI160_RETURN_FUNCTION_TYPE invalid_magnetic_field($/;"	f	file:
io_lock	helix.c	/^	struct mutex io_lock;$/;"	m	struct:helix_data	typeref:struct:helix_data::mutex	file:
ioctl_cmd168	it7236_touchkey.c	/^struct ioctl_cmd168 {$/;"	s	file:
irq	akm09911.c	/^	int	irq;$/;"	m	struct:akm_compass_data	file:
irq	akm09911.c	/^	int irq;$/;"	m	struct:bosch_sensor_specific	file:
irq	bosch/bmi160_driver.h	/^	int irq;$/;"	m	struct:bosch_sensor_specific
irq	hall_sensor.c	/^	int irq;	\/* device request irq number *\/$/;"	m	struct:hall_data	file:
irq	helix.c	/^    int32_t irq;$/;"	m	struct:helix_data	file:
irq	ltr553.c	/^	int			irq;$/;"	m	struct:ltr553_data	file:
irq_flags	ltr553.c	/^	u32			irq_flags;$/;"	m	struct:ltr553_data	file:
irq_gpio	it7236_touchkey.h	/^	u32 irq_gpio;$/;"	m	struct:IT7236_ts_data
irq_gpio	ltr553.c	/^	int			irq_gpio;$/;"	m	struct:ltr553_data	file:
irq_gpio_cfg	bosch/bmi160_driver.h	/^	int (*irq_gpio_cfg)(void);$/;"	m	struct:bosch_sensor_specific
irq_gpio_flags	it7236_touchkey.h	/^	u32 irq_gpio_flags;$/;"	m	struct:IT7236_ts_data
irq_work	bosch/bmi160_driver.h	/^	struct work_struct irq_work;$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::work_struct
irqflags	it7236_touchkey.h	/^	u32 irqflags;$/;"	m	struct:IT7236_ts_data
is_busy	akm09911.c	/^	int8_t	is_busy;$/;"	m	struct:akm_compass_data	file:
is_valid_offset	bosch/bmi160.h	972;"	d
it7236_delay_work	it7236_touchkey.h	/^	struct delayed_work it7236_delay_work;$/;"	m	struct:IT7236_ts_data	typeref:struct:IT7236_ts_data::delayed_work
it7236_fw_name	it7236_touchkey.c	/^static char it7236_fw_name[256] = "IT7236_FW";$/;"	v	file:
it7236_match_table	it7236_touchkey.c	/^static struct of_device_id it7236_match_table[] = {$/;"	v	typeref:struct:of_device_id	file:
it7236_pm_ops	it7236_touchkey.c	/^static const struct dev_pm_ops it7236_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
it7236_upgrade	it7236_touchkey.c	/^static int it7236_upgrade(u8* InputBuffer, int fileSize)$/;"	f	file:
it7280_attr_group	it7236_touchkey.c	/^static const struct attribute_group it7280_attr_group = {$/;"	v	typeref:struct:attribute_group	file:
it7280_attributes	it7236_touchkey.c	/^static struct attribute *it7280_attributes[] = {$/;"	v	typeref:struct:attribute	file:
it7280_parse_dt	it7236_touchkey.c	/^static int it7280_parse_dt(struct device *dev,$/;"	f	file:
it7280_power_init	it7236_touchkey.c	/^static int it7280_power_init(struct IT7236_ts_data *data, bool on)$/;"	f	file:
it7280_power_on	it7236_touchkey.c	/^static int it7280_power_on(struct IT7236_ts_data *data, bool on)$/;"	f	file:
ite7236_fops	it7236_touchkey.c	/^struct file_operations ite7236_fops = {$/;"	v	typeref:struct:file_operations
ite7236_ioctl	it7236_touchkey.c	/^static long ite7236_ioctl(struct file *filp, unsigned int cmd,unsigned long arg)$/;"	f	file:
ite7280_cdev	it7236_touchkey.c	/^static struct cdev ite7280_cdev;$/;"	v	typeref:struct:cdev	file:
ite7280_class	it7236_touchkey.c	/^static struct class *ite7280_class = NULL;$/;"	v	typeref:struct:class	file:
ite7280_close	it7236_touchkey.c	/^static int ite7280_close(struct inode *inode, struct file *filp)$/;"	f	file:
ite7280_dev	it7236_touchkey.c	/^static dev_t ite7280_dev;$/;"	v	file:
ite7280_major	it7236_touchkey.c	/^static int ite7280_major = 0;	\/\/ dynamic major by default$/;"	v	file:
ite7280_minor	it7236_touchkey.c	/^static int ite7280_minor = 0;$/;"	v	file:
ite7280_open	it7236_touchkey.c	/^static int ite7280_open(struct inode *inode, struct file *filp)$/;"	f	file:
k	bosch/bmi160.h	/^s32 k;\/**<YAS532 calib k data *\/$/;"	m	struct:bst_yas532_calib_data_t
k	bosch/bmi160.h	/^u8 k;\/**<YAS532 calib k data *\/$/;"	m	struct:bst_yas537_calib_data_t
last_after_rcoil	bosch/bmi160.h	/^u16 last_after_rcoil[3];\/**< rcoil write array*\/$/;"	m	struct:yas537_t
last_als	ltr553.c	/^	int			last_als;$/;"	m	struct:ltr553_data	file:
last_als_ts	ltr553.c	/^	ktime_t			last_als_ts;$/;"	m	struct:ltr553_data	file:
last_ps	ltr553.c	/^	int			last_ps;$/;"	m	struct:ltr553_data	file:
last_ps_ts	ltr553.c	/^	ktime_t			last_ps_ts;$/;"	m	struct:ltr553_data	file:
last_raw	bosch/bmi160.h	/^u16 last_raw[4];\/**< raw data *\/$/;"	m	struct:yas532_t
last_raw	bosch/bmi160.h	/^u16 last_raw[4];\/**< raw data *\/$/;"	m	struct:yas537_t
last_step_counter_value	bosch/bmi160_driver.h	/^	u_int32_t last_step_counter_value;$/;"	m	struct:pedometer_data_t
last_x	akm09911.c	/^	int	last_x;$/;"	m	struct:akm_compass_data	file:
last_y	akm09911.c	/^	int	last_y;$/;"	m	struct:akm_compass_data	file:
last_z	akm09911.c	/^	int	last_z;$/;"	m	struct:akm_compass_data	file:
layout	akm09911.c	/^	char	layout;$/;"	m	struct:akm_compass_data	file:
layout	akm09911.h	/^	char layout;$/;"	m	struct:akm09911_platform_data
led_status	aw2013_led.c	/^	int led_status;$/;"	m	struct:aw2013_led_data	file:
ledctrl_reg	helix.h	/^	uint8_t ledctrl_reg;$/;"	m	struct:helix_platform_data
length	it7236_touchkey.c	/^	unsigned short length;$/;"	m	struct:ioctl_cmd168	file:
light_cdev	helix.c	/^static struct sensors_classdev light_cdev = {$/;"	v	typeref:struct:sensors_classdev	file:
lock	aw2013_led.c	/^	struct mutex lock;$/;"	m	struct:aw2013_led_data	typeref:struct:aw2013_led_data::mutex	file:
lock	nxu8010.c	/^	struct mutex lock;$/;"	m	struct:nxu8010_info	typeref:struct:nxu8010_info::mutex	file:
log	bosch/bmi160.h	/^u16 log[YAS532_MAG_TEMPERATURE_LOG];\/**<YAS532 temp log array *\/$/;"	m	struct:yas_temp_filter_t
ltr553_als_disable_work	ltr553.c	/^static void ltr553_als_disable_work(struct work_struct *work)$/;"	f	file:
ltr553_als_enable_work	ltr553.c	/^static void ltr553_als_enable_work(struct work_struct *work)$/;"	f	file:
ltr553_als_sync_delay	ltr553.c	/^static int ltr553_als_sync_delay(struct ltr553_data *ltr,$/;"	f	file:
ltr553_als_update_setting	ltr553.c	/^static int ltr553_als_update_setting(struct ltr553_data *ltr,$/;"	f	file:
ltr553_attr	ltr553.c	/^static struct attribute *ltr553_attr[] = {$/;"	v	typeref:struct:attribute	file:
ltr553_attr_group	ltr553.c	/^static const struct attribute_group ltr553_attr_group = {$/;"	v	typeref:struct:attribute_group	file:
ltr553_calc_adc	ltr553.c	/^static int ltr553_calc_adc(int ratio, int lux, int gain, int als_int_fac)$/;"	f	file:
ltr553_calc_lux	ltr553.c	/^static int ltr553_calc_lux(int ch0data, int ch1data, int gain, int als_int_fac)$/;"	f	file:
ltr553_cdev_als_flush	ltr553.c	/^static int ltr553_cdev_als_flush(struct sensors_classdev *sensors_cdev)$/;"	f	file:
ltr553_cdev_enable_als	ltr553.c	/^static int ltr553_cdev_enable_als(struct sensors_classdev *sensors_cdev,$/;"	f	file:
ltr553_cdev_enable_ps	ltr553.c	/^static int ltr553_cdev_enable_ps(struct sensors_classdev *sensors_cdev,$/;"	f	file:
ltr553_cdev_ps_calibrate	ltr553.c	/^static int ltr553_cdev_ps_calibrate(struct sensors_classdev *sensors_cdev,$/;"	f	file:
ltr553_cdev_ps_flush	ltr553.c	/^static int ltr553_cdev_ps_flush(struct sensors_classdev *sensors_cdev)$/;"	f	file:
ltr553_cdev_ps_write_cal	ltr553.c	/^static int ltr553_cdev_ps_write_cal(struct sensors_classdev *sensors_cdev,$/;"	f	file:
ltr553_cdev_set_als_delay	ltr553.c	/^static int ltr553_cdev_set_als_delay(struct sensors_classdev *sensors_cdev,$/;"	f	file:
ltr553_cdev_set_ps_delay	ltr553.c	/^static int ltr553_cdev_set_ps_delay(struct sensors_classdev *sensors_cdev,$/;"	f	file:
ltr553_check_device	ltr553.c	/^static int ltr553_check_device(struct ltr553_data *ltr)$/;"	f	file:
ltr553_data	ltr553.c	/^struct ltr553_data {$/;"	s	file:
ltr553_driver	ltr553.c	/^module_i2c_driver(ltr553_driver);$/;"	v
ltr553_driver	ltr553.c	/^static struct i2c_driver ltr553_driver = {$/;"	v	typeref:struct:i2c_driver	file:
ltr553_enable_als	ltr553.c	/^static int ltr553_enable_als(struct ltr553_data *ltr, int enable)$/;"	f	file:
ltr553_enable_ps	ltr553.c	/^static int ltr553_enable_ps(struct ltr553_data *ltr, int enable)$/;"	f	file:
ltr553_id	ltr553.c	/^static const struct i2c_device_id ltr553_id[] = {$/;"	v	typeref:struct:i2c_device_id	file:
ltr553_init_device	ltr553.c	/^static int ltr553_init_device(struct ltr553_data *ltr)$/;"	f	file:
ltr553_init_input	ltr553.c	/^static int ltr553_init_input(struct ltr553_data *ltr)$/;"	f	file:
ltr553_irq_handler	ltr553.c	/^static irqreturn_t ltr553_irq_handler(int irq, void *data)$/;"	f	file:
ltr553_match_table	ltr553.c	/^static struct of_device_id ltr553_match_table[] = {$/;"	v	typeref:struct:of_device_id	file:
ltr553_parse_dt	ltr553.c	/^static int ltr553_parse_dt(struct device *dev, struct ltr553_data *ltr)$/;"	f	file:
ltr553_pm_ops	ltr553.c	/^static const struct dev_pm_ops ltr553_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
ltr553_probe	ltr553.c	/^static int ltr553_probe(struct i2c_client *client,$/;"	f	file:
ltr553_process_data	ltr553.c	/^static int ltr553_process_data(struct ltr553_data *ltr, int als_ps)$/;"	f	file:
ltr553_ps_disable_work	ltr553.c	/^static void ltr553_ps_disable_work(struct work_struct *work)$/;"	f	file:
ltr553_ps_enable_work	ltr553.c	/^static void ltr553_ps_enable_work(struct work_struct *work)$/;"	f	file:
ltr553_ps_sync_delay	ltr553.c	/^static int ltr553_ps_sync_delay(struct ltr553_data *ltr, unsigned int ps_delay)$/;"	f	file:
ltr553_register_show	ltr553.c	/^static ssize_t ltr553_register_show(struct device *dev,$/;"	f	file:
ltr553_register_store	ltr553.c	/^static ssize_t ltr553_register_store(struct device *dev,$/;"	f	file:
ltr553_regmap_config	ltr553.c	/^static struct regmap_config ltr553_regmap_config = {$/;"	v	typeref:struct:regmap_config	file:
ltr553_remove	ltr553.c	/^static int ltr553_remove(struct i2c_client *client)$/;"	f	file:
ltr553_report_work	ltr553.c	/^static void ltr553_report_work(struct work_struct *work)$/;"	f	file:
ltr553_resume	ltr553.c	/^static int ltr553_resume(struct device *dev)$/;"	f	file:
ltr553_suspend	ltr553.c	/^static int ltr553_suspend(struct device *dev)$/;"	f	file:
lux_threshold_table	helix.c	/^static uint32_t lux_threshold_table[] =$/;"	v	file:
mag_drdy_err	bosch/bmi160_driver.h	/^	u8 mag_drdy_err;$/;"	m	struct:err_status
mag_farr	bosch/bmi160_driver.h	/^	struct bmi160_mag_xyz_s32_t *mag_farr;$/;"	m	struct:fifo_frame_t	typeref:struct:fifo_frame_t::bmi160_mag_xyz_s32_t
mag_frame_cnt	bosch/bmi160_driver.h	/^	unsigned char mag_frame_cnt;$/;"	m	struct:fifo_frame_t
mag_lastf_ts	bosch/bmi160_driver.h	/^	u32 mag_lastf_ts;$/;"	m	struct:fifo_frame_t
mag_manual_enable	bosch/bmi160.h	/^s8 mag_manual_enable;\/**< used for check the mag manual\/auto mode status *\/$/;"	m	struct:bmi160_t
mag_odr	bosch/bmi160_driver.h	/^	u8 mag_odr;$/;"	m	struct:odr_t
mag_pm	bosch/bmi160_driver.h	/^	u8 mag_pm;$/;"	m	struct:pw_mode
mag_sensor_op_mode_t	akm09911.c	/^enum mag_sensor_op_mode_t {$/;"	g	file:
mag_trim	bosch/bmi160.c	/^struct trim_data_t mag_trim;$/;"	v	typeref:struct:trim_data_t
mag_ts	bosch/bmi160_driver.h	/^	u32 mag_ts;$/;"	m	struct:fifo_sensor_time_t
max_current	aw2013_led.c	/^	int max_current;$/;"	m	struct:aw2013_platform_data	file:
max_uv	hall_sensor.c	/^	u32 max_uv;	\/* device allow max voltage *\/$/;"	m	struct:hall_data	file:
max_uv	ltr553.c	/^	int			max_uv;$/;"	m	struct:regulator_map	file:
measure_state	bosch/bmi160.h	/^s8 measure_state;\/**< update measure state *\/$/;"	m	struct:yas532_t
measure_state	bosch/bmi160.h	/^s8 measure_state;\/**< update measure state *\/$/;"	m	struct:yas537_t
min_uv	hall_sensor.c	/^	u32 min_uv;	\/* device allow minimum voltage *\/$/;"	m	struct:hall_data	file:
min_uv	ltr553.c	/^	int			min_uv;$/;"	m	struct:regulator_map	file:
mode	akm09911.c	/^	uint8_t mode;$/;"	m	struct:akm_sensor_state	file:
mutex	ga1auv100.c	/^  struct mutex          mutex ;$/;"	m	struct:ga1a_data	typeref:struct:ga1a_data::mutex	file:
mutex_enable	akm09911.c	/^	struct mutex mutex_enable;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::mutex	file:
mutex_enable	bosch/bmi160_driver.h	/^	struct mutex mutex_enable;$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::mutex
mutex_op_mode	bosch/bmi160_driver.h	/^	struct mutex mutex_op_mode;$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::mutex
name	akm09911.c	/^	char *name;$/;"	m	struct:bosch_sensor_specific	file:
name	bosch/bmi160_driver.h	/^	char *name;$/;"	m	struct:bosch_sensor_specific
name	helix.c	/^	char			*name[2];$/;"	m	struct:pinctrl_config	file:
name	it7236_touchkey.c	/^	char			*name[2];$/;"	m	struct:pinctrl_config	file:
name	it7236_touchkey.h	/^	const char *name;$/;"	m	struct:IT7236_ts_data
name	ltr553.c	/^	char			*name[2];$/;"	m	struct:pinctrl_config	file:
now_operation	ga1auv100.c	/^  int                   now_operation;$/;"	m	struct:ga1a_data	file:
num	bosch/bmi160.h	/^u8 num;\/**< used for increment the index *\/$/;"	m	struct:yas_temp_filter_t
number	helix.c	/^	int number;$/;"	m	struct:data_filter	file:
nxu8010_Open	nxu8010.c	/^static int nxu8010_Open(struct inode *inode, struct file *file)$/;"	f	file:
nxu8010_Release	nxu8010.c	/^static int nxu8010_Release(struct inode *inode, struct file *file)$/;"	f	file:
nxu8010_class	nxu8010.c	/^	struct class *nxu8010_class;$/;"	m	struct:nxu8010_info	typeref:struct:nxu8010_info::class	file:
nxu8010_correlation_show	nxu8010.c	/^static ssize_t nxu8010_correlation_show($/;"	f	file:
nxu8010_dev	nxu8010.c	/^static struct miscdevice nxu8010_dev = {$/;"	v	typeref:struct:miscdevice	file:
nxu8010_device	nxu8010.c	/^	struct device *nxu8010_device;$/;"	m	struct:nxu8010_info	typeref:struct:nxu8010_info::device	file:
nxu8010_driver	nxu8010.c	/^static struct i2c_driver nxu8010_driver = {$/;"	v	typeref:struct:i2c_driver	file:
nxu8010_enable_show	nxu8010.c	/^static ssize_t nxu8010_enable_show($/;"	f	file:
nxu8010_enable_store	nxu8010.c	/^static ssize_t nxu8010_enable_store($/;"	f	file:
nxu8010_exit	nxu8010.c	/^module_exit(nxu8010_exit);$/;"	v
nxu8010_exit	nxu8010.c	/^static void __exit nxu8010_exit(void)$/;"	f	file:
nxu8010_fops	nxu8010.c	/^static const struct file_operations nxu8010_fops = {$/;"	v	typeref:struct:file_operations	file:
nxu8010_i2c_rxdata	nxu8010.c	/^static int nxu8010_i2c_rxdata(struct i2c_client *i2c,$/;"	f	file:
nxu8010_i2c_txdata	nxu8010.c	/^static int nxu8010_i2c_txdata(struct i2c_client *i2c,$/;"	f	file:
nxu8010_id	nxu8010.c	/^static const struct i2c_device_id nxu8010_id[] = {$/;"	v	typeref:struct:i2c_device_id	file:
nxu8010_info	nxu8010.c	/^struct nxu8010_info {$/;"	s	file:
nxu8010_init	nxu8010.c	/^module_init(nxu8010_init);$/;"	v
nxu8010_init	nxu8010.c	/^static int __init nxu8010_init(void)$/;"	f	file:
nxu8010_init_code	nxu8010.c	/^static struct init_array nxu8010_init_code[]=$/;"	v	typeref:struct:init_array	file:
nxu8010_ioctl	nxu8010.c	/^static long nxu8010_ioctl(struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
nxu8010_match_table	nxu8010.c	/^static struct of_device_id nxu8010_match_table[] = {$/;"	v	typeref:struct:of_device_id	file:
nxu8010_pm_ops	nxu8010.c	/^static const struct dev_pm_ops nxu8010_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
nxu8010_probe	nxu8010.c	/^static int nxu8010_probe(struct i2c_client *client, const struct i2c_device_id *id)$/;"	f	file:
nxu8010_reg_show	nxu8010.c	/^static ssize_t nxu8010_reg_show($/;"	f	file:
nxu8010_reg_store	nxu8010.c	/^static ssize_t nxu8010_reg_store($/;"	f	file:
nxu8010_remove	nxu8010.c	/^static int nxu8010_remove(struct i2c_client *client)$/;"	f	file:
nxu8010_resume	nxu8010.c	/^static int nxu8010_resume(struct device *dev)$/;"	f	file:
nxu8010_sensor_init	nxu8010.c	/^static void nxu8010_sensor_init(struct nxu8010_info *sinfo)$/;"	f	file:
nxu8010_suspend	nxu8010.c	/^static int nxu8010_suspend(struct device *dev)$/;"	f	file:
nxu8010_value_show	nxu8010.c	/^static ssize_t nxu8010_value_show($/;"	f	file:
odr	bosch/bmi160_driver.h	/^	struct odr_t odr;$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::odr_t
odr_t	bosch/bmi160_driver.h	/^struct odr_t {$/;"	s
off_time_ms	aw2013_led.c	/^	int off_time_ms;$/;"	m	struct:aw2013_platform_data	file:
op_mode	akm09911.c	/^	uint8_t op_mode;$/;"	m	struct:akm_compass_data	file:
op_mutex	akm09911.c	/^	struct mutex		op_mutex;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::mutex	file:
open_wq	akm09911.c	/^	wait_queue_head_t	open_wq;$/;"	m	struct:akm_compass_data	file:
ops_lock	aw2013_led.c	/^	struct mutex 	ops_lock;$/;"	m	struct:aw2013_led_data	typeref:struct:aw2013_led_data::mutex	file:
ops_lock	ltr553.c	/^	struct mutex		ops_lock;$/;"	m	struct:ltr553_data	typeref:struct:ltr553_data::mutex	file:
overflow	bosch/bmi160.h	/^s8 overflow;\/**< over flow condition check *\/$/;"	m	struct:yas532_t
overflow	bosch/bmi160.h	/^s8 overflow;\/**< over flow condition check *\/$/;"	m	struct:yas537_t
ovflow	akm09911.c	/^	u16 ovflow;$/;"	m	struct:akm0911_mdata_s16	file:
p_bmi160	bosch/bmi160.c	/^struct bmi160_t *p_bmi160;$/;"	v	typeref:struct:bmi160_t
panel_maxy	it7236_touchkey.h	/^	u32 panel_maxy;$/;"	m	struct:IT7236_ts_data
panel_miny	it7236_touchkey.h	/^	u32 panel_miny;$/;"	m	struct:IT7236_ts_data
pdata	aw2013_led.c	/^	struct aw2013_platform_data *pdata;$/;"	m	struct:aw2013_led_data	typeref:struct:aw2013_led_data::aw2013_platform_data	file:
pdata	helix.c	/^	struct helix_platform_data *pdata;$/;"	m	struct:helix_data	typeref:struct:helix_data::helix_platform_data	file:
pedo_data	bosch/bmi160_driver.h	/^	struct pedometer_data_t pedo_data;$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::pedometer_data_t
pedometer_data_t	bosch/bmi160_driver.h	/^struct pedometer_data_t {$/;"	s
period_delay_time_ms	aw2013_led.c	/^	int period_delay_time_ms;$/;"	m	struct:aw2013_platform_data	file:
pin_config	helix.c	/^static struct pinctrl_config pin_config = {$/;"	v	typeref:struct:pinctrl_config	file:
pin_config	it7236_touchkey.c	/^static struct pinctrl_config pin_config = {$/;"	v	typeref:struct:pinctrl_config	file:
pin_config	ltr553.c	/^static struct pinctrl_config pin_config = {$/;"	v	typeref:struct:pinctrl_config	file:
pin_default	akm09911.c	/^	struct pinctrl_state	*pin_default;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::pinctrl_state	file:
pin_sleep	akm09911.c	/^	struct pinctrl_state	*pin_sleep;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::pinctrl_state	file:
pinctrl	akm09911.c	/^	struct pinctrl		*pinctrl;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::pinctrl	file:
pinctrl	helix.c	/^	struct pinctrl		*pinctrl;$/;"	m	struct:pinctrl_config	typeref:struct:pinctrl_config::pinctrl	file:
pinctrl	it7236_touchkey.c	/^	struct pinctrl		*pinctrl;$/;"	m	struct:pinctrl_config	typeref:struct:pinctrl_config::pinctrl	file:
pinctrl	ltr553.c	/^	struct pinctrl		*pinctrl;$/;"	m	struct:pinctrl_config	typeref:struct:pinctrl_config::pinctrl	file:
pinctrl_config	helix.c	/^struct pinctrl_config {$/;"	s	file:
pinctrl_config	it7236_touchkey.c	/^struct pinctrl_config {$/;"	s	file:
pinctrl_config	ltr553.c	/^struct pinctrl_config {$/;"	s	file:
place	akm09911.c	/^	int place;$/;"	m	struct:bosch_sensor_specific	file:
place	bosch/bmi160_driver.h	/^	s8 place;$/;"	m	struct:bmi_client_data
place	bosch/bmi160_driver.h	/^	unsigned int place:3;$/;"	m	struct:bosch_sensor_specific
poll_timer	akm09911.c	/^	struct hrtimer	poll_timer;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::hrtimer	file:
power_config	ltr553.c	/^static struct regulator_map power_config[] = {$/;"	v	typeref:struct:regulator_map	file:
power_enable	ga1auv100.c	/^	int power_enable;$/;"	m	struct:ga1a_data	file:
power_enable	it7236_touchkey.h	/^	u32 power_enable;$/;"	m	struct:IT7236_ts_data
power_enabled	akm09911.c	/^	int	power_enabled;$/;"	m	struct:akm_compass_data	file:
power_enabled	helix.c	/^	bool power_enabled;$/;"	m	struct:helix_data	file:
power_enabled	ltr553.c	/^	int			power_enabled;$/;"	m	struct:ltr553_data	file:
power_on	akm09911.c	/^	bool power_on;$/;"	m	struct:akm_sensor_state	file:
power_on	nxu8010.c	/^	int power_on;$/;"	m	struct:nxu8010_info	file:
poweron	aw2013_led.c	/^	bool poweron;$/;"	m	struct:aw2013_led_data	file:
proximity_cdev	helix.c	/^static struct sensors_classdev proximity_cdev = {$/;"	v	typeref:struct:sensors_classdev	file:
ps_cal	ltr553.c	/^	int			ps_cal;$/;"	m	struct:ltr553_data	file:
ps_cal_is_support	helix.c	/^	bool ps_cal_is_support;$/;"	m	struct:helix_data	file:
ps_cal_result	helix.c	/^	unsigned int ps_cal_result;$/;"	m	struct:helix_data	file:
ps_calculation_def_attribute	helix.c	/^static struct device_attribute ps_calculation_def_attribute = __ATTR(calculation_def,0664,Helix_ps_calculation_def_show,NULL);$/;"	v	typeref:struct:device_attribute	file:
ps_cdev	helix.c	/^	struct sensors_classdev ps_cdev;$/;"	m	struct:helix_data	typeref:struct:helix_data::sensors_classdev	file:
ps_cdev	ltr553.c	/^	struct sensors_classdev	ps_cdev;$/;"	m	struct:ltr553_data	typeref:struct:ltr553_data::sensors_classdev	file:
ps_cdev	ltr553.c	/^static struct sensors_classdev ps_cdev = {$/;"	v	typeref:struct:sensors_classdev	file:
ps_code_attribute	helix.c	/^static struct device_attribute ps_code_attribute = __ATTR(code, 0444, Helix_ps_code_show, NULL);$/;"	v	typeref:struct:device_attribute	file:
ps_code_thd_h_attribute	helix.c	/^static struct device_attribute ps_code_thd_h_attribute = __ATTR(codethdh,0664,Helix_ps_code_thd_h_show,Helix_ps_code_thd_h_store);$/;"	v	typeref:struct:device_attribute	file:
ps_code_thd_l_attribute	helix.c	/^static struct device_attribute ps_code_thd_l_attribute = __ATTR(codethdl,0664,Helix_ps_code_thd_l_show,Helix_ps_code_thd_l_store);$/;"	v	typeref:struct:device_attribute	file:
ps_delay	ltr553.c	/^	int			ps_delay;$/;"	m	struct:ltr553_data	file:
ps_disable_work	ltr553.c	/^	struct work_struct	ps_disable_work;$/;"	m	struct:ltr553_data	typeref:struct:ltr553_data::work_struct	file:
ps_distance_attribute	helix.c	/^static struct device_attribute ps_distance_attribute = __ATTR(distance,0664,Helix_ps_distance_show, Helix_ps_distance_store);$/;"	v	typeref:struct:device_attribute	file:
ps_distance_last	helix.c	/^	int32_t ps_distance_last;$/;"	m	struct:helix_data	file:
ps_distance_table	ltr553.c	/^static int ps_distance_table[] =  { 790, 337, 195, 114, 78, 62, 50 };$/;"	v	file:
ps_enable_attribute	helix.c	/^static struct device_attribute ps_enable_attribute = __ATTR(enable,0664,Helix_ps_enable_show,Helix_ps_enable_store);$/;"	v	typeref:struct:device_attribute	file:
ps_enable_work	ltr553.c	/^	struct work_struct	ps_enable_work;$/;"	m	struct:ltr553_data	typeref:struct:ltr553_data::work_struct	file:
ps_enabled	helix.c	/^	bool ps_enabled;$/;"	m	struct:helix_data	file:
ps_enabled	ltr553.c	/^	bool			ps_enabled;$/;"	m	struct:ltr553_data	file:
ps_input_dev	helix.c	/^	struct input_dev *ps_input_dev;$/;"	m	struct:helix_data	typeref:struct:helix_data::input_dev	file:
ps_led	ltr553.c	/^	int			ps_led;$/;"	m	struct:ltr553_data	file:
ps_measure_rate	ltr553.c	/^	int			ps_measure_rate;$/;"	m	struct:ltr553_data	file:
ps_mrr_table	ltr553.c	/^static int ps_mrr_table[] = { 50, 70, 100, 200, 500, 1000, 2000, 10,$/;"	v	file:
ps_nosuspend_wl	helix.c	/^	struct wake_lock ps_nosuspend_wl;$/;"	m	struct:helix_data	typeref:struct:helix_data::wake_lock	file:
ps_poll_delay	helix.c	/^	ktime_t ps_poll_delay;$/;"	m	struct:helix_data	file:
ps_pulses	ltr553.c	/^	int			ps_pulses;$/;"	m	struct:ltr553_data	file:
ps_suspend_enabled	helix.c	/^	bool ps_suspend_enabled;$/;"	m	struct:helix_data	file:
ps_thd_h	helix.c	/^	uint16_t ps_thd_h;$/;"	m	struct:helix_data	file:
ps_thd_h	helix.h	/^	uint16_t ps_thd_h;$/;"	m	struct:helix_platform_data
ps_thd_l	helix.c	/^	uint16_t ps_thd_l;$/;"	m	struct:helix_data	file:
ps_thd_l	helix.h	/^	uint16_t ps_thd_l;$/;"	m	struct:helix_platform_data
ps_timer	helix.c	/^	struct hrtimer ps_timer;$/;"	m	struct:helix_data	typeref:struct:helix_data::hrtimer	file:
ps_wakelock	helix.c	/^	struct wake_lock ps_wakelock;$/;"	m	struct:helix_data	typeref:struct:helix_data::wake_lock	file:
ps_wakeup_threshold	ltr553.c	/^	int			ps_wakeup_threshold;$/;"	m	struct:ltr553_data	file:
psctrl_reg	helix.h	/^	uint8_t psctrl_reg;$/;"	m	struct:helix_platform_data
pw	bosch/bmi160_driver.h	/^	struct pw_mode pw;$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::pw_mode
pw_mode	bosch/bmi160_driver.h	/^struct pw_mode {$/;"	s
r	bosch/bmi160.h	/^u16 r;\/**<BMM150 R raw data*\/$/;"	m	struct:bmi160_mag_xyzr_t
range	bosch/bmi160_driver.h	/^	struct range_t range; \/*TO DO*\/$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::range_t
range_t	bosch/bmi160_driver.h	/^struct range_t {$/;"	s
raw	helix.c	/^	u16 raw[MAX_FIR_LEN];$/;"	m	struct:data_filter	file:
rawData	IT7236_upgrade.h	/^const unsigned char rawData[] = {  $/;"	v
raw_version	IT7236_upgrade.h	/^const u32 raw_version = 0x03002239;$/;"	v
read_file	helix.c	/^static int read_file(char *filename)$/;"	f	file:
recv_attribute	helix.c	/^static struct device_attribute recv_attribute = __ATTR(recv,0664,Helix_recv_show,Helix_recv_store);$/;"	v	typeref:struct:device_attribute	file:
regALS	ga1auv100.c	/^  u8                    regALS[4] ;$/;"	m	struct:ga1a_data	file:
regUV	ga1auv100.c	/^  u8                    regUV[4] ;$/;"	m	struct:ga1a_data	file:
reg_addr	ltr553.c	/^	unsigned int		reg_addr;$/;"	m	struct:ltr553_data	file:
reg_enable	it7236_touchkey.h	/^	bool reg_enable;$/;"	m	struct:IT7236_ts_data
reg_op_addr	bosch/bmi160_driver.c	/^unsigned int reg_op_addr;$/;"	v
regmap	ltr553.c	/^	struct regmap		*regmap;$/;"	m	struct:ltr553_data	typeref:struct:ltr553_data::regmap	file:
regulator	ltr553.c	/^	struct regulator	*regulator;$/;"	m	struct:regulator_map	typeref:struct:regulator_map::regulator	file:
regulator_map	ltr553.c	/^struct regulator_map {$/;"	s	file:
remove_device_attributes	akm09911.c	/^static void remove_device_attributes($/;"	f	file:
remove_device_binary_attributes	akm09911.c	/^static void remove_device_binary_attributes($/;"	f	file:
remove_sysfs_interfaces	akm09911.c	/^static void remove_sysfs_interfaces(struct akm_compass_data *akm)$/;"	f	file:
rep_cnt	akm09911.c	/^	int	rep_cnt;$/;"	m	struct:akm_compass_data	file:
report_work	ltr553.c	/^	struct work_struct	report_work;$/;"	m	struct:ltr553_data	typeref:struct:ltr553_data::work_struct	file:
revision_id	bosch/bmi160_driver.c	/^	uint16_t revision_id;$/;"	m	struct:bmi160_type_mapping_type	file:
rise_time_ms	aw2013_led.c	/^	int rise_time_ms;$/;"	m	struct:aw2013_platform_data	file:
rxy1y2	bosch/bmi160.h	/^s8 rxy1y2[3];\/**<YAS532 calib rxy1y2 data *\/$/;"	m	struct:bst_yas532_calib_data_t
s16	bosch/bmi160.h	129;"	d
s16	bosch/bmi160.h	152;"	d
s16	bosch/bmi160.h	171;"	d
s16	bosch/bmi160.h	197;"	d
s16	bosch/bmi160.h	212;"	d
s16	bosch/bmi160.h	244;"	d
s16	bosch/bmi160.h	270;"	d
s16	bosch/bmi160.h	285;"	d
s32	bosch/bmi160.h	130;"	d
s32	bosch/bmi160.h	153;"	d
s32	bosch/bmi160.h	172;"	d
s32	bosch/bmi160.h	198;"	d
s32	bosch/bmi160.h	213;"	d
s32	bosch/bmi160.h	245;"	d
s32	bosch/bmi160.h	271;"	d
s32	bosch/bmi160.h	286;"	d
s64	bosch/bmi160.h	131;"	d
s64	bosch/bmi160.h	154;"	d
s64	bosch/bmi160.h	175;"	d
s64	bosch/bmi160.h	178;"	d
s64	bosch/bmi160.h	199;"	d
s64	bosch/bmi160.h	214;"	d
s64	bosch/bmi160.h	248;"	d
s64	bosch/bmi160.h	251;"	d
s64	bosch/bmi160.h	272;"	d
s64	bosch/bmi160.h	287;"	d
s8	bosch/bmi160.h	128;"	d
s8	bosch/bmi160.h	151;"	d
s8	bosch/bmi160.h	170;"	d
s8	bosch/bmi160.h	196;"	d
s8	bosch/bmi160.h	211;"	d
s8	bosch/bmi160.h	243;"	d
s8	bosch/bmi160.h	269;"	d
s8	bosch/bmi160.h	284;"	d
s_akm	akm09911.c	/^static struct akm_compass_data *s_akm;$/;"	v	typeref:struct:akm_compass_data	file:
selftest	bosch/bmi160_driver.h	/^	u8 selftest;$/;"	m	struct:bmi_client_data
selftest_result	bosch/bmi160_driver.h	/^	atomic_t selftest_result;$/;"	m	struct:bmi_client_data
send_attribute	helix.c	/^static struct device_attribute send_attribute = __ATTR(send,0664,Helix_send_show, Helix_send_store);$/;"	v	typeref:struct:device_attribute	file:
sense_conf	akm09911.c	/^	uint8_t sense_conf[AKM_SENSOR_CONF_SIZE];$/;"	m	struct:akm_compass_data	file:
sense_data	akm09911.c	/^	uint8_t	sense_data[AKM_SENSOR_DATA_SIZE];$/;"	m	struct:akm_compass_data	file:
sense_info	akm09911.c	/^	uint8_t sense_info[AKM_SENSOR_INFO_SIZE];$/;"	m	struct:akm_compass_data	file:
sensitivity_table	ltr553.c	/^static int sensitivity_table[] = {150, 150, 100, 100, 0, 0, 100, 1};$/;"	v	file:
sensor_data	nxu8010.c	/^struct sensor_data {$/;"	s	file:
sensor_mutex	akm09911.c	/^	struct	mutex sensor_mutex;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::mutex	file:
sensor_name	bosch/bmi160_driver.c	/^	const char *sensor_name;$/;"	m	struct:bmi160_type_mapping_type	file:
sensor_pinctrl_init	helix.c	/^static int sensor_pinctrl_init(struct device *dev,$/;"	f	file:
sensor_pinctrl_init	it7236_touchkey.c	/^static int sensor_pinctrl_init(struct device *dev,$/;"	f	file:
sensor_pinctrl_init	ltr553.c	/^static int sensor_pinctrl_init(struct device *dev,$/;"	f	file:
sensor_power_config	ltr553.c	/^static int sensor_power_config(struct device *dev, struct regulator_map *map,$/;"	f	file:
sensor_power_deinit	ltr553.c	/^static int sensor_power_deinit(struct device *dev, struct regulator_map *map,$/;"	f	file:
sensor_power_init	ltr553.c	/^static int sensor_power_init(struct device *dev, struct regulator_map *map,$/;"	f	file:
sensor_regulator_configure	bosch/bmi160_driver.c	/^static int sensor_regulator_configure(struct bmi_client_data *data, bool on)$/;"	f	file:
sensor_regulator_configure	nxu8010.c	/^static int sensor_regulator_configure(struct nxu8010_info *data, bool on)$/;"	f	file:
sensor_regulator_power_on	bosch/bmi160_driver.c	/^static int sensor_regulator_power_on(struct bmi_client_data *data, bool on)$/;"	f	file:
sensor_regulator_power_on	nxu8010.c	/^static int sensor_regulator_power_on(struct nxu8010_info *data, bool on)$/;"	f	file:
sensor_type_map	bosch/bmi160_driver.c	/^static const struct bmi160_type_mapping_type sensor_type_map[] = {$/;"	v	typeref:struct:bmi160_type_mapping_type	file:
sensors_cdev	akm09911.c	/^static struct sensors_classdev sensors_cdev = {$/;"	v	typeref:struct:sensors_classdev	file:
sensortime_duration_tbl	bosch/bmi160_driver.c	/^		sensortime_duration_tbl[TS_MAX_HZ] = {$/;"	v	typeref:struct:bmi_sensor_time_odr_tbl	file:
set_vector	bosch/bmi160.h	970;"	d
sig_flag	bosch/bmi160_driver.h	/^	u8 sig_flag;$/;"	m	struct:bmi_client_data
sigmotion_init_interrupts	bosch/bmi160_driver.c	/^static int sigmotion_init_interrupts(u8 sig_map_int_pin)$/;"	f	file:
sign	ltr553.c	/^	int sign;$/;"	m	struct:als_coeff	file:
sign_x	akm09911.c	/^	int sign_x:2;$/;"	m	struct:bosch_sensor_axis_remap	file:
sign_x	bosch/bmi160_driver.h	/^	int sign_x:2;$/;"	m	struct:bosch_sensor_axis_remap
sign_y	akm09911.c	/^	int sign_y:2;$/;"	m	struct:bosch_sensor_axis_remap	file:
sign_y	bosch/bmi160_driver.h	/^	int sign_y:2;$/;"	m	struct:bosch_sensor_axis_remap
sign_z	akm09911.c	/^	int sign_z:2;$/;"	m	struct:bosch_sensor_axis_remap	file:
sign_z	bosch/bmi160_driver.h	/^	int sign_z:2;$/;"	m	struct:bosch_sensor_axis_remap
slaveAddr	it7236_touchkey.c	/^	unsigned short slaveAddr;$/;"	m	struct:ioctl_cmd168	file:
src_x	akm09911.c	/^	int src_x:3;$/;"	m	struct:bosch_sensor_axis_remap	file:
src_x	bosch/bmi160_driver.h	/^	int src_x:3;$/;"	m	struct:bosch_sensor_axis_remap
src_y	akm09911.c	/^	int src_y:3;$/;"	m	struct:bosch_sensor_axis_remap	file:
src_y	bosch/bmi160_driver.h	/^	int src_y:3;$/;"	m	struct:bosch_sensor_axis_remap
src_z	akm09911.c	/^	int src_z:3;$/;"	m	struct:bosch_sensor_axis_remap	file:
src_z	bosch/bmi160_driver.h	/^	int src_z:3;$/;"	m	struct:bosch_sensor_axis_remap
state	akm09911.c	/^	struct akm_sensor_state state;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::akm_sensor_state	file:
state	helix.c	/^	struct pinctrl_state	*state[2];$/;"	m	struct:pinctrl_config	typeref:struct:pinctrl_config::pinctrl_state	file:
state	it7236_touchkey.c	/^	struct pinctrl_state	*state[2];$/;"	m	struct:pinctrl_config	typeref:struct:pinctrl_config::pinctrl_state	file:
state	ltr553.c	/^	struct pinctrl_state	*state[2];$/;"	m	struct:pinctrl_config	typeref:struct:pinctrl_config::pinctrl_state	file:
state_reg	helix.h	/^	uint8_t state_reg;$/;"	m	struct:helix_platform_data
stc_enable	bosch/bmi160_driver.h	/^	u8 stc_enable;$/;"	m	struct:bmi_client_data
std	bosch/bmi160_driver.h	/^	u8 std;$/;"	m	struct:bmi_client_data
strtok	ga1auv100.c	/^static char *strtok( char *s1, char *s2 )$/;"	f	file:
sum	helix.c	/^	int sum;$/;"	m	struct:data_filter	file:
supply	ltr553.c	/^	char			*supply;$/;"	m	struct:regulator_map	file:
sys_device_create	nxu8010.c	/^static int sys_device_create(struct nxu8010_info *sinfo)$/;"	f	file:
temp_data	bosch/bmi160.h	/^struct yas_temp_filter_t temp_data;\/**< temp data *\/$/;"	m	struct:yas532_t	typeref:struct:yas532_t::yas_temp_filter_t
transform	bosch/bmi160.h	/^const s8 *transform;\/**< transform condition check  *\/$/;"	m	struct:yas532_t
transform	bosch/bmi160.h	/^const s8 *transform;\/**< transform condition check  *\/$/;"	m	struct:yas537_t
transmittance	helix.h	/^	uint32_t transmittance;$/;"	m	struct:helix_platform_data
trim_data_t	bosch/bmi160.h	/^struct trim_data_t {$/;"	s
ts_delat	bosch/bmi160_driver.c	/^	u32 ts_delat;\/*sub current delat fifo_time*\/$/;"	m	struct:bmi_sensor_time_odr_tbl	file:
ts_duration_lsb	bosch/bmi160_driver.c	/^	u32 ts_duration_lsb;$/;"	m	struct:bmi_sensor_time_odr_tbl	file:
ts_duration_us	bosch/bmi160_driver.c	/^	u32 ts_duration_us;$/;"	m	struct:bmi_sensor_time_odr_tbl	file:
ts_workqueue	it7236_touchkey.h	/^	struct workqueue_struct *ts_workqueue;$/;"	m	struct:IT7236_ts_data	typeref:struct:IT7236_ts_data::workqueue_struct
u16	bosch/bmi160.h	123;"	d
u16	bosch/bmi160.h	146;"	d
u16	bosch/bmi160.h	189;"	d
u16	bosch/bmi160.h	203;"	d
u16	bosch/bmi160.h	218;"	d
u16	bosch/bmi160.h	262;"	d
u16	bosch/bmi160.h	276;"	d
u16	bosch/bmi160.h	291;"	d
u32	bosch/bmi160.h	124;"	d
u32	bosch/bmi160.h	147;"	d
u32	bosch/bmi160.h	190;"	d
u32	bosch/bmi160.h	204;"	d
u32	bosch/bmi160.h	219;"	d
u32	bosch/bmi160.h	263;"	d
u32	bosch/bmi160.h	277;"	d
u32	bosch/bmi160.h	292;"	d
u64	bosch/bmi160.h	125;"	d
u64	bosch/bmi160.h	148;"	d
u64	bosch/bmi160.h	176;"	d
u64	bosch/bmi160.h	179;"	d
u64	bosch/bmi160.h	205;"	d
u64	bosch/bmi160.h	220;"	d
u64	bosch/bmi160.h	249;"	d
u64	bosch/bmi160.h	252;"	d
u64	bosch/bmi160.h	278;"	d
u64	bosch/bmi160.h	293;"	d
u8	bosch/bmi160.h	122;"	d
u8	bosch/bmi160.h	145;"	d
u8	bosch/bmi160.h	188;"	d
u8	bosch/bmi160.h	202;"	d
u8	bosch/bmi160.h	217;"	d
u8	bosch/bmi160.h	261;"	d
u8	bosch/bmi160.h	275;"	d
u8	bosch/bmi160.h	290;"	d
update_lock	helix.c	/^	struct mutex update_lock;$/;"	m	struct:helix_data	typeref:struct:helix_data::mutex	file:
use_fir	helix.c	/^	bool use_fir;$/;"	m	struct:helix_data	file:
use_fir	helix.h	/^	bool use_fir;$/;"	m	struct:helix_platform_data
use_hrtimer	akm09911.c	/^	int	use_hrtimer;$/;"	m	struct:akm_compass_data	file:
use_irq	it7236_touchkey.h	/^	int use_irq;$/;"	m	struct:IT7236_ts_data
uv_attribute_group	ga1auv100.c	/^static struct attribute_group uv_attribute_group =$/;"	v	typeref:struct:attribute_group	file:
uv_attributes	ga1auv100.c	/^static struct attribute *uv_attributes[] =$/;"	v	typeref:struct:attribute	file:
uv_data_correct	ga1auv100.c	/^static void uv_data_correct(u32 *data_uv, struct ga1a_data *data )$/;"	f	file:
uv_data_polling	ga1auv100.c	/^static void uv_data_polling( struct work_struct *work )$/;"	f	file:
uv_delay	ga1auv100.c	/^  int                   uv_delay ;$/;"	m	struct:ga1a_data	file:
uv_delay_show	ga1auv100.c	/^uv_delay_show( struct device *dev,$/;"	f	file:
uv_delay_store	ga1auv100.c	/^uv_delay_store( struct device *dev,$/;"	f	file:
uv_enable_show	ga1auv100.c	/^uv_enable_show( struct device *dev,$/;"	f	file:
uv_enable_store	ga1auv100.c	/^uv_enable_store( struct device *dev,$/;"	f	file:
uv_enabled	ga1auv100.c	/^  int                   uv_enabled ;$/;"	m	struct:ga1a_data	file:
uv_input_dev	ga1auv100.c	/^  struct input_dev      *uv_input_dev ;$/;"	m	struct:ga1a_data	typeref:struct:ga1a_data::input_dev	file:
uv_input_init	ga1auv100.c	/^static int uv_input_init( struct ga1a_data *data )$/;"	f	file:
uv_mode	ga1auv100.c	/^  int                   uv_mode ;$/;"	m	struct:ga1a_data	file:
uv_mode_change	ga1auv100.c	/^uv_mode_change(  u32 *data_uv, struct ga1a_data *data )$/;"	f	file:
uv_onoff	ga1auv100.c	/^static int uv_onoff( u8 onoff, struct ga1a_data *data )$/;"	f	file:
uv_raw_data_show	ga1auv100.c	/^uv_raw_data_show( struct device *dev,$/;"	f	file:
uv_setting_show	ga1auv100.c	/^uv_setting_show( struct device *dev,$/;"	f	file:
uv_setting_store	ga1auv100.c	/^uv_setting_store( struct device *dev,$/;"	f	file:
uv_val_prev	ga1auv100.c	/^  int                   uv_val_prev ;$/;"	m	struct:ga1a_data	file:
uv_work	ga1auv100.c	/^  struct delayed_work   uv_work ; $/;"	m	struct:ga1a_data	typeref:struct:ga1a_data::delayed_work	file:
v	akm09911.c	/^		int16_t v[3];$/;"	m	union:bosch_sensor_data::__anon1	file:
v	bosch/bmi160_driver.h	/^		int16_t v[3];$/;"	m	union:bosch_sensor_data::__anon3
v_fifo_data_u8	bosch/bmi160.c	/^u8 v_fifo_data_u8[FIFO_FRAME] = {BMI160_INIT_VALUE};$/;"	v
v_hard_offset_s8	bosch/bmi160.h	/^s8 v_hard_offset_s8[3];\/**< offset write array*\/$/;"	m	struct:yas532_t
val_mutex	akm09911.c	/^	struct mutex	val_mutex;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::mutex	file:
value	akm09911.c	/^	struct akm0911_mdata_s16 value;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::akm0911_mdata_s16	file:
value	nxu8010.c	/^	uint8_t value;$/;"	m	struct:init_array	file:
vcc	aw2013_led.c	/^	struct regulator *vcc;$/;"	m	struct:aw2013_led_data	typeref:struct:aw2013_led_data::regulator	file:
vcc_i2c	it7236_touchkey.h	/^	struct regulator *vcc_i2c;$/;"	m	struct:IT7236_ts_data	typeref:struct:IT7236_ts_data::regulator
vdd	akm09911.c	/^	struct regulator	*vdd;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::regulator	file:
vdd	aw2013_led.c	/^	struct regulator *vdd;$/;"	m	struct:aw2013_led_data	typeref:struct:aw2013_led_data::regulator	file:
vdd	bosch/bmi160_driver.h	/^	struct regulator *vdd;$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::regulator
vdd	helix.c	/^	struct regulator *vdd;$/;"	m	struct:helix_data	typeref:struct:helix_data::regulator	file:
vdd	it7236_touchkey.h	/^	struct regulator *vdd;$/;"	m	struct:IT7236_ts_data	typeref:struct:IT7236_ts_data::regulator
vdd	nxu8010.c	/^	struct regulator *vdd;$/;"	m	struct:nxu8010_info	typeref:struct:nxu8010_info::regulator	file:
vddio	hall_sensor.c	/^	struct regulator *vddio;$/;"	m	struct:hall_data	typeref:struct:hall_data::regulator	file:
ver	bosch/bmi160.h	/^u8 ver;\/**<YAS532 calib ver data*\/$/;"	m	struct:bst_yas537_calib_data_t
vio	akm09911.c	/^	struct regulator	*vio;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::regulator	file:
vio	bosch/bmi160_driver.h	/^	struct regulator *vio;$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::regulator
vio	helix.c	/^	struct regulator *vio;$/;"	m	struct:helix_data	typeref:struct:helix_data::regulator	file:
wTemp	it7236_touchkey.c	/^static u8 wTemp[128] = {0x00};$/;"	v	file:
waitCommandDone	it7236_touchkey.c	/^static bool waitCommandDone(void)$/;"	f	file:
wait_reg	helix.c	/^	uint8_t wait_reg;$/;"	m	struct:helix_data	file:
wait_reg	helix.h	/^	uint8_t wait_reg;$/;"	m	struct:helix_platform_data
wake_count	ltr553.c	/^	atomic_t		wake_count;$/;"	m	struct:ltr553_data	file:
wakeup	hall_sensor.c	/^	bool wakeup;	\/* device can wakeup system or not *\/$/;"	m	struct:hall_data	file:
wakeup_pin	it7236_touchkey.h	/^	u32 wakeup_pin;$/;"	m	struct:IT7236_ts_data
win_fac	ltr553.c	/^	int win_fac;$/;"	m	struct:als_coeff	file:
wk_delay	akm09911.c	/^	atomic_t wk_delay;$/;"	m	struct:akm_compass_data	file:
wkar_step_detector_status	bosch/bmi160_driver.h	/^	u8 wkar_step_detector_status;$/;"	m	struct:pedometer_data_t
wkqueue_en	bosch/bmi160_driver.h	/^	atomic_t wkqueue_en; \/*TO DO acc gyro mag*\/$/;"	m	struct:bmi_client_data
work	akm09911.c	/^	struct delayed_work work;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::delayed_work	file:
work	bosch/bmi160_driver.h	/^	struct delayed_work work;$/;"	m	struct:bmi_client_data	typeref:struct:bmi_client_data::delayed_work
work_queue	akm09911.c	/^	struct workqueue_struct	*work_queue;$/;"	m	struct:akm_compass_data	typeref:struct:akm_compass_data::workqueue_struct	file:
workqueue	ltr553.c	/^	struct workqueue_struct	*workqueue;$/;"	m	struct:ltr553_data	typeref:struct:ltr553_data::workqueue_struct	file:
x	akm09911.c	/^			int16_t x;$/;"	m	struct:bosch_sensor_data::__anon1::__anon2	file:
x	bosch/bmi160.h	/^s16 x;\/**< BMM150 X raw data*\/$/;"	m	struct:bmi160_mag_xyzr_t
x	bosch/bmi160.h	/^s16 x;\/**< BMM150 and AKM09911 and AKM09912 X raw data*\/$/;"	m	struct:bmi160_mag_t
x	bosch/bmi160.h	/^s16 x;\/**<BMM150 X compensated data*\/$/;"	m	struct:bmi160_mag_xyz_s32_t
x	bosch/bmi160.h	/^s16 x;\/**<accel X  data*\/$/;"	m	struct:bmi160_accel_t
x	bosch/bmi160.h	/^s16 x;\/**<gyro X  data*\/$/;"	m	struct:bmi160_gyro_t
x	bosch/bmi160_driver.c	/^	s16 x;$/;"	m	struct:bmi160_axis_data_t	file:
x	bosch/bmi160_driver.h	/^			int16_t x;$/;"	m	struct:bosch_sensor_data::__anon3::__anon4
xy1y2_to_xyz	bosch/bmi160.c	/^static void xy1y2_to_xyz(u16 *xy1y2, s32 *xyz)$/;"	f	file:
xyz	bosch/bmi160.h	/^struct yas_vector xyz; \/*!< X, Y, Z measurement data of the sensor *\/$/;"	m	struct:yas537_t	typeref:struct:yas537_t::yas_vector
y	akm09911.c	/^			int16_t y;$/;"	m	struct:bosch_sensor_data::__anon1::__anon2	file:
y	bosch/bmi160.h	/^s16 y;\/**< BMM150 Y raw data*\/$/;"	m	struct:bmi160_mag_xyzr_t
y	bosch/bmi160.h	/^s16 y;\/**< BMM150 and AKM09911 and AKM09912 Y raw data*\/$/;"	m	struct:bmi160_mag_t
y	bosch/bmi160.h	/^s16 y;\/**<BMM150 Y compensated data*\/$/;"	m	struct:bmi160_mag_xyz_s32_t
y	bosch/bmi160.h	/^s16 y;\/**<accel Y  data*\/$/;"	m	struct:bmi160_accel_t
y	bosch/bmi160.h	/^s16 y;\/**<gyro Y  data*\/$/;"	m	struct:bmi160_gyro_t
y	bosch/bmi160_driver.c	/^	s16 y;$/;"	m	struct:bmi160_axis_data_t	file:
y	bosch/bmi160_driver.h	/^			int16_t y;$/;"	m	struct:bosch_sensor_data::__anon3::__anon4
y_max	it7236_touchkey.h	/^	u32 y_max;$/;"	m	struct:IT7236_ts_data
y_min	it7236_touchkey.h	/^	u32 y_min;$/;"	m	struct:IT7236_ts_data
yas532_data	bosch/bmi160.c	/^struct yas532_t yas532_data;$/;"	v	typeref:struct:yas532_t
yas532_t	bosch/bmi160.h	/^struct yas532_t {$/;"	s
yas532_vector	bosch/bmi160.h	/^struct yas532_vector {$/;"	s
yas532_vector_xyz	bosch/bmi160.h	/^s32 yas532_vector_xyz[3];\/**< YAS532 compensated xyz data*\/$/;"	m	struct:yas532_vector
yas532_version_ac_coef	bosch/bmi160.c	/^static const int yas532_version_ac_coef[] = {YAS532_VERSION_AC_COEF_X,$/;"	v	file:
yas537_data	bosch/bmi160.c	/^struct yas537_t yas537_data;$/;"	v	typeref:struct:yas537_t
yas537_set_vector	bosch/bmi160.h	1070;"	d
yas537_t	bosch/bmi160.h	/^struct yas537_t {$/;"	s
yas537_vector_xyz	bosch/bmi160.h	/^	s32 yas537_vector_xyz[3]; \/*!< vector data *\/$/;"	m	struct:yas_vector
yas_temp_filter_t	bosch/bmi160.h	/^struct yas_temp_filter_t {$/;"	s
yas_vector	bosch/bmi160.h	/^struct yas_vector {$/;"	s
z	akm09911.c	/^			int16_t z;$/;"	m	struct:bosch_sensor_data::__anon1::__anon2	file:
z	bosch/bmi160.h	/^s16 z;\/**< BMM150 and AKM09911 and AKM09912 Z raw data*\/$/;"	m	struct:bmi160_mag_t
z	bosch/bmi160.h	/^s16 z;\/**<BMM150 Z compensated data*\/$/;"	m	struct:bmi160_mag_xyz_s32_t
z	bosch/bmi160.h	/^s16 z;\/**<BMM150 Z raw data*\/$/;"	m	struct:bmi160_mag_xyzr_t
z	bosch/bmi160.h	/^s16 z;\/**<accel Z  data*\/$/;"	m	struct:bmi160_accel_t
z	bosch/bmi160.h	/^s16 z;\/**<gyro Z  data*\/$/;"	m	struct:bmi160_gyro_t
z	bosch/bmi160_driver.c	/^	s16 z;$/;"	m	struct:bmi160_axis_data_t	file:
z	bosch/bmi160_driver.h	/^			int16_t z;$/;"	m	struct:bosch_sensor_data::__anon3::__anon4
